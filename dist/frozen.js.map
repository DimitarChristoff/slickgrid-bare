{"version":3,"sources":["webpack:///frozen.js","webpack:///webpack/bootstrap b4d968a9885b53a17df8?2a24**","webpack:///./src/slick.core.js?591b**","webpack:///external \"jquery\"?0b76**","webpack:///./src/interact.js?afe3*","webpack:///./src/slick-frozen.grid.js?47c2"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","EventData","isPropagationStopped","isImmediatePropagationStopped","this","stopPropagation","stopImmediatePropagation","Event","handlers","subscribe","fn","push","unsubscribe","i","length","splice","notify","args","e","scope","returnValue","EventHandler","event","handler","unsubscribeAll","Range","fromRow","fromCell","toRow","toCell","undefined","Math","min","max","isSingleRow","isSingleCell","contains","row","cell","toString","NonDataItem","__nonDataRow","Group","__group","level","count","value","title","collapsed","totals","rows","groups","groupingKey","GroupTotals","__groupTotals","group","initialized","EditorLock","activeEditController","isActive","editController","activate","commitCurrentEdit","cancelCurrentEdit","deactivate","TreeColumns","treeColumns","init","mapToId","columns","forEach","column","columnsById","filter","node","condition","valid","sort","grid","a","b","indexA","getOrDefault","getColumnIndex","indexB","getDepth","getColumnsInDepth","depth","current","n","extractColumns","concat","result","hasOwnProperty","cloneTreeColumns","$","extend","hasDepth","getTreeColumns","getColumnsInGroup","visibleColumns","visible","reOrder","getById","getInIds","ids","map","Object","defineProperty","Slick","NonDataRow","GlobalEditorLock","keyCode","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","SPACE","default","prototype","equals","require","_typeof","Symbol","iterator","obj","constructor","realWindow","blank","isElement","o","_window","getWindow","window","test","Element","nodeType","nodeName","isWindow","thing","Window","isDocFrag","DocumentFragment","isArray","isObject","isFunction","isNumber","isBool","isString","trySelector","document","querySelector","dest","source","prop","pointerExtend","deprecated","vendor","prefixedPropREs","indexOf","copyCoords","src","page","x","y","client","timeStamp","setEventXY","targetObj","pointers","interaction","pointer","pointerAverage","getPageXY","tmpXY","getClientXY","Date","getTime","setEventDeltas","prev","cur","dt","speed","hypot","vx","vy","isNativePointer","supportsTouch","Touch","getXY","type","xy","isOperaMobile","scrollX","scrollY","getScrollXY","win","documentElement","scrollLeft","scrollTop","getPointerId","pointerId","identifier","getActualElement","element","SVGElementInstance","correspondingUseElement","rootNode","ownerDocument","defaultView","parentWindow","getElementClientRect","clientRect","SVGElement","getBoundingClientRect","getClientRects","left","right","top","bottom","width","height","getElementRect","isIOS7","scroll","getTouchPair","touches","changedTouches","average","pageX","pageY","clientX","clientY","screenX","screenY","touchBBox","minX","minY","maxX","maxY","touchDistance","deltaSource","defaultOptions","sourceX","sourceY","dx","dy","touchAngle","prevAngle","angle","atan","PI","dr","drClamped","getOriginXY","interactable","origin","options","parentElement","getRect","closest","_getQBezierValue","t","p1","p2","p3","iT","getQuadraticCurvePoint","startX","startY","cpX","cpY","endX","endY","position","easeOutQuad","d","nodeContains","parent","child","parentNode","selector","matchesSelector","host","inContext","_context","testIgnore","interactableElement","ignoreFrom","matchesUpTo","testAllow","allowFrom","checkAxis","axis","thisAxis","drag","checkSnap","action","snap","enabled","checkRestrict","restrict","checkAutoScroll","autoScroll","withinInteractionLimit","maxActions","name","maxPerElement","activeInteractions","targetCount","targetElementCount","len","interactions","otherAction","prepared","active","interacting","maxInteractions","target","indexOfDeepestElement","elements","dropzone","deepestZone","index","deepestZoneParents","dropzoneParents","unshift","HTMLElement","SVGSVGElement","ownerSVGElement","parents","lastChild","previousSibling","Interaction","dropTarget","dropElement","prevDropTarget","prevDropElement","edges","matches","matchElements","inertiaStatus","smoothEnd","ending","startEvent","upCoords","xe","ye","sx","sy","t0","vx0","vys","duration","resumeDx","resumeDy","lambda_v0","one_ve_v0","Function","bind","boundInertiaFrame","inertiaFrame","boundSmoothEndFrame","smoothEndFrame","that","activeDrops","dropzones","rects","pointerIds","downTargets","downTimes","holdTimers","prevCoords","curCoords","startCoords","pointerDelta","downEvent","downPointer","_eventTarget","_curEventTarget","prevEvent","tapTime","prevTap","startOffset","restrictOffset","snapOffsets","gesture","start","startDistance","prevDistance","distance","scale","startAngle","snapStatus","realX","realY","snappedX","snappedY","targets","locked","changed","restrictStatus","restrictedX","restrictedY","restricted","pointerIsDown","pointerWasMoved","gesturing","dragging","resizing","resizeAxes","mouse","getInteractionFromPointer","eventType","eventTarget","mouseEvent","pointerType","inertia","allowResume","supportsPointerEvent","doOnInteractions","method","path","curEventTarget","currentTarget","prevTouchTime","_updateEventTargets","InteractEvent","phase","related","starting","coords","relativePoints","range","elementRect","x0","y0","clientX0","clientY0","ctrlKey","altKey","shiftKey","metaKey","button","buttons","detail","relatedTarget","zeroResumeDelta","resize","square","axes","box","ds","da","prevScale","velocityX","velocityY","atan2","overlap","up","down","swipe","velocity","preventOriginalDefault","originalEvent","preventDefault","getActionCursor","cursor","actionCursors","cursorKey","edgeNames","checkResizeEdge","rect","margin","defaultActionChecker","resizeEdges","shouldResize","actionIsEnabled","resizeOptions","edge","validateAction","actionName","delegateListener","useCapture","fakeEvent","delegated","delegatedEvents","selectors","context","contexts","listeners","j","delegateUseCapture","interact","interactables","get","Interactable","_element","_iEvents","Node","events","add","pEventTypes","pointerDown","move","pointerHover","_doc","documents","listenToDocument","set","warnOnce","message","warned","console","warn","apply","arguments","endAllInteractions","pointerEnd","doc","PointerEvent","MSPointerEvent","over","out","cancel","selectorDown","pointerMove","pointerOver","pointerOut","pointerUp","pointerCancel","autoScrollMove","frameElement","parentDoc","error","windowParentError","checkAndPreventDefault","useAttachEvent","currentAction","array","nodeList","ie8MatchesSelector","replace","prefixedMatchesSelector","limit","el","createTextNode","wrap","sqrt","dynamicDrop","base","accept","actionChecker","styleCursor","dropChecker","manualStart","Infinity","drop","preserveAspectRatio","NaN","invert","perAction","endOnly","offsets","container","resistance","minSpeed","endSpeed","smoothEndDuration","_holdDuration","now","dtx","prevTimeX","dty","prevTimeY","scrollBy","isScrolling","cancelFrame","reqFrame","stop","DocumentTouch","navigator","userAgent","pointerMoveTolerance","all","atob","resizex","resizey","resizexy","resizetop","resizeleft","resizebottom","resizeright","resizetopleft","resizebottomright","resizetopright","resizebottomleft","wheelEvent","eventTypes","globalEvents","appName","match","platform","appVersion","requestAnimationFrame","cancelAnimationFrame","listener","elementIndex","typeCount","attachedListeners","supplied","wrapped","useCount","ret","listenerIndex","immediatePropagationStopped","srcElement","preventDef","stopProp","stopImmProp","addEvent","on","Boolean","remove","removeEvent","cancelBubble","_elements","_targets","_attachedListeners","webkit","ptr","pushCurMatches","curMatches","curMatchElements","prevTargetElement","addPointer","elementInteractable","elementAction","getAction","forEachSelector","validateSelector","style","pushMatches","querySelectorAll","eventCopy","pointerIndex","setTimeout","pointerHold","collectEventTargets","forceAction","newAction","setModifications","preEnd","shouldMove","shouldSnap","shouldRestrict","setSnapping","setRestriction","setStartOffsets","snapOffset","offset","pageUp","clientUp","inertiaPosition","recordPointer","duplicateMove","clearTimeout","absX","abs","absY","targetAxis","thisInteraction","getDraggable","selectorInteractable","dragStart","dragEvent","fire","setActiveDrops","dropEvents","getDropEvents","fireActiveDrops","dragMove","draggableElement","getDrop","leave","enter","resizeStart","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","previous","delta","deltaRect","resizeMove","invertible","originalEdges","swap","gestureStart","gestureEvent","gestureMove","isNaN","removePointer","ie8Dblclick","endEvent","inertiaOptions","pointerSpeed","inertiaPossible","endSnap","endRestrict","snapRestrict","vy0","v0","calcInertia","statusObject","useStatusXY","modifiedXe","modifiedYe","collectDrops","drops","dropElements","currentElement","prevElement","dragElement","possibleDrops","validDrops","dropCheck","dropIndex","pointerEvent","draggable","dragLeave","prevDropzone","dragEnter","dragmove","clearTargets","lambda","te","progress","exp","quadPoint","collectSelectors","els","isSet","firePointers","interval","createNewDoubleTap","originalPointer","double","propagationStopped","doubleTap","matchElement","pageCoords","status","relIndex","relative","inRange","snapChanged","restriction","prevent","inertiaDur","log","innerWidth","innerHeight","interactionListeners","indexOfElement","callback","setOnEvents","phases","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","onstart","onmove","onend","oninertiastart","setPerAction","option","checker","dropped","dropOverlap","horizontal","vertical","dragRect","cx","cy","overlapArea","overlapRatio","newValue","resizable","squareResize","gesturable","actions","setOptions","thisOption","mode","createSnapGrid","gridOffset","anchors","paths","elementOrigin","allActions","rectChecker","iEvent","onEvent","funcName","search","trim","split","off","eventList","matchFound","useCap","methods","perActions","settings","setting","unset","enableDragging","enableResizing","enableGesturing","debug","downTime","getPointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","newvalue","offsetX","offsetY","gridx","round","gridy","newX","newY","elems","lastTime","vendors","currTime","timeToCall","_interopRequireDefault","__esModule","SlickGrid","data","$container","_jquery2","Error","maxSupportedCssHeight","getMaxSupportedCssHeight","scrollbarDimensions","measureScrollbar","defaults","validateAndEnforceOptions","columnDefaults","defaultColumnWidth","minWidth","maxWidth","empty","css","addClass","uid","$focusSink","appendTo","$paneHeaderL","$paneHeaderR","$paneTopL","$paneTopR","$paneBottomL","$paneBottomR","$headerScrollerL","$headerScrollerR","$headerScroller","$groupHeadersL","$groupHeadersR","$groupHeaders","$headerL","$headerR","$headers","$headerRowScrollerL","$headerRowScrollerR","$headerRowScroller","$headerRowSpacerL","getCanvasWidth","$headerRowSpacerR","$headerRowL","$headerRowR","$headerRow","$topPanelScrollerL","$topPanelScrollerR","$topPanelScroller","$topPanelL","$topPanelR","$topPanel","showTopPanel","hide","showHeaderRow","$viewportTopL","$viewportTopR","$viewportBottomL","$viewportBottomR","$viewport","$activeViewportNode","$canvasTopL","$canvasTopR","$canvasBottomL","$canvasBottomR","$canvas","$activeCanvasNode","$footerRowScrollerR","$footerRowScrollerL","$footerRowScroller","$footerRowSpacerL","$footerRowSpacerR","$footerRowL","$footerRowR","$footerRow","showFooterRow","$focusSink2","clone","explicitInitialization","finishInitialization","getViewportWidth","getViewportHeight","measureCellPaddingAndBorder","disableSelection","enableTextSelectionOnCells","is","setFrozenOptions","setPaneVisibility","setScroller","setOverflow","updateColumnCaches","createColumnHeaders","createColumnGroupHeaders","createColumnFooter","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","mousewheel","frozenColumn","hasFrozenRows","handleMouseWheel","handleHeaderContextMenu","handleHeaderClick","delegate","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","handleKeyDown","handleClick","handleDblClick","handleContextMenu","handleMouseEnter","handleMouseLeave","_interact2","handleDrag","handleDragStart","handleDragEnd","toLowerCase","hasFrozenColumns","registerPlugin","plugin","plugins","self","unregisterPlugin","destroy","setSelectionModel","model","selectionModel","onSelectedRangesChanged","handleSelectedRangesChanged","getSelectionModel","getCanvasNode","getActiveCanvasNode","setActiveCanvasNode","getCanvases","getViewportNode","getActiveViewportNode","setActiveViewportNode","$c","body","dim","clientWidth","clientHeight","getHeadersWidth","headersWidth","headersWidthL","headersWidthR","ii","viewportW","getHeadersWidthL","getHeadersWidthR","availableWidth","viewportHasVScroll","canvasWidthL","canvasWidthR","totalRowWidth","fullWidthRows","updateCanvasWidth","forceColumnWidthsUpdate","widthChanged","oldCanvasWidth","canvasWidth","oldCanvasWidthL","oldCanvasWidthR","viewportHasHScroll","applyColumnWidths","$target","jquery","attr","supportedHeight","testUpTo","div","elem","frozenBottom","scrollWidth","scrollHeight","$elem","$boundAncestors","handleActiveCellPositionChange","unbindAncestorScrollEvents","unbind","updateColumnHeader","columnId","toolTip","idx","columnDef","$header","children","eq","trigger","onBeforeHeaderCellDestroy","html","onHeaderCellRendered","getHeaderRow","getHeaderRowColumn","$headerRowTarget","getFooterRow","getFooterRowColumn","$footerRowTarget","$footer","find","each","onBeforeFooterRowCellDestroy","footerRowCell","onFooterRowCellRendered","columnsLength","frozenColumnsValid","groupColumns","indexGroup","headerCssClass","alert","applyColumnGroupHeaderWidths","onMouseEnter","onMouseLeave","removeClass","onBeforeHeaderRowCellDestroy","$headerTarget","header","headerColumnWidthDiff","enableColumnReorder","sortable","append","headerRowCell","onHeaderRowCellRendered","setSortColumns","sortColumns","setupColumnResize","setupColumnReorder","click","hasClass","$col","getEditorLock","sortOpts","sortAsc","multiColumnSort","defaultSortAsc","onSort","sortCols","col","sortCol","currentPositionInHeader","currentPosition","limitPositionInGroup","idColumn","groupColumnOfPreviousPosition","startLimit","endLimit","some","groupColumn","end","arr","lastIndexOf","columnPositionValidInGroup","$item","positionValid","text","placeholder","createElement","className","offsetWidth","offsetHeight","after","zIndex","marginLeft","transform","validPositionInGroup","removeChild","setColumns","getColumns","newColumns","removeData","onColumnsReordered","impactedColumns","getImpactedColumns","classList","columnElements","firstResizable","lastResizable","forceFitColumns","$handle","activeColumn","previousWidth","autosizeColumns","applyColumnHeaderWidths","syncColumnCellResize","invalidateAllRows","render","onColumnsResized","getVBoxDelta","$el","val","parseFloat","parseInt","frozenRow","numVisibleRows","frozenRowsHeight","rowHeight","dataLength","getDataLength","actualFrozenRow","show","overflow-x","overflow-y","$headerScrollContainer","$headerRowScrollContainer","$footerRowScrollContainer","$viewportScrollContainerX","$viewportScrollContainerY","h","v","headerColumnHeightDiff","r","cellWidthDiff","cellHeightDiff","absoluteColumnMinWidth","$style","rules","topPanelHeight","headerRowHeight","footerRowHeight","styleSheet","cssText","join","appendChild","getColumnCssRules","stylesheet","sheets","styleSheets","ownerNode","owningElement","columnCssRulesL","columnCssRulesR","columnIdx","cssRules","selectorText","exec","substr","removeCssRules","onBeforeDestroy","evt","editorLock","getEditController","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","floor","growProportion","growSize","currentWidth","reRender","rerenderOnResize","$groupHeader","currentColumnIndex","$groupHeaderColumn","$headerColumn","next","outerWidth","headers","w","rule","setSortColumn","ascending","cols","headerColumnEls","columnIndex","getSortColumns","ranges","selectedRows","hash","k","canCellBeSelected","selectedCellCssClass","setCellCssStyles","onSelectedRowsChanged","getSelectedRows","columnPosLeft","columnPosRight","columnDefinitions","_treeColumns","getOptions","makeActiveCellNormal","enableAddRow","invalidateRow","zombieRowNodeFromLastMouseWheelEvent","autoHeight","leaveSpaceForNewRows","setData","newData","scrollToTop","updateRowCount","scrollTo","getData","getLength","getDataLengthIncludingAddNew","getDataItem","getItem","getTopPanel","setTopPanelVisibility","slideDown","slideUp","setHeaderRowVisibility","setFooterRowVisibility","fadeIn","getContainerNode","getRowTop","getRowFromPosition","th","oldOffset","ph","cj","newScrollTop","getVisibleRange","cleanupRows","updateRowPositions","prevScrollTop","vScrollDir","lastRenderedScrollTop","onViewportChanged","defaultFormatter","dataContext","getFormatter","rowMetadata","getItemMetadata","columnOverrides","formatter","formatterFactory","callFormatter","item","metadata","columnData","getEditor","columnMetadata","editor","editorFactory","getDataItemValueForColumn","dataItemColumnValueExtractor","field","appendRowHtml","stringArrayL","stringArrayR","dataLoading","rowCss","activeRow","addNewRowCssClass","cssClasses","frozenRowOffset","getFrozenRowOffset","rowHtml","colspan","leftPx","rightPx","appendCellHtml","stringArray","cellCss","cssClass","activeCell","key","cellCssClasses","rowsCache","cellRenderQueue","cellColSpans","rangeToKeep","removeFrozenRow","removeRowFromCache","invalidate","currentEditor","cacheEntry","rowNodeFromLastMouseWheelEvent","rowNode","postProcessedRows","renderedRows","counter_rows_removed","invalidateRows","rl","updateCell","cellNode","getCellNode","loadValue","innerHTML","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","cellNodesByColumnIdx","viewportH","outerHeight","topPanelH","headerRowH","footerRowH","ceil","paneTopH","paneBottomH","viewportTopH","viewportBottomH","paneBottomTop","lastRenderedScrollLeft","dataLengthIncludingAddNew","numberOfRows","oldH","tempViewportH","oldViewportHasVScroll","l","activeCellNode","resetActiveCell","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","minBuffer","$lastNode","last","pop","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","cellsAdded","processedRows","totalCellsAdded","btm","processedRow","$node","renderRows","needToReselectCell","counter_rows_rendered","xRight","firstChild","startPostProcessing","enableAsyncPostRender","h_postrender","asyncPostProcessRows","asyncPostRenderDelay","postProcessFromRow","postProcessToRow","rendered","renderedFrozenRows","h_render","deltaX","deltaY","$rowNode","$gridCanvas","zombieRow","handled","_handleScroll","isMouseWheel","maxScrollDistanceY","maxScrollDistanceX","hasFrozenCols","vScrollDist","hScrollDist","prevScrollLeft","forceSyncScrolling","onScroll","asyncPostRender","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","removeCellCssStyles","prevHash","getCellCssStyles","flashCell","toggleCellClass","times","$cell","queue","toggleClass","cellFlashingCssClass","dequeue","handleDragInit","dd","getCellFromEvent","cellExists","retval","onDragInit","interactEvent","onDragStart","onDrag","onDragEnd","onKeyDown","which","navigatePrev","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","navigateNext","editable","commitEditAndSetFocus","makeActiveCellEditable","activeElement","setFocus","onClick","canCellBeActive","scrollRowIntoView","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","onHeaderClick","getCellFromPoint","getCellFromNode","cls","getRowFromNode","rowOffset","isBottom","getCellNodeBox","y1","y2","x1","x2","tabbingDirection","focus","scrollCellIntoView","doPaging","getColspan","scrollRight","newCell","opt_editMode","activeCellChanged","$activeCellNode","$activeCellOffset","activePosX","autoEdit","isCellPotentiallyEditable","h_editorLoader","asyncEditorLoading","asyncEditorLoadDelay","scrollActiveCellIntoView","onActiveCellChanged","getActiveCell","clearTextSelection","selection","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","onBeforeEditCell","gridPosition","absBox","commitChanges","cancelChanges","serializedEditorValue","serializeValue","offsetTop","offsetLeft","offsetParent","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","viewportScrollH","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","dir","deltaRows","enableCellNavigation","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","pos","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","tabbingDirections","stepFunctions","stepFn","isAddNewRow","setActiveCell","focusable","selectable","forceEdit","isValueChanged","validationResults","validate","editCommand","serializedValue","prevSerializedValue","execute","applyValue","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","rowsToRanges","lastCell","setSelectedRows","setSelectedRanges","multiSelect","random","s","eval","expr","slickGridVersion","getViewport","editActiveCell","_jquery","_interact","_slick","_slick2","FrozenGrid"],"mappings":"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","file":"frozen.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/** *\n\t * Contains core SlickGrid classes.\n\t * @module Core\n\t * @namespace Slick\n\t */\n\tvar Slick = {\n\t  Event: Event,\n\t  EventData: EventData,\n\t  EventHandler: EventHandler,\n\t  Range: Range,\n\t  NonDataRow: NonDataItem,\n\t  Group: Group,\n\t  GroupTotals: GroupTotals,\n\t  EditorLock: EditorLock,\n\t  /** *\n\t   * A global singleton editor lock.\n\t   * @class GlobalEditorLock\n\t   * @static\n\t   * @constructor\n\t   */\n\t  GlobalEditorLock: new EditorLock(),\n\t  TreeColumns: TreeColumns,\n\t\n\t  keyCode: {\n\t    BACKSPACE: 8,\n\t    DELETE: 46,\n\t    DOWN: 40,\n\t    END: 35,\n\t    ENTER: 13,\n\t    ESCAPE: 27,\n\t    HOME: 36,\n\t    INSERT: 45,\n\t    LEFT: 37,\n\t    PAGE_DOWN: 34,\n\t    PAGE_UP: 33,\n\t    RIGHT: 39,\n\t    TAB: 9,\n\t    UP: 38,\n\t    SPACE: 32\n\t  }\n\t};\n\t\n\texports.default = Slick;\n\t\n\t/***\n\t * An event object for passing data to event handlers and letting them control propagation.\n\t * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n\t * @class EventData\n\t * @constructor\n\t */\n\t\n\tfunction EventData() {\n\t  var isPropagationStopped = false;\n\t  var isImmediatePropagationStopped = false;\n\t\n\t  /***\n\t   * Stops event from propagating up the DOM tree.\n\t   * @method stopPropagation\n\t   */\n\t  this.stopPropagation = function () {\n\t    isPropagationStopped = true;\n\t  };\n\t\n\t  /***\n\t   * Returns whether stopPropagation was called on this event object.\n\t   * @method isPropagationStopped\n\t   * @return {Boolean}\n\t   */\n\t  this.isPropagationStopped = function () {\n\t    return isPropagationStopped;\n\t  };\n\t\n\t  /***\n\t   * Prevents the rest of the handlers from being executed.\n\t   * @method stopImmediatePropagation\n\t   */\n\t  this.stopImmediatePropagation = function () {\n\t    isImmediatePropagationStopped = true;\n\t  };\n\t\n\t  /***\n\t   * Returns whether stopImmediatePropagation was called on this event object.\\\n\t   * @method isImmediatePropagationStopped\n\t   * @return {Boolean}\n\t   */\n\t  this.isImmediatePropagationStopped = function () {\n\t    return isImmediatePropagationStopped;\n\t  };\n\t}\n\t\n\t/***\n\t * A simple publisher-subscriber implementation.\n\t * @class Event\n\t * @constructor\n\t */\n\tfunction Event() {\n\t  var handlers = [];\n\t\n\t  /***\n\t   * Adds an event handler to be called when the event is fired.\n\t   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n\t   * object the event was fired with.<p>\n\t   * @method subscribe\n\t   * @param fn {Function} Event handler.\n\t   */\n\t  this.subscribe = function (fn) {\n\t    handlers.push(fn);\n\t  };\n\t\n\t  /***\n\t   * Removes an event handler added with <code>subscribe(fn)</code>.\n\t   * @method unsubscribe\n\t   * @param fn {Function} Event handler to be removed.\n\t   */\n\t  this.unsubscribe = function (fn) {\n\t    for (var i = handlers.length - 1; i >= 0; i--) {\n\t      if (handlers[i] === fn) {\n\t        handlers.splice(i, 1);\n\t      }\n\t    }\n\t  };\n\t\n\t  /***\n\t   * Fires an event notifying all subscribers.\n\t   * @method notify\n\t   * @param args {Object} Additional data object to be passed to all handlers.\n\t   * @param e {EventData}\n\t   *      Optional.\n\t   *      An <code>EventData</code> object to be passed to all handlers.\n\t   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n\t   * @param scope {Object}\n\t   *      Optional.\n\t   *      The scope (\"this\") within which the handler will be executed.\n\t   *      If not specified, the scope will be set to the <code>Event</code> instance.\n\t   */\n\t  this.notify = function (args, e, scope) {\n\t    e = e || new EventData();\n\t    scope = scope || this;\n\t\n\t    var returnValue;\n\t    for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n\t      returnValue = handlers[i].call(scope, e, args);\n\t    }\n\t\n\t    return returnValue;\n\t  };\n\t}\n\t\n\tfunction EventHandler() {\n\t  var handlers = [];\n\t\n\t  this.subscribe = function (event, handler) {\n\t    handlers.push({\n\t      event: event,\n\t      handler: handler\n\t    });\n\t    event.subscribe(handler);\n\t\n\t    return this; // allow chaining\n\t  };\n\t\n\t  this.unsubscribe = function (event, handler) {\n\t    var i = handlers.length;\n\t    while (i--) {\n\t      if (handlers[i].event === event && handlers[i].handler === handler) {\n\t        handlers.splice(i, 1);\n\t        event.unsubscribe(handler);\n\t        return;\n\t      }\n\t    }\n\t\n\t    return this; // allow chaining\n\t  };\n\t\n\t  this.unsubscribeAll = function () {\n\t    var i = handlers.length;\n\t    while (i--) {\n\t      handlers[i].event.unsubscribe(handlers[i].handler);\n\t    }\n\t    handlers = [];\n\t\n\t    return this; // allow chaining\n\t  };\n\t}\n\t\n\t/***\n\t * A structure containing a range of cells.\n\t * @class Range\n\t * @constructor\n\t * @param fromRow {Integer} Starting row.\n\t * @param fromCell {Integer} Starting cell.\n\t * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n\t * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n\t */\n\tfunction Range(fromRow, fromCell, toRow, toCell) {\n\t  if (toRow === undefined && toCell === undefined) {\n\t    toRow = fromRow;\n\t    toCell = fromCell;\n\t  }\n\t\n\t  /***\n\t   * @property fromRow\n\t   * @type {Integer}\n\t   */\n\t  this.fromRow = Math.min(fromRow, toRow);\n\t\n\t  /***\n\t   * @property fromCell\n\t   * @type {Integer}\n\t   */\n\t  this.fromCell = Math.min(fromCell, toCell);\n\t\n\t  /***\n\t   * @property toRow\n\t   * @type {Integer}\n\t   */\n\t  this.toRow = Math.max(fromRow, toRow);\n\t\n\t  /***\n\t   * @property toCell\n\t   * @type {Integer}\n\t   */\n\t  this.toCell = Math.max(fromCell, toCell);\n\t\n\t  /***\n\t   * Returns whether a range represents a single row.\n\t   * @method isSingleRow\n\t   * @return {Boolean}\n\t   */\n\t  this.isSingleRow = function () {\n\t    return this.fromRow == this.toRow;\n\t  };\n\t\n\t  /***\n\t   * Returns whether a range represents a single cell.\n\t   * @method isSingleCell\n\t   * @return {Boolean}\n\t   */\n\t  this.isSingleCell = function () {\n\t    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n\t  };\n\t\n\t  /***\n\t   * Returns whether a range contains a given cell.\n\t   * @method contains\n\t   * @param row {Integer}\n\t   * @param cell {Integer}\n\t   * @return {Boolean}\n\t   */\n\t  this.contains = function (row, cell) {\n\t    return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n\t  };\n\t\n\t  /***\n\t   * Returns a readable representation of a range.\n\t   * @method toString\n\t   * @return {String}\n\t   */\n\t  this.toString = function () {\n\t    if (this.isSingleCell()) {\n\t      return '(' + this.fromRow + ':' + this.fromCell + ')';\n\t    } else {\n\t      return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n\t    }\n\t  };\n\t}\n\t\n\t/***\n\t * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n\t * @class NonDataItem\n\t * @constructor\n\t */\n\tfunction NonDataItem() {\n\t  this.__nonDataRow = true;\n\t}\n\t\n\t/***\n\t * Information about a group of rows.\n\t * @class Group\n\t * @extends Slick.NonDataItem\n\t * @constructor\n\t */\n\tfunction Group() {\n\t  this.__group = true;\n\t\n\t  /**\n\t   * Grouping level, starting with 0.\n\t   * @property level\n\t   * @type {Number}\n\t   */\n\t  this.level = 0;\n\t\n\t  /***\n\t   * Number of rows in the group.\n\t   * @property count\n\t   * @type {Integer}\n\t   */\n\t  this.count = 0;\n\t\n\t  /***\n\t   * Grouping value.\n\t   * @property value\n\t   * @type {Object}\n\t   */\n\t  this.value = null;\n\t\n\t  /***\n\t   * Formatted display value of the group.\n\t   * @property title\n\t   * @type {String}\n\t   */\n\t  this.title = null;\n\t\n\t  /***\n\t   * Whether a group is collapsed.\n\t   * @property collapsed\n\t   * @type {Boolean}\n\t   */\n\t  this.collapsed = false;\n\t\n\t  /***\n\t   * GroupTotals, if any.\n\t   * @property totals\n\t   * @type {GroupTotals}\n\t   */\n\t  this.totals = null;\n\t\n\t  /**\n\t   * Rows that are part of the group.\n\t   * @property rows\n\t   * @type {Array}\n\t   */\n\t  this.rows = [];\n\t\n\t  /**\n\t   * Sub-groups that are part of the group.\n\t   * @property groups\n\t   * @type {Array}\n\t   */\n\t  this.groups = null;\n\t\n\t  /**\n\t   * A unique key used to identify the group.  This key can be used in calls to DataView\n\t   * collapseGroup() or expandGroup().\n\t   * @property groupingKey\n\t   * @type {Object}\n\t   */\n\t  this.groupingKey = null;\n\t}\n\t\n\tGroup.prototype = new NonDataItem();\n\t\n\t/***\n\t * Compares two Group instances.\n\t * @method equals\n\t * @return {Boolean}\n\t * @param group {Group} Group instance to compare to.\n\t */\n\tGroup.prototype.equals = function (group) {\n\t  return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n\t};\n\t\n\t/***\n\t * Information about group totals.\n\t * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n\t * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n\t * formatters during the display.\n\t * @class GroupTotals\n\t * @extends Slick.NonDataItem\n\t * @constructor\n\t */\n\tfunction GroupTotals() {\n\t  this.__groupTotals = true;\n\t\n\t  /***\n\t   * Parent Group.\n\t   * @param group\n\t   * @type {Group}\n\t   */\n\t  this.group = null;\n\t\n\t  /***\n\t   * Whether the totals have been fully initialized / calculated.\n\t   * Will be set to false for lazy-calculated group totals.\n\t   * @param initialized\n\t   * @type {Boolean}\n\t   */\n\t  this.initialized = false;\n\t}\n\t\n\tGroupTotals.prototype = new NonDataItem();\n\t\n\t/***\n\t * A locking helper to track the active edit controller and ensure that only a single controller\n\t * can be active at a time.  This prevents a whole class of state and validation synchronization\n\t * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n\t * and attempt a commit or cancel before proceeding.\n\t * @class EditorLock\n\t * @constructor\n\t */\n\tfunction EditorLock() {\n\t  var activeEditController = null;\n\t\n\t  /***\n\t   * Returns true if a specified edit controller is active (has the edit lock).\n\t   * If the parameter is not specified, returns true if any edit controller is active.\n\t   * @method isActive\n\t   * @param editController {EditController}\n\t   * @return {Boolean}\n\t   */\n\t  this.isActive = function (editController) {\n\t    return editController ? activeEditController === editController : activeEditController !== null;\n\t  };\n\t\n\t  /***\n\t   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n\t   * If another edit controller is already active, and exception will be thrown.\n\t   * @method activate\n\t   * @param editController {EditController} edit controller acquiring the lock\n\t   */\n\t  this.activate = function (editController) {\n\t    if (editController === activeEditController) {\n\t      // already activated?\n\t      return;\n\t    }\n\t    if (activeEditController !== null) {\n\t      throw \"SlickGrid.EditorLock.activate: an editController is still active, can't activate another editController\";\n\t    }\n\t    if (!editController.commitCurrentEdit) {\n\t      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n\t    }\n\t    if (!editController.cancelCurrentEdit) {\n\t      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n\t    }\n\t    activeEditController = editController;\n\t  };\n\t\n\t  /***\n\t   * Unsets the specified edit controller as the active edit controller (release edit lock).\n\t   * If the specified edit controller is not the active one, an exception will be thrown.\n\t   * @method deactivate\n\t   * @param editController {EditController} edit controller releasing the lock\n\t   */\n\t  this.deactivate = function (editController) {\n\t    if (activeEditController !== editController) {\n\t      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n\t    }\n\t    activeEditController = null;\n\t  };\n\t\n\t  /***\n\t   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n\t   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n\t   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n\t   * and false otherwise.  If no edit controller is active, returns true.\n\t   * @method commitCurrentEdit\n\t   * @return {Boolean}\n\t   */\n\t  this.commitCurrentEdit = function () {\n\t    return activeEditController ? activeEditController.commitCurrentEdit() : true;\n\t  };\n\t\n\t  /***\n\t   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n\t   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n\t   * active, returns true.\n\t   * @method cancelCurrentEdit\n\t   * @return {Boolean}\n\t   */\n\t  this.cancelCurrentEdit = function cancelCurrentEdit() {\n\t    return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n\t  };\n\t}\n\t\n\t/**\n\t *\n\t * @param {Array} treeColumns Array com levels of columns\n\t * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n\t * @constructor\n\t */\n\tfunction TreeColumns(treeColumns) {\n\t  var columnsById = {};\n\t\n\t  function init() {\n\t    mapToId(treeColumns);\n\t  }\n\t\n\t  function mapToId(columns) {\n\t    columns.forEach(function (column) {\n\t      columnsById[column.id] = column;\n\t\n\t      if (column.columns) mapToId(column.columns);\n\t    });\n\t  }\n\t\n\t  function filter(node, condition) {\n\t    return node.filter(function (column) {\n\t      var valid = condition.call(column);\n\t\n\t      if (valid && column.columns) column.columns = filter(column.columns, condition);\n\t\n\t      return valid && (!column.columns || column.columns.length);\n\t    });\n\t  }\n\t\n\t  function sort(columns, grid) {\n\t    columns.sort(function (a, b) {\n\t      var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n\t          indexB = getOrDefault(grid.getColumnIndex(b.id));\n\t\n\t      return indexA - indexB;\n\t    }).forEach(function (column) {\n\t      if (column.columns) sort(column.columns, grid);\n\t    });\n\t  }\n\t\n\t  function getOrDefault(value) {\n\t    return typeof value === 'undefined' ? -1 : value;\n\t  }\n\t\n\t  function getDepth(node) {\n\t    if (node.length) for (var i in node) {\n\t      return getDepth(node[i]);\n\t    } else if (node.columns) return 1 + getDepth(node.columns);else return 1;\n\t  }\n\t\n\t  function getColumnsInDepth(node, depth, current) {\n\t    var columns = [];\n\t    current = current || 0;\n\t\n\t    if (depth == current) {\n\t      if (node.length) node.forEach(function (n) {\n\t        if (n.columns) n.extractColumns = function () {\n\t          return extractColumns(n);\n\t        };\n\t      });\n\t\n\t      return node;\n\t    } else for (var i in node) {\n\t      if (node[i].columns) {\n\t        columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\n\t      }\n\t    }return columns;\n\t  }\n\t\n\t  function extractColumns(node) {\n\t    var result = [];\n\t\n\t    if (node.hasOwnProperty('length')) {\n\t      for (var i = 0; i < node.length; i++) {\n\t        result = result.concat(extractColumns(node[i]));\n\t      }\n\t    } else {\n\t      if (node.hasOwnProperty('columns')) result = result.concat(extractColumns(node.columns));else return node;\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function cloneTreeColumns() {\n\t    return $.extend(true, [], treeColumns);\n\t  }\n\t\n\t  init();\n\t\n\t  this.hasDepth = function () {\n\t    for (var i in treeColumns) {\n\t      if (treeColumns[i].hasOwnProperty('columns')) return true;\n\t    }return false;\n\t  };\n\t\n\t  this.getTreeColumns = function () {\n\t    return treeColumns;\n\t  };\n\t\n\t  this.extractColumns = function () {\n\t    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n\t  };\n\t\n\t  this.getDepth = function () {\n\t    return getDepth(treeColumns);\n\t  };\n\t\n\t  this.getColumnsInDepth = function (depth) {\n\t    return getColumnsInDepth(treeColumns, depth);\n\t  };\n\t\n\t  this.getColumnsInGroup = function (groups) {\n\t    return extractColumns(groups);\n\t  };\n\t\n\t  this.visibleColumns = function () {\n\t    return filter(cloneTreeColumns(), function () {\n\t      return this.visible;\n\t    });\n\t  };\n\t\n\t  this.filter = function (condition) {\n\t    return filter(cloneTreeColumns(), condition);\n\t  };\n\t\n\t  this.reOrder = function (grid) {\n\t    return sort(treeColumns, grid);\n\t  };\n\t\n\t  this.getById = function (id) {\n\t    return columnsById[id];\n\t  };\n\t\n\t  this.getInIds = function (ids) {\n\t    return ids.map(function (id) {\n\t      return columnsById[id];\n\t    });\n\t  };\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = require(\"jquery\");\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * interact.js v1.2.6\n\t *\n\t * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n\t * Open source under the MIT License.\n\t * https://raw.github.com/taye/interact.js/master/LICENSE\n\t *\n\t * This file has been monkey patched to pass the originalEvent on to drag events\n\t */\n\t(function (realWindow) {\n\t  'use strict';\n\t\n\t  // return early if there's no window to work with (eg. Node.js)\n\t\n\t  if (!realWindow) {\n\t    return;\n\t  }\n\t\n\t  var // get wrapped window if using Shadow DOM polyfill\n\t  window = function () {\n\t    // create a TextNode\n\t    var el = realWindow.document.createTextNode('');\n\t\n\t    // check if it's wrapped by a polyfill\n\t    if (el.ownerDocument !== realWindow.document && typeof realWindow.wrap === 'function' && realWindow.wrap(el) === el) {\n\t      // return wrapped window\n\t      return realWindow.wrap(realWindow);\n\t    }\n\t\n\t    // no Shadow DOM polyfil or native implementation\n\t    return realWindow;\n\t  }(),\n\t      document = window.document,\n\t      DocumentFragment = window.DocumentFragment || blank,\n\t      SVGElement = window.SVGElement || blank,\n\t      SVGSVGElement = window.SVGSVGElement || blank,\n\t      SVGElementInstance = window.SVGElementInstance || blank,\n\t      HTMLElement = window.HTMLElement || window.Element,\n\t      PointerEvent = window.PointerEvent || window.MSPointerEvent,\n\t      pEventTypes,\n\t      hypot = Math.hypot || function (x, y) {\n\t    return Math.sqrt(x * x + y * y);\n\t  },\n\t      tmpXY = {},\n\t      // reduce object creation in getXY()\n\t  documents = [],\n\t      // all documents being listened to\n\t  interactables = [],\n\t      // all set interactables\n\t  interactions = [],\n\t      // all interactions\n\t  dynamicDrop = false,\n\t\n\t  // {\n\t  //      type: {\n\t  //          selectors: ['selector', ...],\n\t  //          contexts : [document, ...],\n\t  //          listeners: [[listener, useCapture], ...]\n\t  //      }\n\t  //  }\n\t  delegatedEvents = {},\n\t      defaultOptions = {\n\t    base: {\n\t      accept: null,\n\t      actionChecker: null,\n\t      styleCursor: true,\n\t      preventDefault: 'auto',\n\t      origin: { x: 0, y: 0 },\n\t      deltaSource: 'page',\n\t      allowFrom: null,\n\t      ignoreFrom: null,\n\t      _context: document,\n\t      dropChecker: null\n\t    },\n\t\n\t    drag: {\n\t      enabled: false,\n\t      manualStart: true,\n\t      max: Infinity,\n\t      maxPerElement: 1,\n\t\n\t      snap: null,\n\t      restrict: null,\n\t      inertia: null,\n\t      autoScroll: null,\n\t\n\t      axis: 'xy'\n\t    },\n\t\n\t    drop: {\n\t      enabled: false,\n\t      accept: null,\n\t      overlap: 'pointer'\n\t    },\n\t\n\t    resize: {\n\t      enabled: false,\n\t      manualStart: false,\n\t      max: Infinity,\n\t      maxPerElement: 1,\n\t\n\t      snap: null,\n\t      restrict: null,\n\t      inertia: null,\n\t      autoScroll: null,\n\t\n\t      square: false,\n\t      preserveAspectRatio: false,\n\t      axis: 'xy',\n\t\n\t      // use default margin\n\t      margin: NaN,\n\t\n\t      // object with props left, right, top, bottom which are\n\t      // true/false values to resize when the pointer is over that edge,\n\t      // CSS selectors to match the handles for each direction\n\t      // or the Elements for each handle\n\t      edges: null,\n\t\n\t      // a value of 'none' will limit the resize rect to a minimum of 0x0\n\t      // 'negate' will alow the rect to have negative width/height\n\t      // 'reposition' will keep the width/height positive by swapping\n\t      // the top and bottom edges and/or swapping the left and right edges\n\t      invert: 'none'\n\t    },\n\t\n\t    gesture: {\n\t      manualStart: false,\n\t      enabled: false,\n\t      max: Infinity,\n\t      maxPerElement: 1,\n\t\n\t      restrict: null\n\t    },\n\t\n\t    perAction: {\n\t      manualStart: false,\n\t      max: Infinity,\n\t      maxPerElement: 1,\n\t\n\t      snap: {\n\t        enabled: false,\n\t        endOnly: false,\n\t        range: Infinity,\n\t        targets: null,\n\t        offsets: null,\n\t\n\t        relativePoints: null\n\t      },\n\t\n\t      restrict: {\n\t        enabled: false,\n\t        endOnly: false\n\t      },\n\t\n\t      autoScroll: {\n\t        enabled: false,\n\t        container: null, // the item that is scrolled (Window or HTMLElement)\n\t        margin: 60,\n\t        speed: 300 // the scroll speed in pixels per second\n\t      },\n\t\n\t      inertia: {\n\t        enabled: false,\n\t        resistance: 10, // the lambda in exponential decay\n\t        minSpeed: 100, // target speed must be above this for inertia to start\n\t        endSpeed: 10, // the speed at which inertia is slow enough to stop\n\t        allowResume: true, // allow resuming an action in inertia phase\n\t        zeroResumeDelta: true, // if an action is resumed after launch, set dx/dy to 0\n\t        smoothEndDuration: 300 // animate to snap/restrict endOnly if there's no inertia\n\t      }\n\t    },\n\t\n\t    _holdDuration: 600\n\t  },\n\t\n\t  // Things related to autoScroll\n\t  autoScroll = {\n\t    interaction: null,\n\t    i: null, // the handle returned by window.setInterval\n\t    x: 0,\n\t    y: 0, // Direction each pulse is to scroll in\n\t\n\t    // scroll the window by the values in scroll.x/y\n\t    scroll: function scroll() {\n\t      var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll,\n\t          container = options.container || getWindow(autoScroll.interaction.element),\n\t          now = new Date().getTime(),\n\t\n\t      // change in time in seconds\n\t      dtx = (now - autoScroll.prevTimeX) / 1000,\n\t          dty = (now - autoScroll.prevTimeY) / 1000,\n\t          vx,\n\t          vy,\n\t          sx,\n\t          sy;\n\t\n\t      // displacement\n\t      if (options.velocity) {\n\t        vx = options.velocity.x;\n\t        vy = options.velocity.y;\n\t      } else {\n\t        vx = vy = options.speed;\n\t      }\n\t\n\t      sx = vx * dtx;\n\t      sy = vy * dty;\n\t\n\t      if (sx >= 1 || sy >= 1) {\n\t        if (isWindow(container)) {\n\t          container.scrollBy(autoScroll.x * sx, autoScroll.y * sy);\n\t        } else if (container) {\n\t          container.scrollLeft += autoScroll.x * sx;\n\t          container.scrollTop += autoScroll.y * sy;\n\t        }\n\t\n\t        if (sx >= 1) autoScroll.prevTimeX = now;\n\t        if (sy >= 1) autoScroll.prevTimeY = now;\n\t      }\n\t\n\t      if (autoScroll.isScrolling) {\n\t        cancelFrame(autoScroll.i);\n\t        autoScroll.i = reqFrame(autoScroll.scroll);\n\t      }\n\t    },\n\t\n\t    isScrolling: false,\n\t    prevTimeX: 0,\n\t    prevTimeY: 0,\n\t\n\t    start: function start(interaction) {\n\t      autoScroll.isScrolling = true;\n\t      cancelFrame(autoScroll.i);\n\t\n\t      autoScroll.interaction = interaction;\n\t      autoScroll.prevTimeX = new Date().getTime();\n\t      autoScroll.prevTimeY = new Date().getTime();\n\t      autoScroll.i = reqFrame(autoScroll.scroll);\n\t    },\n\t\n\t    stop: function stop() {\n\t      autoScroll.isScrolling = false;\n\t      cancelFrame(autoScroll.i);\n\t    }\n\t  },\n\t\n\t  // Does the browser support touch input?\n\t  supportsTouch = 'ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch,\n\t\n\t  // Does the browser support PointerEvents\n\t  // Avoid PointerEvent bugs introduced in Chrome 55\n\t  supportsPointerEvent = PointerEvent && !/Chrome/.test(navigator.userAgent),\n\t\n\t  // Less Precision with touch input\n\t  margin = supportsTouch || supportsPointerEvent ? 20 : 10,\n\t      pointerMoveTolerance = 1,\n\t\n\t  // for ignoring browser's simulated mouse events\n\t  prevTouchTime = 0,\n\t\n\t  // Allow this many interactions to happen simultaneously\n\t  maxInteractions = Infinity,\n\t\n\t  // Check if is IE9 or older\n\t  actionCursors = document.all && !window.atob ? {\n\t    drag: 'move',\n\t    resizex: 'e-resize',\n\t    resizey: 's-resize',\n\t    resizexy: 'se-resize',\n\t\n\t    resizetop: 'n-resize',\n\t    resizeleft: 'w-resize',\n\t    resizebottom: 's-resize',\n\t    resizeright: 'e-resize',\n\t    resizetopleft: 'se-resize',\n\t    resizebottomright: 'se-resize',\n\t    resizetopright: 'ne-resize',\n\t    resizebottomleft: 'ne-resize',\n\t\n\t    gesture: ''\n\t  } : {\n\t    drag: 'move',\n\t    resizex: 'ew-resize',\n\t    resizey: 'ns-resize',\n\t    resizexy: 'nwse-resize',\n\t\n\t    resizetop: 'ns-resize',\n\t    resizeleft: 'ew-resize',\n\t    resizebottom: 'ns-resize',\n\t    resizeright: 'ew-resize',\n\t    resizetopleft: 'nwse-resize',\n\t    resizebottomright: 'nwse-resize',\n\t    resizetopright: 'nesw-resize',\n\t    resizebottomleft: 'nesw-resize',\n\t\n\t    gesture: ''\n\t  },\n\t      actionIsEnabled = {\n\t    drag: true,\n\t    resize: true,\n\t    gesture: true\n\t  },\n\t\n\t  // because Webkit and Opera still use 'mousewheel' event type\n\t  wheelEvent = 'onmousewheel' in document ? 'mousewheel' : 'wheel',\n\t      eventTypes = ['dragstart', 'dragmove', 'draginertiastart', 'dragend', 'dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop', 'resizestart', 'resizemove', 'resizeinertiastart', 'resizeend', 'gesturestart', 'gesturemove', 'gestureinertiastart', 'gestureend', 'down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold'],\n\t      globalEvents = {},\n\t\n\t  // Opera Mobile must be handled differently\n\t  isOperaMobile = navigator.appName == 'Opera' && supportsTouch && navigator.userAgent.match('Presto'),\n\t\n\t  // scrolling doesn't change the result of getClientRects on iOS 7\n\t  isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\t\n\t  // prefix matchesSelector\n\t  prefixedMatchesSelector = 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\t\n\t  // will be polyfill function if browser is IE8\n\t  ie8MatchesSelector,\n\t\n\t  // native requestAnimationFrame or polyfill\n\t  reqFrame = realWindow.requestAnimationFrame,\n\t      cancelFrame = realWindow.cancelAnimationFrame,\n\t\n\t  // Events wrapper\n\t  events = function () {\n\t    var useAttachEvent = 'attachEvent' in window && !('addEventListener' in window),\n\t        addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener',\n\t        removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener',\n\t        on = useAttachEvent ? 'on' : '',\n\t        elements = [],\n\t        targets = [],\n\t        attachedListeners = [];\n\t\n\t    function add(element, type, listener, useCapture) {\n\t      var elementIndex = indexOf(elements, element),\n\t          target = targets[elementIndex];\n\t\n\t      if (!target) {\n\t        target = {\n\t          events: {},\n\t          typeCount: 0\n\t        };\n\t\n\t        elementIndex = elements.push(element) - 1;\n\t        targets.push(target);\n\t\n\t        attachedListeners.push(useAttachEvent ? {\n\t          supplied: [],\n\t          wrapped: [],\n\t          useCount: []\n\t        } : null);\n\t      }\n\t\n\t      if (!target.events[type]) {\n\t        target.events[type] = [];\n\t        target.typeCount++;\n\t      }\n\t\n\t      if (!contains(target.events[type], listener)) {\n\t        var ret;\n\t\n\t        if (useAttachEvent) {\n\t          var listeners = attachedListeners[elementIndex],\n\t              listenerIndex = indexOf(listeners.supplied, listener);\n\t\n\t          var wrapped = listeners.wrapped[listenerIndex] || function (event) {\n\t            if (!event.immediatePropagationStopped) {\n\t              event.target = event.srcElement;\n\t              event.currentTarget = element;\n\t\n\t              event.preventDefault = event.preventDefault || preventDef;\n\t              event.stopPropagation = event.stopPropagation || stopProp;\n\t              event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\t\n\t              if (/mouse|click/.test(event.type)) {\n\t                event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n\t                event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n\t              }\n\t\n\t              listener(event);\n\t            }\n\t          };\n\t\n\t          ret = element[addEvent](on + type, wrapped, Boolean(useCapture));\n\t\n\t          if (listenerIndex === -1) {\n\t            listeners.supplied.push(listener);\n\t            listeners.wrapped.push(wrapped);\n\t            listeners.useCount.push(1);\n\t          } else {\n\t            listeners.useCount[listenerIndex]++;\n\t          }\n\t        } else {\n\t          ret = element[addEvent](type, listener, useCapture || false);\n\t        }\n\t        target.events[type].push(listener);\n\t\n\t        return ret;\n\t      }\n\t    }\n\t\n\t    function remove(element, type, listener, useCapture) {\n\t      var i,\n\t          elementIndex = indexOf(elements, element),\n\t          target = targets[elementIndex],\n\t          listeners,\n\t          listenerIndex,\n\t          wrapped = listener;\n\t\n\t      if (!target || !target.events) {\n\t        return;\n\t      }\n\t\n\t      if (useAttachEvent) {\n\t        listeners = attachedListeners[elementIndex];\n\t        listenerIndex = indexOf(listeners.supplied, listener);\n\t        wrapped = listeners.wrapped[listenerIndex];\n\t      }\n\t\n\t      if (type === 'all') {\n\t        for (type in target.events) {\n\t          if (target.events.hasOwnProperty(type)) {\n\t            remove(element, type, 'all');\n\t          }\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (target.events[type]) {\n\t        var len = target.events[type].length;\n\t\n\t        if (listener === 'all') {\n\t          for (i = 0; i < len; i++) {\n\t            remove(element, type, target.events[type][i], Boolean(useCapture));\n\t          }\n\t          return;\n\t        } else {\n\t          for (i = 0; i < len; i++) {\n\t            if (target.events[type][i] === listener) {\n\t              element[removeEvent](on + type, wrapped, useCapture || false);\n\t              target.events[type].splice(i, 1);\n\t\n\t              if (useAttachEvent && listeners) {\n\t                listeners.useCount[listenerIndex]--;\n\t                if (listeners.useCount[listenerIndex] === 0) {\n\t                  listeners.supplied.splice(listenerIndex, 1);\n\t                  listeners.wrapped.splice(listenerIndex, 1);\n\t                  listeners.useCount.splice(listenerIndex, 1);\n\t                }\n\t              }\n\t\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (target.events[type] && target.events[type].length === 0) {\n\t          target.events[type] = null;\n\t          target.typeCount--;\n\t        }\n\t      }\n\t\n\t      if (!target.typeCount) {\n\t        targets.splice(elementIndex, 1);\n\t        elements.splice(elementIndex, 1);\n\t        attachedListeners.splice(elementIndex, 1);\n\t      }\n\t    }\n\t\n\t    function preventDef() {\n\t      this.returnValue = false;\n\t    }\n\t\n\t    function stopProp() {\n\t      this.cancelBubble = true;\n\t    }\n\t\n\t    function stopImmProp() {\n\t      this.cancelBubble = true;\n\t      this.immediatePropagationStopped = true;\n\t    }\n\t\n\t    return {\n\t      add: add,\n\t      remove: remove,\n\t      useAttachEvent: useAttachEvent,\n\t\n\t      _elements: elements,\n\t      _targets: targets,\n\t      _attachedListeners: attachedListeners\n\t    };\n\t  }();\n\t\n\t  function blank() {}\n\t\n\t  function isElement(o) {\n\t    if (!o || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) !== 'object') {\n\t      return false;\n\t    }\n\t\n\t    var _window = getWindow(o) || window;\n\t\n\t    return (/object|function/.test(_typeof(_window.Element)) ? o instanceof _window.Element //DOM2\n\t      : o.nodeType === 1 && typeof o.nodeName === 'string'\n\t    );\n\t  }\n\t  function isWindow(thing) {\n\t    return thing === window || !!(thing && thing.Window) && thing instanceof thing.Window;\n\t  }\n\t  function isDocFrag(thing) {\n\t    return !!thing && thing instanceof DocumentFragment;\n\t  }\n\t  function isArray(thing) {\n\t    return isObject(thing) && _typeof(thing.length) !== undefined && isFunction(thing.splice);\n\t  }\n\t  function isObject(thing) {\n\t    return !!thing && (typeof thing === 'undefined' ? 'undefined' : _typeof(thing)) === 'object';\n\t  }\n\t  function isFunction(thing) {\n\t    return typeof thing === 'function';\n\t  }\n\t  function isNumber(thing) {\n\t    return typeof thing === 'number';\n\t  }\n\t  function isBool(thing) {\n\t    return typeof thing === 'boolean';\n\t  }\n\t  function isString(thing) {\n\t    return typeof thing === 'string';\n\t  }\n\t\n\t  function trySelector(value) {\n\t    if (!isString(value)) {\n\t      return false;\n\t    }\n\t\n\t    // an exception will be raised if it is invalid\n\t    document.querySelector(value);\n\t    return true;\n\t  }\n\t\n\t  function extend(dest, source) {\n\t    for (var prop in source) {\n\t      dest[prop] = source[prop];\n\t    }\n\t    return dest;\n\t  }\n\t\n\t  var prefixedPropREs = {\n\t    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n\t  };\n\t\n\t  function pointerExtend(dest, source) {\n\t    for (var prop in source) {\n\t      var deprecated = false;\n\t\n\t      // skip deprecated prefixed properties\n\t      for (var vendor in prefixedPropREs) {\n\t        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n\t          deprecated = true;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!deprecated) {\n\t        dest[prop] = source[prop];\n\t      }\n\t    }\n\t    return dest;\n\t  }\n\t\n\t  function copyCoords(dest, src) {\n\t    dest.page = dest.page || {};\n\t    dest.page.x = src.page.x;\n\t    dest.page.y = src.page.y;\n\t\n\t    dest.client = dest.client || {};\n\t    dest.client.x = src.client.x;\n\t    dest.client.y = src.client.y;\n\t\n\t    dest.timeStamp = src.timeStamp;\n\t  }\n\t\n\t  function _setEventXY(targetObj, pointers, interaction) {\n\t    var pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0];\n\t\n\t    _getPageXY(pointer, tmpXY, interaction);\n\t    targetObj.page.x = tmpXY.x;\n\t    targetObj.page.y = tmpXY.y;\n\t\n\t    _getClientXY(pointer, tmpXY, interaction);\n\t    targetObj.client.x = tmpXY.x;\n\t    targetObj.client.y = tmpXY.y;\n\t\n\t    targetObj.timeStamp = new Date().getTime();\n\t  }\n\t\n\t  function setEventDeltas(targetObj, prev, cur) {\n\t    targetObj.page.x = cur.page.x - prev.page.x;\n\t    targetObj.page.y = cur.page.y - prev.page.y;\n\t    targetObj.client.x = cur.client.x - prev.client.x;\n\t    targetObj.client.y = cur.client.y - prev.client.y;\n\t    targetObj.timeStamp = new Date().getTime() - prev.timeStamp;\n\t\n\t    // set pointer velocity\n\t    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\t    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n\t    targetObj.page.vx = targetObj.page.x / dt;\n\t    targetObj.page.vy = targetObj.page.y / dt;\n\t\n\t    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n\t    targetObj.client.vx = targetObj.client.x / dt;\n\t    targetObj.client.vy = targetObj.client.y / dt;\n\t  }\n\t\n\t  function isNativePointer(pointer) {\n\t    return pointer instanceof window.Event || supportsTouch && window.Touch && pointer instanceof window.Touch;\n\t  }\n\t\n\t  // Get specified X/Y coords for mouse or event.touches[0]\n\t  function getXY(type, pointer, xy) {\n\t    xy = xy || {};\n\t    type = type || 'page';\n\t\n\t    xy.x = pointer[type + 'X'];\n\t    xy.y = pointer[type + 'Y'];\n\t\n\t    return xy;\n\t  }\n\t\n\t  function _getPageXY(pointer, page) {\n\t    page = page || {};\n\t\n\t    // Opera Mobile handles the viewport and scrolling oddly\n\t    if (isOperaMobile && isNativePointer(pointer)) {\n\t      getXY('screen', pointer, page);\n\t\n\t      page.x += window.scrollX;\n\t      page.y += window.scrollY;\n\t    } else {\n\t      getXY('page', pointer, page);\n\t    }\n\t\n\t    return page;\n\t  }\n\t\n\t  function _getClientXY(pointer, client) {\n\t    client = client || {};\n\t\n\t    if (isOperaMobile && isNativePointer(pointer)) {\n\t      // Opera Mobile handles the viewport and scrolling oddly\n\t      getXY('screen', pointer, client);\n\t    } else {\n\t      getXY('client', pointer, client);\n\t    }\n\t\n\t    return client;\n\t  }\n\t\n\t  function getScrollXY(win) {\n\t    win = win || window;\n\t    return {\n\t      x: win.scrollX || win.document.documentElement.scrollLeft,\n\t      y: win.scrollY || win.document.documentElement.scrollTop\n\t    };\n\t  }\n\t\n\t  function getPointerId(pointer) {\n\t    return isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n\t  }\n\t\n\t  function getActualElement(element) {\n\t    return element instanceof SVGElementInstance ? element.correspondingUseElement : element;\n\t  }\n\t\n\t  function getWindow(node) {\n\t    if (isWindow(node)) {\n\t      return node;\n\t    }\n\t\n\t    var rootNode = node.ownerDocument || node;\n\t\n\t    return rootNode.defaultView || rootNode.parentWindow || window;\n\t  }\n\t\n\t  function getElementClientRect(element) {\n\t    var clientRect = element instanceof SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\t\n\t    return clientRect && {\n\t      left: clientRect.left,\n\t      right: clientRect.right,\n\t      top: clientRect.top,\n\t      bottom: clientRect.bottom,\n\t      width: clientRect.width || clientRect.right - clientRect.left,\n\t      height: clientRect.height || clientRect.bottom - clientRect.top\n\t    };\n\t  }\n\t\n\t  function getElementRect(element) {\n\t    var clientRect = getElementClientRect(element);\n\t\n\t    if (!isIOS7 && clientRect) {\n\t      var scroll = getScrollXY(getWindow(element));\n\t\n\t      clientRect.left += scroll.x;\n\t      clientRect.right += scroll.x;\n\t      clientRect.top += scroll.y;\n\t      clientRect.bottom += scroll.y;\n\t    }\n\t\n\t    return clientRect;\n\t  }\n\t\n\t  function getTouchPair(event) {\n\t    var touches = [];\n\t\n\t    // array of touches is supplied\n\t    if (isArray(event)) {\n\t      touches[0] = event[0];\n\t      touches[1] = event[1];\n\t    }\n\t    // an event\n\t    else {\n\t        if (event.type === 'touchend') {\n\t          if (event.touches.length === 1) {\n\t            touches[0] = event.touches[0];\n\t            touches[1] = event.changedTouches[0];\n\t          } else if (event.touches.length === 0) {\n\t            touches[0] = event.changedTouches[0];\n\t            touches[1] = event.changedTouches[1];\n\t          }\n\t        } else {\n\t          touches[0] = event.touches[0];\n\t          touches[1] = event.touches[1];\n\t        }\n\t      }\n\t\n\t    return touches;\n\t  }\n\t\n\t  function pointerAverage(pointers) {\n\t    var average = {\n\t      pageX: 0,\n\t      pageY: 0,\n\t      clientX: 0,\n\t      clientY: 0,\n\t      screenX: 0,\n\t      screenY: 0\n\t    };\n\t    var prop;\n\t\n\t    for (var i = 0; i < pointers.length; i++) {\n\t      for (prop in average) {\n\t        average[prop] += pointers[i][prop];\n\t      }\n\t    }\n\t    for (prop in average) {\n\t      average[prop] /= pointers.length;\n\t    }\n\t\n\t    return average;\n\t  }\n\t\n\t  function touchBBox(event) {\n\t    if (!event.length && !(event.touches && event.touches.length > 1)) {\n\t      return;\n\t    }\n\t\n\t    var touches = getTouchPair(event),\n\t        minX = Math.min(touches[0].pageX, touches[1].pageX),\n\t        minY = Math.min(touches[0].pageY, touches[1].pageY),\n\t        maxX = Math.max(touches[0].pageX, touches[1].pageX),\n\t        maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\t\n\t    return {\n\t      x: minX,\n\t      y: minY,\n\t      left: minX,\n\t      top: minY,\n\t      width: maxX - minX,\n\t      height: maxY - minY\n\t    };\n\t  }\n\t\n\t  function touchDistance(event, deltaSource) {\n\t    deltaSource = deltaSource || defaultOptions.deltaSource;\n\t\n\t    var sourceX = deltaSource + 'X',\n\t        sourceY = deltaSource + 'Y',\n\t        touches = getTouchPair(event);\n\t\n\t    var dx = touches[0][sourceX] - touches[1][sourceX],\n\t        dy = touches[0][sourceY] - touches[1][sourceY];\n\t\n\t    return hypot(dx, dy);\n\t  }\n\t\n\t  function touchAngle(event, prevAngle, deltaSource) {\n\t    deltaSource = deltaSource || defaultOptions.deltaSource;\n\t\n\t    var sourceX = deltaSource + 'X',\n\t        sourceY = deltaSource + 'Y',\n\t        touches = getTouchPair(event),\n\t        dx = touches[0][sourceX] - touches[1][sourceX],\n\t        dy = touches[0][sourceY] - touches[1][sourceY],\n\t        angle = 180 * Math.atan(dy / dx) / Math.PI;\n\t\n\t    if (isNumber(prevAngle)) {\n\t      var dr = angle - prevAngle,\n\t          drClamped = dr % 360;\n\t\n\t      if (drClamped > 315) {\n\t        angle -= 360 + angle / 360 | 0 * 360;\n\t      } else if (drClamped > 135) {\n\t        angle -= 180 + angle / 360 | 0 * 360;\n\t      } else if (drClamped < -315) {\n\t        angle += 360 + angle / 360 | 0 * 360;\n\t      } else if (drClamped < -135) {\n\t        angle += 180 + angle / 360 | 0 * 360;\n\t      }\n\t    }\n\t\n\t    return angle;\n\t  }\n\t\n\t  function getOriginXY(interactable, element) {\n\t    var origin = interactable ? interactable.options.origin : defaultOptions.origin;\n\t\n\t    if (origin === 'parent') {\n\t      origin = parentElement(element);\n\t    } else if (origin === 'self') {\n\t      origin = interactable.getRect(element);\n\t    } else if (trySelector(origin)) {\n\t      origin = closest(element, origin) || { x: 0, y: 0 };\n\t    }\n\t\n\t    if (isFunction(origin)) {\n\t      origin = origin(interactable && element);\n\t    }\n\t\n\t    if (isElement(origin)) {\n\t      origin = getElementRect(origin);\n\t    }\n\t\n\t    origin.x = 'x' in origin ? origin.x : origin.left;\n\t    origin.y = 'y' in origin ? origin.y : origin.top;\n\t\n\t    return origin;\n\t  }\n\t\n\t  // http://stackoverflow.com/a/5634528/2280888\n\t  function _getQBezierValue(t, p1, p2, p3) {\n\t    var iT = 1 - t;\n\t    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n\t  }\n\t\n\t  function getQuadraticCurvePoint(startX, startY, cpX, cpY, endX, endY, position) {\n\t    return {\n\t      x: _getQBezierValue(position, startX, cpX, endX),\n\t      y: _getQBezierValue(position, startY, cpY, endY)\n\t    };\n\t  }\n\t\n\t  // http://gizma.com/easing/\n\t  function easeOutQuad(t, b, c, d) {\n\t    t /= d;\n\t    return -c * t * (t - 2) + b;\n\t  }\n\t\n\t  function nodeContains(parent, child) {\n\t    while (child) {\n\t      if (child === parent) {\n\t        return true;\n\t      }\n\t\n\t      child = child.parentNode;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function closest(child, selector) {\n\t    var parent = parentElement(child);\n\t\n\t    while (isElement(parent)) {\n\t      if (matchesSelector(parent, selector)) {\n\t        return parent;\n\t      }\n\t\n\t      parent = parentElement(parent);\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  function parentElement(node) {\n\t    var parent = node.parentNode;\n\t\n\t    if (isDocFrag(parent)) {\n\t      // skip past #shado-root fragments\n\t      while ((parent = parent.host) && isDocFrag(parent)) {}\n\t\n\t      return parent;\n\t    }\n\t\n\t    return parent;\n\t  }\n\t\n\t  function inContext(interactable, element) {\n\t    return interactable._context === element.ownerDocument || nodeContains(interactable._context, element);\n\t  }\n\t\n\t  function testIgnore(interactable, interactableElement, element) {\n\t    var ignoreFrom = interactable.options.ignoreFrom;\n\t\n\t    if (!ignoreFrom || !isElement(element)) {\n\t      return false;\n\t    }\n\t\n\t    if (isString(ignoreFrom)) {\n\t      return matchesUpTo(element, ignoreFrom, interactableElement);\n\t    } else if (isElement(ignoreFrom)) {\n\t      return nodeContains(ignoreFrom, element);\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function testAllow(interactable, interactableElement, element) {\n\t    var allowFrom = interactable.options.allowFrom;\n\t\n\t    if (!allowFrom) {\n\t      return true;\n\t    }\n\t\n\t    if (!isElement(element)) {\n\t      return false;\n\t    }\n\t\n\t    if (isString(allowFrom)) {\n\t      return matchesUpTo(element, allowFrom, interactableElement);\n\t    } else if (isElement(allowFrom)) {\n\t      return nodeContains(allowFrom, element);\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function checkAxis(axis, interactable) {\n\t    if (!interactable) {\n\t      return false;\n\t    }\n\t\n\t    var thisAxis = interactable.options.drag.axis;\n\t\n\t    return axis === 'xy' || thisAxis === 'xy' || thisAxis === axis;\n\t  }\n\t\n\t  function checkSnap(interactable, action) {\n\t    var options = interactable.options;\n\t\n\t    if (/^resize/.test(action)) {\n\t      action = 'resize';\n\t    }\n\t\n\t    return options[action].snap && options[action].snap.enabled;\n\t  }\n\t\n\t  function checkRestrict(interactable, action) {\n\t    var options = interactable.options;\n\t\n\t    if (/^resize/.test(action)) {\n\t      action = 'resize';\n\t    }\n\t\n\t    return options[action].restrict && options[action].restrict.enabled;\n\t  }\n\t\n\t  function checkAutoScroll(interactable, action) {\n\t    var options = interactable.options;\n\t\n\t    if (/^resize/.test(action)) {\n\t      action = 'resize';\n\t    }\n\t\n\t    return options[action].autoScroll && options[action].autoScroll.enabled;\n\t  }\n\t\n\t  function withinInteractionLimit(interactable, element, action) {\n\t    var options = interactable.options,\n\t        maxActions = options[action.name].max,\n\t        maxPerElement = options[action.name].maxPerElement,\n\t        activeInteractions = 0,\n\t        targetCount = 0,\n\t        targetElementCount = 0;\n\t\n\t    for (var i = 0, len = interactions.length; i < len; i++) {\n\t      var interaction = interactions[i],\n\t          otherAction = interaction.prepared.name,\n\t          active = interaction.interacting();\n\t\n\t      if (!active) {\n\t        continue;\n\t      }\n\t\n\t      activeInteractions++;\n\t\n\t      if (activeInteractions >= maxInteractions) {\n\t        return false;\n\t      }\n\t\n\t      if (interaction.target !== interactable) {\n\t        continue;\n\t      }\n\t\n\t      targetCount += otherAction === action.name | 0;\n\t\n\t      if (targetCount >= maxActions) {\n\t        return false;\n\t      }\n\t\n\t      if (interaction.element === element) {\n\t        targetElementCount++;\n\t\n\t        if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n\t          return false;\n\t        }\n\t      }\n\t    }\n\t\n\t    return maxInteractions > 0;\n\t  }\n\t\n\t  // Test for the element that's \"above\" all other qualifiers\n\t  function indexOfDeepestElement(elements) {\n\t    var dropzone,\n\t        deepestZone = elements[0],\n\t        index = deepestZone ? 0 : -1,\n\t        parent,\n\t        deepestZoneParents = [],\n\t        dropzoneParents = [],\n\t        child,\n\t        i,\n\t        n;\n\t\n\t    for (i = 1; i < elements.length; i++) {\n\t      dropzone = elements[i];\n\t\n\t      // an element might belong to multiple selector dropzones\n\t      if (!dropzone || dropzone === deepestZone) {\n\t        continue;\n\t      }\n\t\n\t      if (!deepestZone) {\n\t        deepestZone = dropzone;\n\t        index = i;\n\t        continue;\n\t      }\n\t\n\t      // check if the deepest or current are document.documentElement or document.rootElement\n\t      // - if the current dropzone is, do nothing and continue\n\t      if (dropzone.parentNode === dropzone.ownerDocument) {\n\t        continue;\n\t      }\n\t      // - if deepest is, update with the current dropzone and continue to next\n\t      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n\t          deepestZone = dropzone;\n\t          index = i;\n\t          continue;\n\t        }\n\t\n\t      if (!deepestZoneParents.length) {\n\t        parent = deepestZone;\n\t        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n\t          deepestZoneParents.unshift(parent);\n\t          parent = parent.parentNode;\n\t        }\n\t      }\n\t\n\t      // if this element is an svg element and the current deepest is\n\t      // an HTMLElement\n\t      if (deepestZone instanceof HTMLElement && dropzone instanceof SVGElement && !(dropzone instanceof SVGSVGElement)) {\n\t        if (dropzone === deepestZone.parentNode) {\n\t          continue;\n\t        }\n\t\n\t        parent = dropzone.ownerSVGElement;\n\t      } else {\n\t        parent = dropzone;\n\t      }\n\t\n\t      dropzoneParents = [];\n\t\n\t      while (parent.parentNode !== parent.ownerDocument) {\n\t        dropzoneParents.unshift(parent);\n\t        parent = parent.parentNode;\n\t      }\n\t\n\t      n = 0;\n\t\n\t      // get (position of last common ancestor) + 1\n\t      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n\t        n++;\n\t      }\n\t\n\t      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\t\n\t      child = parents[0].lastChild;\n\t\n\t      while (child) {\n\t        if (child === parents[1]) {\n\t          deepestZone = dropzone;\n\t          index = i;\n\t          deepestZoneParents = [];\n\t\n\t          break;\n\t        } else if (child === parents[2]) {\n\t          break;\n\t        }\n\t\n\t        child = child.previousSibling;\n\t      }\n\t    }\n\t\n\t    return index;\n\t  }\n\t\n\t  function Interaction() {\n\t    this.target = null; // current interactable being interacted with\n\t    this.element = null; // the target element of the interactable\n\t    this.dropTarget = null; // the dropzone a drag target might be dropped into\n\t    this.dropElement = null; // the element at the time of checking\n\t    this.prevDropTarget = null; // the dropzone that was recently dragged away from\n\t    this.prevDropElement = null; // the element at the time of checking\n\t\n\t    this.prepared = {\n\t      // action that's ready to be fired on next move event\n\t      name: null,\n\t      axis: null,\n\t      edges: null\n\t    };\n\t\n\t    this.matches = []; // all selectors that are matched by target element\n\t    this.matchElements = []; // corresponding elements\n\t\n\t    this.inertiaStatus = {\n\t      active: false,\n\t      smoothEnd: false,\n\t      ending: false,\n\t\n\t      startEvent: null,\n\t      upCoords: {},\n\t\n\t      xe: 0,\n\t      ye: 0,\n\t      sx: 0,\n\t      sy: 0,\n\t\n\t      t0: 0,\n\t      vx0: 0,\n\t      vys: 0,\n\t      duration: 0,\n\t\n\t      resumeDx: 0,\n\t      resumeDy: 0,\n\t\n\t      lambda_v0: 0,\n\t      one_ve_v0: 0,\n\t      i: null\n\t    };\n\t\n\t    if (isFunction(Function.prototype.bind)) {\n\t      this.boundInertiaFrame = this.inertiaFrame.bind(this);\n\t      this.boundSmoothEndFrame = this.smoothEndFrame.bind(this);\n\t    } else {\n\t      var that = this;\n\t\n\t      this.boundInertiaFrame = function () {\n\t        return that.inertiaFrame();\n\t      };\n\t      this.boundSmoothEndFrame = function () {\n\t        return that.smoothEndFrame();\n\t      };\n\t    }\n\t\n\t    this.activeDrops = {\n\t      dropzones: [], // the dropzones that are mentioned below\n\t      elements: [], // elements of dropzones that accept the target draggable\n\t      rects: [] // the rects of the elements mentioned above\n\t    };\n\t\n\t    // keep track of added pointers\n\t    this.pointers = [];\n\t    this.pointerIds = [];\n\t    this.downTargets = [];\n\t    this.downTimes = [];\n\t    this.holdTimers = [];\n\t\n\t    // Previous native pointer move event coordinates\n\t    this.prevCoords = {\n\t      page: { x: 0, y: 0 },\n\t      client: { x: 0, y: 0 },\n\t      timeStamp: 0\n\t    };\n\t    // current native pointer move event coordinates\n\t    this.curCoords = {\n\t      page: { x: 0, y: 0 },\n\t      client: { x: 0, y: 0 },\n\t      timeStamp: 0\n\t    };\n\t\n\t    // Starting InteractEvent pointer coordinates\n\t    this.startCoords = {\n\t      page: { x: 0, y: 0 },\n\t      client: { x: 0, y: 0 },\n\t      timeStamp: 0\n\t    };\n\t\n\t    // Change in coordinates and time of the pointer\n\t    this.pointerDelta = {\n\t      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n\t      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n\t      timeStamp: 0\n\t    };\n\t\n\t    this.downEvent = null; // pointerdown/mousedown/touchstart event\n\t    this.downPointer = {};\n\t\n\t    this._eventTarget = null;\n\t    this._curEventTarget = null;\n\t\n\t    this.prevEvent = null; // previous action event\n\t    this.tapTime = 0; // time of the most recent tap event\n\t    this.prevTap = null;\n\t\n\t    this.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n\t    this.restrictOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n\t    this.snapOffsets = [];\n\t\n\t    this.gesture = {\n\t      start: { x: 0, y: 0 },\n\t\n\t      startDistance: 0, // distance between two touches of touchStart\n\t      prevDistance: 0,\n\t      distance: 0,\n\t\n\t      scale: 1, // gesture.distance / gesture.startDistance\n\t\n\t      startAngle: 0, // angle of line joining two touches\n\t      prevAngle: 0 // angle of the previous gesture event\n\t    };\n\t\n\t    this.snapStatus = {\n\t      x: 0,\n\t      y: 0,\n\t      dx: 0,\n\t      dy: 0,\n\t      realX: 0,\n\t      realY: 0,\n\t      snappedX: 0,\n\t      snappedY: 0,\n\t      targets: [],\n\t      locked: false,\n\t      changed: false\n\t    };\n\t\n\t    this.restrictStatus = {\n\t      dx: 0,\n\t      dy: 0,\n\t      restrictedX: 0,\n\t      restrictedY: 0,\n\t      snap: null,\n\t      restricted: false,\n\t      changed: false\n\t    };\n\t\n\t    this.restrictStatus.snap = this.snapStatus;\n\t\n\t    this.pointerIsDown = false;\n\t    this.pointerWasMoved = false;\n\t    this.gesturing = false;\n\t    this.dragging = false;\n\t    this.resizing = false;\n\t    this.resizeAxes = 'xy';\n\t\n\t    this.mouse = false;\n\t\n\t    interactions.push(this);\n\t  }\n\t\n\t  Interaction.prototype = {\n\t    getPageXY: function getPageXY(pointer, xy) {\n\t      return _getPageXY(pointer, xy, this);\n\t    },\n\t    getClientXY: function getClientXY(pointer, xy) {\n\t      return _getClientXY(pointer, xy, this);\n\t    },\n\t    setEventXY: function setEventXY(target, ptr) {\n\t      return _setEventXY(target, ptr, this);\n\t    },\n\t\n\t    pointerOver: function pointerOver(pointer, event, eventTarget) {\n\t      if (this.prepared.name || !this.mouse) {\n\t        return;\n\t      }\n\t\n\t      var curMatches = [],\n\t          curMatchElements = [],\n\t          prevTargetElement = this.element;\n\t\n\t      this.addPointer(pointer);\n\t\n\t      if (this.target && (testIgnore(this.target, this.element, eventTarget) || !testAllow(this.target, this.element, eventTarget))) {\n\t        // if the eventTarget should be ignored or shouldn't be allowed\n\t        // clear the previous target\n\t        this.target = null;\n\t        this.element = null;\n\t        this.matches = [];\n\t        this.matchElements = [];\n\t      }\n\t\n\t      var elementInteractable = interactables.get(eventTarget),\n\t          elementAction = elementInteractable && !testIgnore(elementInteractable, eventTarget, eventTarget) && testAllow(elementInteractable, eventTarget, eventTarget) && validateAction(elementInteractable.getAction(pointer, event, this, eventTarget), elementInteractable);\n\t\n\t      if (elementAction && !withinInteractionLimit(elementInteractable, eventTarget, elementAction)) {\n\t        elementAction = null;\n\t      }\n\t\n\t      function pushCurMatches(interactable, selector) {\n\t        if (interactable && inContext(interactable, eventTarget) && !testIgnore(interactable, eventTarget, eventTarget) && testAllow(interactable, eventTarget, eventTarget) && matchesSelector(eventTarget, selector)) {\n\t          curMatches.push(interactable);\n\t          curMatchElements.push(eventTarget);\n\t        }\n\t      }\n\t\n\t      if (elementAction) {\n\t        this.target = elementInteractable;\n\t        this.element = eventTarget;\n\t        this.matches = [];\n\t        this.matchElements = [];\n\t      } else {\n\t        interactables.forEachSelector(pushCurMatches);\n\t\n\t        if (this.validateSelector(pointer, event, curMatches, curMatchElements)) {\n\t          this.matches = curMatches;\n\t          this.matchElements = curMatchElements;\n\t\n\t          this.pointerHover(pointer, event, this.matches, this.matchElements);\n\t          events.add(eventTarget, supportsPointerEvent ? pEventTypes.move : 'mousemove', listeners.pointerHover);\n\t        } else if (this.target) {\n\t          if (nodeContains(prevTargetElement, eventTarget)) {\n\t            this.pointerHover(pointer, event, this.matches, this.matchElements);\n\t            events.add(this.element, supportsPointerEvent ? pEventTypes.move : 'mousemove', listeners.pointerHover);\n\t          } else {\n\t            this.target = null;\n\t            this.element = null;\n\t            this.matches = [];\n\t            this.matchElements = [];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    // Check what action would be performed on pointerMove target if a mouse\n\t    // button were pressed and change the cursor accordingly\n\t    pointerHover: function pointerHover(pointer, event, eventTarget, curEventTarget, matches, matchElements) {\n\t      var target = this.target;\n\t\n\t      if (!this.prepared.name && this.mouse) {\n\t        var action;\n\t\n\t        // update pointer coords for defaultActionChecker to use\n\t        this.setEventXY(this.curCoords, [pointer]);\n\t\n\t        if (matches) {\n\t          action = this.validateSelector(pointer, event, matches, matchElements);\n\t        } else if (target) {\n\t          action = validateAction(target.getAction(this.pointers[0], event, this, this.element), this.target);\n\t        }\n\t\n\t        if (target && target.options.styleCursor) {\n\t          if (action) {\n\t            target._doc.documentElement.style.cursor = getActionCursor(action);\n\t          } else {\n\t            target._doc.documentElement.style.cursor = '';\n\t          }\n\t        }\n\t      } else if (this.prepared.name) {\n\t        this.checkAndPreventDefault(event, target, this.element);\n\t      }\n\t    },\n\t\n\t    pointerOut: function pointerOut(pointer, event, eventTarget) {\n\t      if (this.prepared.name) {\n\t        return;\n\t      }\n\t\n\t      // Remove temporary event listeners for selector Interactables\n\t      if (!interactables.get(eventTarget)) {\n\t        events.remove(eventTarget, supportsPointerEvent ? pEventTypes.move : 'mousemove', listeners.pointerHover);\n\t      }\n\t\n\t      if (this.target && this.target.options.styleCursor && !this.interacting()) {\n\t        this.target._doc.documentElement.style.cursor = '';\n\t      }\n\t    },\n\t\n\t    selectorDown: function selectorDown(pointer, event, eventTarget, curEventTarget) {\n\t      var that = this,\n\t\n\t      // copy event to be used in timeout for IE8\n\t      eventCopy = events.useAttachEvent ? extend({}, event) : event,\n\t          element = eventTarget,\n\t          pointerIndex = this.addPointer(pointer),\n\t          action;\n\t\n\t      this.holdTimers[pointerIndex] = setTimeout(function () {\n\t        that.pointerHold(events.useAttachEvent ? eventCopy : pointer, eventCopy, eventTarget, curEventTarget);\n\t      }, defaultOptions._holdDuration);\n\t\n\t      this.pointerIsDown = true;\n\t\n\t      // Check if the down event hits the current inertia target\n\t      if (this.inertiaStatus.active && this.target.selector) {\n\t        // climb up the DOM tree from the event target\n\t        while (isElement(element)) {\n\t          // if this element is the current inertia target element\n\t          if (element === this.element &&\n\t          // and the prospective action is the same as the ongoing one\n\t          validateAction(this.target.getAction(pointer, event, this, this.element), this.target).name === this.prepared.name) {\n\t            // stop inertia so that the next move will be a normal one\n\t            cancelFrame(this.inertiaStatus.i);\n\t            this.inertiaStatus.active = false;\n\t\n\t            this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t            return;\n\t          }\n\t          element = parentElement(element);\n\t        }\n\t      }\n\t\n\t      // do nothing if interacting\n\t      if (this.interacting()) {\n\t        this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t        return;\n\t      }\n\t\n\t      function pushMatches(interactable, selector, context) {\n\t        var elements = ie8MatchesSelector ? context.querySelectorAll(selector) : undefined;\n\t\n\t        if (inContext(interactable, element) && !testIgnore(interactable, element, eventTarget) && testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, elements)) {\n\t          that.matches.push(interactable);\n\t          that.matchElements.push(element);\n\t        }\n\t      }\n\t\n\t      // update pointer coords for defaultActionChecker to use\n\t      this.setEventXY(this.curCoords, [pointer]);\n\t      this.downEvent = event;\n\t\n\t      while (isElement(element) && !action) {\n\t        this.matches = [];\n\t        this.matchElements = [];\n\t\n\t        interactables.forEachSelector(pushMatches);\n\t\n\t        action = this.validateSelector(pointer, event, this.matches, this.matchElements);\n\t        element = parentElement(element);\n\t      }\n\t\n\t      if (action) {\n\t        this.prepared.name = action.name;\n\t        this.prepared.axis = action.axis;\n\t        this.prepared.edges = action.edges;\n\t\n\t        this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t\n\t        return this.pointerDown(pointer, event, eventTarget, curEventTarget, action);\n\t      } else {\n\t        // do these now since pointerDown isn't being called from here\n\t        this.downTimes[pointerIndex] = new Date().getTime();\n\t        this.downTargets[pointerIndex] = eventTarget;\n\t        pointerExtend(this.downPointer, pointer);\n\t\n\t        copyCoords(this.prevCoords, this.curCoords);\n\t        this.pointerWasMoved = false;\n\t      }\n\t\n\t      this.collectEventTargets(pointer, event, eventTarget, 'down');\n\t    },\n\t\n\t    // Determine action to be performed on next pointerMove and add appropriate\n\t    // style and event Listeners\n\t    pointerDown: function pointerDown(pointer, event, eventTarget, curEventTarget, forceAction) {\n\t      if (!forceAction && !this.inertiaStatus.active && this.pointerWasMoved && this.prepared.name) {\n\t        this.checkAndPreventDefault(event, this.target, this.element);\n\t\n\t        return;\n\t      }\n\t\n\t      this.pointerIsDown = true;\n\t      this.downEvent = event;\n\t\n\t      var pointerIndex = this.addPointer(pointer),\n\t          action;\n\t\n\t      // If it is the second touch of a multi-touch gesture, keep the\n\t      // target the same and get a new action if a target was set by the\n\t      // first touch\n\t      if (this.pointerIds.length > 1 && this.target._element === this.element) {\n\t        var newAction = validateAction(forceAction || this.target.getAction(pointer, event, this, this.element), this.target);\n\t\n\t        if (withinInteractionLimit(this.target, this.element, newAction)) {\n\t          action = newAction;\n\t        }\n\t\n\t        this.prepared.name = null;\n\t      }\n\t      // Otherwise, set the target if there is no action prepared\n\t      else if (!this.prepared.name) {\n\t          var interactable = interactables.get(curEventTarget);\n\t\n\t          if (interactable && !testIgnore(interactable, curEventTarget, eventTarget) && testAllow(interactable, curEventTarget, eventTarget) && (action = validateAction(forceAction || interactable.getAction(pointer, event, this, curEventTarget), interactable, eventTarget)) && withinInteractionLimit(interactable, curEventTarget, action)) {\n\t            this.target = interactable;\n\t            this.element = curEventTarget;\n\t          }\n\t        }\n\t\n\t      var target = this.target,\n\t          options = target && target.options;\n\t\n\t      if (target && (forceAction || !this.prepared.name)) {\n\t        action = action || validateAction(forceAction || target.getAction(pointer, event, this, curEventTarget), target, this.element);\n\t\n\t        this.setEventXY(this.startCoords, this.pointers);\n\t\n\t        if (!action) {\n\t          return;\n\t        }\n\t\n\t        if (options.styleCursor) {\n\t          target._doc.documentElement.style.cursor = getActionCursor(action);\n\t        }\n\t\n\t        this.resizeAxes = action.name === 'resize' ? action.axis : null;\n\t\n\t        if (action === 'gesture' && this.pointerIds.length < 2) {\n\t          action = null;\n\t        }\n\t\n\t        this.prepared.name = action.name;\n\t        this.prepared.axis = action.axis;\n\t        this.prepared.edges = action.edges;\n\t\n\t        this.snapStatus.snappedX = this.snapStatus.snappedY = this.restrictStatus.restrictedX = this.restrictStatus.restrictedY = NaN;\n\t\n\t        this.downTimes[pointerIndex] = new Date().getTime();\n\t        this.downTargets[pointerIndex] = eventTarget;\n\t        pointerExtend(this.downPointer, pointer);\n\t\n\t        copyCoords(this.prevCoords, this.startCoords);\n\t        this.pointerWasMoved = false;\n\t\n\t        this.checkAndPreventDefault(event, target, this.element);\n\t      }\n\t      // if inertia is active try to resume action\n\t      else if (this.inertiaStatus.active && curEventTarget === this.element && validateAction(target.getAction(pointer, event, this, this.element), target).name === this.prepared.name) {\n\t          cancelFrame(this.inertiaStatus.i);\n\t          this.inertiaStatus.active = false;\n\t\n\t          this.checkAndPreventDefault(event, target, this.element);\n\t        }\n\t    },\n\t\n\t    setModifications: function setModifications(coords, preEnd) {\n\t      var target = this.target,\n\t          shouldMove = true,\n\t          shouldSnap = checkSnap(target, this.prepared.name) && (!target.options[this.prepared.name].snap.endOnly || preEnd),\n\t          shouldRestrict = checkRestrict(target, this.prepared.name) && (!target.options[this.prepared.name].restrict.endOnly || preEnd);\n\t\n\t      if (shouldSnap) {\n\t        this.setSnapping(coords);\n\t      } else {\n\t        this.snapStatus.locked = false;\n\t      }\n\t      if (shouldRestrict) {\n\t        this.setRestriction(coords);\n\t      } else {\n\t        this.restrictStatus.restricted = false;\n\t      }\n\t\n\t      if (shouldSnap && this.snapStatus.locked && !this.snapStatus.changed) {\n\t        shouldMove = shouldRestrict && this.restrictStatus.restricted && this.restrictStatus.changed;\n\t      } else if (shouldRestrict && this.restrictStatus.restricted && !this.restrictStatus.changed) {\n\t        shouldMove = false;\n\t      }\n\t\n\t      return shouldMove;\n\t    },\n\t\n\t    setStartOffsets: function setStartOffsets(action, interactable, element) {\n\t      var rect = interactable.getRect(element),\n\t          origin = getOriginXY(interactable, element),\n\t          snap = interactable.options[this.prepared.name].snap,\n\t          restrict = interactable.options[this.prepared.name].restrict,\n\t          width,\n\t          height;\n\t\n\t      if (rect) {\n\t        this.startOffset.left = this.startCoords.page.x - rect.left;\n\t        this.startOffset.top = this.startCoords.page.y - rect.top;\n\t\n\t        this.startOffset.right = rect.right - this.startCoords.page.x;\n\t        this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\t\n\t        if ('width' in rect) {\n\t          width = rect.width;\n\t        } else {\n\t          width = rect.right - rect.left;\n\t        }\n\t        if ('height' in rect) {\n\t          height = rect.height;\n\t        } else {\n\t          height = rect.bottom - rect.top;\n\t        }\n\t      } else {\n\t        this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n\t      }\n\t\n\t      this.snapOffsets.splice(0);\n\t\n\t      var snapOffset = snap && snap.offset === 'startCoords' ? {\n\t        x: this.startCoords.page.x - origin.x,\n\t        y: this.startCoords.page.y - origin.y\n\t      } : snap && snap.offset || { x: 0, y: 0 };\n\t\n\t      if (rect && snap && snap.relativePoints && snap.relativePoints.length) {\n\t        for (var i = 0; i < snap.relativePoints.length; i++) {\n\t          this.snapOffsets.push({\n\t            x: this.startOffset.left - width * snap.relativePoints[i].x + snapOffset.x,\n\t            y: this.startOffset.top - height * snap.relativePoints[i].y + snapOffset.y\n\t          });\n\t        }\n\t      } else {\n\t        this.snapOffsets.push(snapOffset);\n\t      }\n\t\n\t      if (rect && restrict.elementRect) {\n\t        this.restrictOffset.left = this.startOffset.left - width * restrict.elementRect.left;\n\t        this.restrictOffset.top = this.startOffset.top - height * restrict.elementRect.top;\n\t\n\t        this.restrictOffset.right = this.startOffset.right - width * (1 - restrict.elementRect.right);\n\t        this.restrictOffset.bottom = this.startOffset.bottom - height * (1 - restrict.elementRect.bottom);\n\t      } else {\n\t        this.restrictOffset.left = this.restrictOffset.top = this.restrictOffset.right = this.restrictOffset.bottom = 0;\n\t      }\n\t    },\n\t\n\t    /*\\\n\t         * Interaction.start\n\t         [ method ]\n\t         *\n\t         * Start an action with the given Interactable and Element as tartgets. The\n\t         * action must be enabled for the target Interactable and an appropriate number\n\t         * of pointers must be held down – 1 for drag/resize, 2 for gesture.\n\t         *\n\t         * Use it with `interactable.<action>able({ manualStart: false })` to always\n\t         * [start actions manually](https://github.com/taye/interact.js/issues/114)\n\t         *\n\t         - action       (object)  The action to be performed - drag, resize, etc.\n\t         - interactable (Interactable) The Interactable to target\n\t         - element      (Element) The DOM Element to target\n\t         = (object) interact\n\t         **\n\t         | interact(target)\n\t         |   .draggable({\n\t         |     // disable the default drag start by down->move\n\t         |     manualStart: true\n\t         |   })\n\t         |   // start dragging after the user holds the pointer down\n\t         |   .on('hold', function (event) {\n\t         |     var interaction = event.interaction;\n\t         |\n\t         |     if (!interaction.interacting()) {\n\t         |       interaction.start({ name: 'drag' },\n\t         |                         event.interactable,\n\t         |                         event.currentTarget);\n\t         |     }\n\t         | });\n\t        \\*/\n\t    start: function start(action, interactable, element) {\n\t      if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n\t        return;\n\t      }\n\t\n\t      // if this interaction had been removed after stopping\n\t      // add it back\n\t      if (indexOf(interactions, this) === -1) {\n\t        interactions.push(this);\n\t      }\n\t\n\t      // set the startCoords if there was no prepared action\n\t      if (!this.prepared.name) {\n\t        this.setEventXY(this.startCoords, this.pointers);\n\t      }\n\t\n\t      this.prepared.name = action.name;\n\t      this.prepared.axis = action.axis;\n\t      this.prepared.edges = action.edges;\n\t      this.target = interactable;\n\t      this.element = element;\n\t\n\t      this.setStartOffsets(action.name, interactable, element);\n\t      this.setModifications(this.startCoords.page);\n\t\n\t      this.prevEvent = this[this.prepared.name + 'Start'](this.downEvent);\n\t    },\n\t\n\t    pointerMove: function pointerMove(pointer, event, eventTarget, curEventTarget, preEnd) {\n\t      if (this.inertiaStatus.active) {\n\t        var pageUp = this.inertiaStatus.upCoords.page;\n\t        var clientUp = this.inertiaStatus.upCoords.client;\n\t\n\t        var inertiaPosition = {\n\t          pageX: pageUp.x + this.inertiaStatus.sx,\n\t          pageY: pageUp.y + this.inertiaStatus.sy,\n\t          clientX: clientUp.x + this.inertiaStatus.sx,\n\t          clientY: clientUp.y + this.inertiaStatus.sy\n\t        };\n\t\n\t        this.setEventXY(this.curCoords, [inertiaPosition]);\n\t      } else {\n\t        this.recordPointer(pointer);\n\t        this.setEventXY(this.curCoords, this.pointers);\n\t      }\n\t\n\t      var duplicateMove = this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y;\n\t\n\t      var dx,\n\t          dy,\n\t          pointerIndex = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t      // register movement greater than pointerMoveTolerance\n\t      if (this.pointerIsDown && !this.pointerWasMoved) {\n\t        dx = this.curCoords.client.x - this.startCoords.client.x;\n\t        dy = this.curCoords.client.y - this.startCoords.client.y;\n\t\n\t        this.pointerWasMoved = hypot(dx, dy) > pointerMoveTolerance;\n\t      }\n\t\n\t      if (!duplicateMove && (!this.pointerIsDown || this.pointerWasMoved)) {\n\t        if (this.pointerIsDown) {\n\t          clearTimeout(this.holdTimers[pointerIndex]);\n\t        }\n\t\n\t        this.collectEventTargets(pointer, event, eventTarget, 'move');\n\t      }\n\t\n\t      if (!this.pointerIsDown) {\n\t        return;\n\t      }\n\t\n\t      if (duplicateMove && this.pointerWasMoved && !preEnd) {\n\t        this.checkAndPreventDefault(event, this.target, this.element);\n\t        return;\n\t      }\n\t\n\t      // set pointer coordinate, time changes and speeds\n\t      setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\t\n\t      if (!this.prepared.name) {\n\t        return;\n\t      }\n\t\n\t      if (this.pointerWasMoved && (\n\t      // ignore movement while inertia is active\n\t      !this.inertiaStatus.active || pointer instanceof InteractEvent && /inertiastart/.test(pointer.type))) {\n\t        // if just starting an action, calculate the pointer speed now\n\t        if (!this.interacting()) {\n\t          setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\t\n\t          // check if a drag is in the correct axis\n\t          if (this.prepared.name === 'drag') {\n\t            var absX = Math.abs(dx),\n\t                absY = Math.abs(dy),\n\t                targetAxis = this.target.options.drag.axis,\n\t                axis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\t\n\t            // if the movement isn't in the axis of the interactable\n\t            if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n\t              // cancel the prepared action\n\t              this.prepared.name = null;\n\t\n\t              // then try to get a drag from another ineractable\n\t\n\t              var element = eventTarget;\n\t\n\t              // check element interactables\n\t              while (isElement(element)) {\n\t                var elementInteractable = interactables.get(element);\n\t\n\t                if (elementInteractable && elementInteractable !== this.target && !elementInteractable.options.drag.manualStart && (elementInteractable.getAction(this.downPointer, this.downEvent, this, element) || {}).name === 'drag' && checkAxis(axis, elementInteractable)) {\n\t                  this.prepared.name = 'drag';\n\t                  this.target = elementInteractable;\n\t                  this.element = element;\n\t                  break;\n\t                }\n\t\n\t                element = parentElement(element);\n\t              }\n\t\n\t              // if there's no drag from element interactables,\n\t              // check the selector interactables\n\t              if (!this.prepared.name) {\n\t                var thisInteraction = this;\n\t\n\t                var getDraggable = function getDraggable(interactable, selector, context) {\n\t                  var elements = ie8MatchesSelector ? context.querySelectorAll(selector) : undefined;\n\t\n\t                  if (interactable === thisInteraction.target) {\n\t                    return;\n\t                  }\n\t\n\t                  if (inContext(interactable, eventTarget) && !interactable.options.drag.manualStart && !testIgnore(interactable, element, eventTarget) && testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, elements) && interactable.getAction(thisInteraction.downPointer, thisInteraction.downEvent, thisInteraction, element).name === 'drag' && checkAxis(axis, interactable) && withinInteractionLimit(interactable, element, 'drag')) {\n\t                    return interactable;\n\t                  }\n\t                };\n\t\n\t                element = eventTarget;\n\t\n\t                while (isElement(element)) {\n\t                  var selectorInteractable = interactables.forEachSelector(getDraggable);\n\t\n\t                  if (selectorInteractable) {\n\t                    this.prepared.name = 'drag';\n\t                    this.target = selectorInteractable;\n\t                    this.element = element;\n\t                    break;\n\t                  }\n\t\n\t                  element = parentElement(element);\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        var starting = !!this.prepared.name && !this.interacting();\n\t\n\t        if (starting && (this.target.options[this.prepared.name].manualStart || !withinInteractionLimit(this.target, this.element, this.prepared))) {\n\t          this.stop(event);\n\t          return;\n\t        }\n\t\n\t        if (this.prepared.name && this.target) {\n\t          if (starting) {\n\t            this.start(this.prepared, this.target, this.element);\n\t          }\n\t\n\t          var shouldMove = this.setModifications(this.curCoords.page, preEnd);\n\t\n\t          // move if snapping or restriction doesn't prevent it\n\t          if (shouldMove || starting) {\n\t            this.prevEvent = this[this.prepared.name + 'Move'](event);\n\t          }\n\t\n\t          this.checkAndPreventDefault(event, this.target, this.element);\n\t        }\n\t      }\n\t\n\t      copyCoords(this.prevCoords, this.curCoords);\n\t\n\t      if (this.dragging || this.resizing) {\n\t        this.autoScrollMove(pointer);\n\t      }\n\t    },\n\t\n\t    dragStart: function dragStart(event) {\n\t      var dragEvent = new InteractEvent(this, event, 'drag', 'start', this.element);\n\t\n\t      dragEvent.originalEvent = event;\n\t      this.dragging = true;\n\t      this.target.fire(dragEvent);\n\t\n\t      // reset active dropzones\n\t      this.activeDrops.dropzones = [];\n\t      this.activeDrops.elements = [];\n\t      this.activeDrops.rects = [];\n\t\n\t      if (!this.dynamicDrop) {\n\t        this.setActiveDrops(this.element);\n\t      }\n\t\n\t      var dropEvents = this.getDropEvents(event, dragEvent);\n\t\n\t      if (dropEvents.activate) {\n\t        this.fireActiveDrops(dropEvents.activate);\n\t      }\n\t\n\t      return dragEvent;\n\t    },\n\t\n\t    dragMove: function dragMove(event) {\n\t      var target = this.target,\n\t          dragEvent = new InteractEvent(this, event, 'drag', 'move', this.element),\n\t          draggableElement = this.element,\n\t          drop = this.getDrop(dragEvent, event, draggableElement);\n\t\n\t      dragEvent.originalEvent = event;\n\t\n\t      this.dropTarget = drop.dropzone;\n\t      this.dropElement = drop.element;\n\t\n\t      var dropEvents = this.getDropEvents(event, dragEvent);\n\t\n\t      target.fire(dragEvent);\n\t\n\t      if (dropEvents.leave) {\n\t        this.prevDropTarget.fire(dropEvents.leave);\n\t      }\n\t      if (dropEvents.enter) {\n\t        this.dropTarget.fire(dropEvents.enter);\n\t      }\n\t      if (dropEvents.move) {\n\t        this.dropTarget.fire(dropEvents.move);\n\t      }\n\t\n\t      this.prevDropTarget = this.dropTarget;\n\t      this.prevDropElement = this.dropElement;\n\t\n\t      return dragEvent;\n\t    },\n\t\n\t    resizeStart: function resizeStart(event) {\n\t      var resizeEvent = new InteractEvent(this, event, 'resize', 'start', this.element);\n\t\n\t      if (this.prepared.edges) {\n\t        var startRect = this.target.getRect(this.element);\n\t\n\t        /*\n\t         * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n\t         * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n\t         * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n\t         * on the active edges and the edge being interacted with.\n\t         */\n\t        if (this.target.options.resize.square || this.target.options.resize.preserveAspectRatio) {\n\t          var linkedEdges = extend({}, this.prepared.edges);\n\t\n\t          linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n\t          linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n\t          linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n\t          linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\t\n\t          this.prepared._linkedEdges = linkedEdges;\n\t        } else {\n\t          this.prepared._linkedEdges = null;\n\t        }\n\t\n\t        // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n\t        if (this.target.options.resize.preserveAspectRatio) {\n\t          this.resizeStartAspectRatio = startRect.width / startRect.height;\n\t        }\n\t\n\t        this.resizeRects = {\n\t          start: startRect,\n\t          current: extend({}, startRect),\n\t          restricted: extend({}, startRect),\n\t          previous: extend({}, startRect),\n\t          delta: {\n\t            left: 0,\n\t            right: 0,\n\t            width: 0,\n\t            top: 0,\n\t            bottom: 0,\n\t            height: 0\n\t          }\n\t        };\n\t\n\t        resizeEvent.rect = this.resizeRects.restricted;\n\t        resizeEvent.deltaRect = this.resizeRects.delta;\n\t      }\n\t\n\t      this.target.fire(resizeEvent);\n\t\n\t      this.resizing = true;\n\t\n\t      return resizeEvent;\n\t    },\n\t\n\t    resizeMove: function resizeMove(event) {\n\t      var resizeEvent = new InteractEvent(this, event, 'resize', 'move', this.element);\n\t\n\t      var edges = this.prepared.edges,\n\t          invert = this.target.options.resize.invert,\n\t          invertible = invert === 'reposition' || invert === 'negate';\n\t\n\t      if (edges) {\n\t        var dx = resizeEvent.dx,\n\t            dy = resizeEvent.dy,\n\t            start = this.resizeRects.start,\n\t            current = this.resizeRects.current,\n\t            restricted = this.resizeRects.restricted,\n\t            delta = this.resizeRects.delta,\n\t            previous = extend(this.resizeRects.previous, restricted),\n\t            originalEdges = edges;\n\t\n\t        // `resize.preserveAspectRatio` takes precedence over `resize.square`\n\t        if (this.target.options.resize.preserveAspectRatio) {\n\t          var resizeStartAspectRatio = this.resizeStartAspectRatio;\n\t\n\t          edges = this.prepared._linkedEdges;\n\t\n\t          if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n\t            dy = -dx / resizeStartAspectRatio;\n\t          } else if (originalEdges.left || originalEdges.right) {\n\t            dy = dx / resizeStartAspectRatio;\n\t          } else if (originalEdges.top || originalEdges.bottom) {\n\t            dx = dy * resizeStartAspectRatio;\n\t          }\n\t        } else if (this.target.options.resize.square) {\n\t          edges = this.prepared._linkedEdges;\n\t\n\t          if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n\t            dy = -dx;\n\t          } else if (originalEdges.left || originalEdges.right) {\n\t            dy = dx;\n\t          } else if (originalEdges.top || originalEdges.bottom) {\n\t            dx = dy;\n\t          }\n\t        }\n\t\n\t        // update the 'current' rect without modifications\n\t        if (edges.top) {\n\t          current.top += dy;\n\t        }\n\t        if (edges.bottom) {\n\t          current.bottom += dy;\n\t        }\n\t        if (edges.left) {\n\t          current.left += dx;\n\t        }\n\t        if (edges.right) {\n\t          current.right += dx;\n\t        }\n\t\n\t        if (invertible) {\n\t          // if invertible, copy the current rect\n\t          extend(restricted, current);\n\t\n\t          if (invert === 'reposition') {\n\t            // swap edge values if necessary to keep width/height positive\n\t            var swap;\n\t\n\t            if (restricted.top > restricted.bottom) {\n\t              swap = restricted.top;\n\t\n\t              restricted.top = restricted.bottom;\n\t              restricted.bottom = swap;\n\t            }\n\t            if (restricted.left > restricted.right) {\n\t              swap = restricted.left;\n\t\n\t              restricted.left = restricted.right;\n\t              restricted.right = swap;\n\t            }\n\t          }\n\t        } else {\n\t          // if not invertible, restrict to minimum of 0x0 rect\n\t          restricted.top = Math.min(current.top, start.bottom);\n\t          restricted.bottom = Math.max(current.bottom, start.top);\n\t          restricted.left = Math.min(current.left, start.right);\n\t          restricted.right = Math.max(current.right, start.left);\n\t        }\n\t\n\t        restricted.width = restricted.right - restricted.left;\n\t        restricted.height = restricted.bottom - restricted.top;\n\t\n\t        for (var edge in restricted) {\n\t          delta[edge] = restricted[edge] - previous[edge];\n\t        }\n\t\n\t        resizeEvent.edges = this.prepared.edges;\n\t        resizeEvent.rect = restricted;\n\t        resizeEvent.deltaRect = delta;\n\t      }\n\t\n\t      this.target.fire(resizeEvent);\n\t\n\t      return resizeEvent;\n\t    },\n\t\n\t    gestureStart: function gestureStart(event) {\n\t      var gestureEvent = new InteractEvent(this, event, 'gesture', 'start', this.element);\n\t\n\t      gestureEvent.ds = 0;\n\t\n\t      this.gesture.startDistance = this.gesture.prevDistance = gestureEvent.distance;\n\t      this.gesture.startAngle = this.gesture.prevAngle = gestureEvent.angle;\n\t      this.gesture.scale = 1;\n\t\n\t      this.gesturing = true;\n\t\n\t      this.target.fire(gestureEvent);\n\t\n\t      return gestureEvent;\n\t    },\n\t\n\t    gestureMove: function gestureMove(event) {\n\t      if (!this.pointerIds.length) {\n\t        return this.prevEvent;\n\t      }\n\t\n\t      var gestureEvent;\n\t\n\t      gestureEvent = new InteractEvent(this, event, 'gesture', 'move', this.element);\n\t      gestureEvent.ds = gestureEvent.scale - this.gesture.scale;\n\t\n\t      this.target.fire(gestureEvent);\n\t\n\t      this.gesture.prevAngle = gestureEvent.angle;\n\t      this.gesture.prevDistance = gestureEvent.distance;\n\t\n\t      if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\t        this.gesture.scale = gestureEvent.scale;\n\t      }\n\t\n\t      return gestureEvent;\n\t    },\n\t\n\t    pointerHold: function pointerHold(pointer, event, eventTarget) {\n\t      this.collectEventTargets(pointer, event, eventTarget, 'hold');\n\t    },\n\t\n\t    pointerUp: function pointerUp(pointer, event, eventTarget, curEventTarget) {\n\t      var pointerIndex = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t      clearTimeout(this.holdTimers[pointerIndex]);\n\t\n\t      this.collectEventTargets(pointer, event, eventTarget, 'up');\n\t      this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\t\n\t      this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\t\n\t      this.removePointer(pointer);\n\t    },\n\t\n\t    pointerCancel: function pointerCancel(pointer, event, eventTarget, curEventTarget) {\n\t      var pointerIndex = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t      clearTimeout(this.holdTimers[pointerIndex]);\n\t\n\t      this.collectEventTargets(pointer, event, eventTarget, 'cancel');\n\t      this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\t\n\t      this.removePointer(pointer);\n\t    },\n\t\n\t    // http://www.quirksmode.org/dom/events/click.html\n\t    // >Events leading to dblclick\n\t    //\n\t    // IE8 doesn't fire down event before dblclick.\n\t    // This workaround tries to fire a tap and doubletap after dblclick\n\t    ie8Dblclick: function ie8Dblclick(pointer, event, eventTarget) {\n\t      if (this.prevTap && event.clientX === this.prevTap.clientX && event.clientY === this.prevTap.clientY && eventTarget === this.prevTap.target) {\n\t        this.downTargets[0] = eventTarget;\n\t        this.downTimes[0] = new Date().getTime();\n\t        this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\t      }\n\t    },\n\t\n\t    // End interact move events and stop auto-scroll unless inertia is enabled\n\t    pointerEnd: function pointerEnd(pointer, event, eventTarget, curEventTarget) {\n\t      var endEvent,\n\t          target = this.target,\n\t          options = target && target.options,\n\t          inertiaOptions = options && this.prepared.name && options[this.prepared.name].inertia,\n\t          inertiaStatus = this.inertiaStatus;\n\t\n\t      if (this.interacting()) {\n\t        if (inertiaStatus.active && !inertiaStatus.ending) {\n\t          return;\n\t        }\n\t\n\t        var pointerSpeed,\n\t            now = new Date().getTime(),\n\t            inertiaPossible = false,\n\t            inertia = false,\n\t            smoothEnd = false,\n\t            endSnap = checkSnap(target, this.prepared.name) && options[this.prepared.name].snap.endOnly,\n\t            endRestrict = checkRestrict(target, this.prepared.name) && options[this.prepared.name].restrict.endOnly,\n\t            dx = 0,\n\t            dy = 0,\n\t            startEvent;\n\t\n\t        if (this.dragging) {\n\t          if (options.drag.axis === 'x') {\n\t            pointerSpeed = Math.abs(this.pointerDelta.client.vx);\n\t          } else if (options.drag.axis === 'y') {\n\t            pointerSpeed = Math.abs(this.pointerDelta.client.vy);\n\t          } /*options.drag.axis === 'xy'*/else {\n\t              pointerSpeed = this.pointerDelta.client.speed;\n\t            }\n\t        } else {\n\t          pointerSpeed = this.pointerDelta.client.speed;\n\t        }\n\t\n\t        // check if inertia should be started\n\t        inertiaPossible = inertiaOptions && inertiaOptions.enabled && this.prepared.name !== 'gesture' && event !== inertiaStatus.startEvent;\n\t\n\t        inertia = inertiaPossible && now - this.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\t\n\t        if (inertiaPossible && !inertia && (endSnap || endRestrict)) {\n\t          var snapRestrict = {};\n\t\n\t          snapRestrict.snap = snapRestrict.restrict = snapRestrict;\n\t\n\t          if (endSnap) {\n\t            this.setSnapping(this.curCoords.page, snapRestrict);\n\t            if (snapRestrict.locked) {\n\t              dx += snapRestrict.dx;\n\t              dy += snapRestrict.dy;\n\t            }\n\t          }\n\t\n\t          if (endRestrict) {\n\t            this.setRestriction(this.curCoords.page, snapRestrict);\n\t            if (snapRestrict.restricted) {\n\t              dx += snapRestrict.dx;\n\t              dy += snapRestrict.dy;\n\t            }\n\t          }\n\t\n\t          if (dx || dy) {\n\t            smoothEnd = true;\n\t          }\n\t        }\n\t\n\t        if (inertia || smoothEnd) {\n\t          copyCoords(inertiaStatus.upCoords, this.curCoords);\n\t\n\t          this.pointers[0] = inertiaStatus.startEvent = startEvent = new InteractEvent(this, event, this.prepared.name, 'inertiastart', this.element);\n\t\n\t          inertiaStatus.t0 = now;\n\t\n\t          target.fire(inertiaStatus.startEvent);\n\t\n\t          if (inertia) {\n\t            inertiaStatus.vx0 = this.pointerDelta.client.vx;\n\t            inertiaStatus.vy0 = this.pointerDelta.client.vy;\n\t            inertiaStatus.v0 = pointerSpeed;\n\t\n\t            this.calcInertia(inertiaStatus);\n\t\n\t            var page = extend({}, this.curCoords.page),\n\t                origin = getOriginXY(target, this.element),\n\t                statusObject;\n\t\n\t            page.x = page.x + inertiaStatus.xe - origin.x;\n\t            page.y = page.y + inertiaStatus.ye - origin.y;\n\t\n\t            statusObject = {\n\t              useStatusXY: true,\n\t              x: page.x,\n\t              y: page.y,\n\t              dx: 0,\n\t              dy: 0,\n\t              snap: null\n\t            };\n\t\n\t            statusObject.snap = statusObject;\n\t\n\t            dx = dy = 0;\n\t\n\t            if (endSnap) {\n\t              var snap = this.setSnapping(this.curCoords.page, statusObject);\n\t\n\t              if (snap.locked) {\n\t                dx += snap.dx;\n\t                dy += snap.dy;\n\t              }\n\t            }\n\t\n\t            if (endRestrict) {\n\t              var restrict = this.setRestriction(this.curCoords.page, statusObject);\n\t\n\t              if (restrict.restricted) {\n\t                dx += restrict.dx;\n\t                dy += restrict.dy;\n\t              }\n\t            }\n\t\n\t            inertiaStatus.modifiedXe += dx;\n\t            inertiaStatus.modifiedYe += dy;\n\t\n\t            inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n\t          } else {\n\t            inertiaStatus.smoothEnd = true;\n\t            inertiaStatus.xe = dx;\n\t            inertiaStatus.ye = dy;\n\t\n\t            inertiaStatus.sx = inertiaStatus.sy = 0;\n\t\n\t            inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n\t          }\n\t\n\t          inertiaStatus.active = true;\n\t          return;\n\t        }\n\t\n\t        if (endSnap || endRestrict) {\n\t          // fire a move event at the snapped coordinates\n\t          this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n\t        }\n\t      }\n\t\n\t      if (this.dragging) {\n\t        endEvent = new InteractEvent(this, event, 'drag', 'end', this.element);\n\t\n\t        var draggableElement = this.element,\n\t            drop = this.getDrop(endEvent, event, draggableElement);\n\t\n\t        this.dropTarget = drop.dropzone;\n\t        this.dropElement = drop.element;\n\t\n\t        var dropEvents = this.getDropEvents(event, endEvent);\n\t\n\t        if (dropEvents.leave) {\n\t          this.prevDropTarget.fire(dropEvents.leave);\n\t        }\n\t        if (dropEvents.enter) {\n\t          this.dropTarget.fire(dropEvents.enter);\n\t        }\n\t        if (dropEvents.drop) {\n\t          this.dropTarget.fire(dropEvents.drop);\n\t        }\n\t        if (dropEvents.deactivate) {\n\t          this.fireActiveDrops(dropEvents.deactivate);\n\t        }\n\t\n\t        target.fire(endEvent);\n\t      } else if (this.resizing) {\n\t        endEvent = new InteractEvent(this, event, 'resize', 'end', this.element);\n\t        target.fire(endEvent);\n\t      } else if (this.gesturing) {\n\t        endEvent = new InteractEvent(this, event, 'gesture', 'end', this.element);\n\t        target.fire(endEvent);\n\t      }\n\t\n\t      this.stop(event);\n\t    },\n\t\n\t    collectDrops: function collectDrops(element) {\n\t      var drops = [],\n\t          elements = [],\n\t          i;\n\t\n\t      element = element || this.element;\n\t\n\t      // collect all dropzones and their elements which qualify for a drop\n\t      for (i = 0; i < interactables.length; i++) {\n\t        if (!interactables[i].options.drop.enabled) {\n\t          continue;\n\t        }\n\t\n\t        var current = interactables[i],\n\t            accept = current.options.drop.accept;\n\t\n\t        // test the draggable element against the dropzone's accept setting\n\t        if (isElement(accept) && accept !== element || isString(accept) && !matchesSelector(element, accept)) {\n\t          continue;\n\t        }\n\t\n\t        // query for new elements if necessary\n\t        var dropElements = current.selector ? current._context.querySelectorAll(current.selector) : [current._element];\n\t\n\t        for (var j = 0, len = dropElements.length; j < len; j++) {\n\t          var currentElement = dropElements[j];\n\t\n\t          if (currentElement === element) {\n\t            continue;\n\t          }\n\t\n\t          drops.push(current);\n\t          elements.push(currentElement);\n\t        }\n\t      }\n\t\n\t      return {\n\t        dropzones: drops,\n\t        elements: elements\n\t      };\n\t    },\n\t\n\t    fireActiveDrops: function fireActiveDrops(event) {\n\t      var i, current, currentElement, prevElement;\n\t\n\t      // loop through all active dropzones and trigger event\n\t      for (i = 0; i < this.activeDrops.dropzones.length; i++) {\n\t        current = this.activeDrops.dropzones[i];\n\t        currentElement = this.activeDrops.elements[i];\n\t\n\t        // prevent trigger of duplicate events on same element\n\t        if (currentElement !== prevElement) {\n\t          // set current element as event target\n\t          event.target = currentElement;\n\t          current.fire(event);\n\t        }\n\t        prevElement = currentElement;\n\t      }\n\t    },\n\t\n\t    // Collect a new set of possible drops and save them in activeDrops.\n\t    // setActiveDrops should always be called when a drag has just started or a\n\t    // drag event happens while dynamicDrop is true\n\t    setActiveDrops: function setActiveDrops(dragElement) {\n\t      // get dropzones and their elements that could receive the draggable\n\t      var possibleDrops = this.collectDrops(dragElement, true);\n\t\n\t      this.activeDrops.dropzones = possibleDrops.dropzones;\n\t      this.activeDrops.elements = possibleDrops.elements;\n\t      this.activeDrops.rects = [];\n\t\n\t      for (var i = 0; i < this.activeDrops.dropzones.length; i++) {\n\t        this.activeDrops.rects[i] = this.activeDrops.dropzones[i].getRect(this.activeDrops.elements[i]);\n\t      }\n\t    },\n\t\n\t    getDrop: function getDrop(dragEvent, event, dragElement) {\n\t      var validDrops = [];\n\t\n\t      if (dynamicDrop) {\n\t        this.setActiveDrops(dragElement);\n\t      }\n\t\n\t      // collect all dropzones and their elements which qualify for a drop\n\t      for (var j = 0; j < this.activeDrops.dropzones.length; j++) {\n\t        var current = this.activeDrops.dropzones[j],\n\t            currentElement = this.activeDrops.elements[j],\n\t            rect = this.activeDrops.rects[j];\n\t\n\t        validDrops.push(current.dropCheck(dragEvent, event, this.target, dragElement, currentElement, rect) ? currentElement : null);\n\t      }\n\t\n\t      // get the most appropriate dropzone based on DOM depth and order\n\t      var dropIndex = indexOfDeepestElement(validDrops),\n\t          dropzone = this.activeDrops.dropzones[dropIndex] || null,\n\t          element = this.activeDrops.elements[dropIndex] || null;\n\t\n\t      return {\n\t        dropzone: dropzone,\n\t        element: element\n\t      };\n\t    },\n\t\n\t    getDropEvents: function getDropEvents(pointerEvent, dragEvent) {\n\t      var dropEvents = {\n\t        enter: null,\n\t        leave: null,\n\t        activate: null,\n\t        deactivate: null,\n\t        move: null,\n\t        drop: null\n\t      };\n\t\n\t      if (this.dropElement !== this.prevDropElement) {\n\t        // if there was a prevDropTarget, create a dragleave event\n\t        if (this.prevDropTarget) {\n\t          dropEvents.leave = {\n\t            target: this.prevDropElement,\n\t            dropzone: this.prevDropTarget,\n\t            relatedTarget: dragEvent.target,\n\t            draggable: dragEvent.interactable,\n\t            dragEvent: dragEvent,\n\t            interaction: this,\n\t            timeStamp: dragEvent.timeStamp,\n\t            type: 'dragleave'\n\t          };\n\t\n\t          dragEvent.dragLeave = this.prevDropElement;\n\t          dragEvent.prevDropzone = this.prevDropTarget;\n\t        }\n\t        // if the dropTarget is not null, create a dragenter event\n\t        if (this.dropTarget) {\n\t          dropEvents.enter = {\n\t            target: this.dropElement,\n\t            dropzone: this.dropTarget,\n\t            relatedTarget: dragEvent.target,\n\t            draggable: dragEvent.interactable,\n\t            dragEvent: dragEvent,\n\t            interaction: this,\n\t            timeStamp: dragEvent.timeStamp,\n\t            type: 'dragenter'\n\t          };\n\t\n\t          dragEvent.dragEnter = this.dropElement;\n\t          dragEvent.dropzone = this.dropTarget;\n\t        }\n\t      }\n\t\n\t      if (dragEvent.type === 'dragend' && this.dropTarget) {\n\t        dropEvents.drop = {\n\t          target: this.dropElement,\n\t          dropzone: this.dropTarget,\n\t          relatedTarget: dragEvent.target,\n\t          draggable: dragEvent.interactable,\n\t          dragEvent: dragEvent,\n\t          interaction: this,\n\t          timeStamp: dragEvent.timeStamp,\n\t          type: 'drop'\n\t        };\n\t\n\t        dragEvent.dropzone = this.dropTarget;\n\t      }\n\t      if (dragEvent.type === 'dragstart') {\n\t        dropEvents.activate = {\n\t          target: null,\n\t          dropzone: null,\n\t          relatedTarget: dragEvent.target,\n\t          draggable: dragEvent.interactable,\n\t          dragEvent: dragEvent,\n\t          interaction: this,\n\t          timeStamp: dragEvent.timeStamp,\n\t          type: 'dropactivate'\n\t        };\n\t      }\n\t      if (dragEvent.type === 'dragend') {\n\t        dropEvents.deactivate = {\n\t          target: null,\n\t          dropzone: null,\n\t          relatedTarget: dragEvent.target,\n\t          draggable: dragEvent.interactable,\n\t          dragEvent: dragEvent,\n\t          interaction: this,\n\t          timeStamp: dragEvent.timeStamp,\n\t          type: 'dropdeactivate'\n\t        };\n\t      }\n\t      if (dragEvent.type === 'dragmove' && this.dropTarget) {\n\t        dropEvents.move = {\n\t          target: this.dropElement,\n\t          dropzone: this.dropTarget,\n\t          relatedTarget: dragEvent.target,\n\t          draggable: dragEvent.interactable,\n\t          dragEvent: dragEvent,\n\t          interaction: this,\n\t          dragmove: dragEvent,\n\t          timeStamp: dragEvent.timeStamp,\n\t          type: 'dropmove'\n\t        };\n\t        dragEvent.dropzone = this.dropTarget;\n\t      }\n\t\n\t      return dropEvents;\n\t    },\n\t\n\t    currentAction: function currentAction() {\n\t      return this.dragging && 'drag' || this.resizing && 'resize' || this.gesturing && 'gesture' || null;\n\t    },\n\t\n\t    interacting: function interacting() {\n\t      return this.dragging || this.resizing || this.gesturing;\n\t    },\n\t\n\t    clearTargets: function clearTargets() {\n\t      this.target = this.element = null;\n\t\n\t      this.dropTarget = this.dropElement = this.prevDropTarget = this.prevDropElement = null;\n\t    },\n\t\n\t    stop: function stop(event) {\n\t      if (this.interacting()) {\n\t        autoScroll.stop();\n\t        this.matches = [];\n\t        this.matchElements = [];\n\t\n\t        var target = this.target;\n\t\n\t        if (target.options.styleCursor) {\n\t          target._doc.documentElement.style.cursor = '';\n\t        }\n\t\n\t        // prevent Default only if were previously interacting\n\t        if (event && isFunction(event.preventDefault)) {\n\t          this.checkAndPreventDefault(event, target, this.element);\n\t        }\n\t\n\t        if (this.dragging) {\n\t          this.activeDrops.dropzones = this.activeDrops.elements = this.activeDrops.rects = null;\n\t        }\n\t      }\n\t\n\t      this.clearTargets();\n\t\n\t      this.pointerIsDown = this.snapStatus.locked = this.dragging = this.resizing = this.gesturing = false;\n\t      this.prepared.name = this.prevEvent = null;\n\t      this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\t\n\t      // remove pointers if their ID isn't in this.pointerIds\n\t      for (var i = 0; i < this.pointers.length; i++) {\n\t        if (indexOf(this.pointerIds, getPointerId(this.pointers[i])) === -1) {\n\t          this.pointers.splice(i, 1);\n\t        }\n\t      }\n\t    },\n\t\n\t    inertiaFrame: function inertiaFrame() {\n\t      var inertiaStatus = this.inertiaStatus,\n\t          options = this.target.options[this.prepared.name].inertia,\n\t          lambda = options.resistance,\n\t          t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\t\n\t      if (t < inertiaStatus.te) {\n\t        var progress = 1 - (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) / inertiaStatus.one_ve_v0;\n\t\n\t        if (inertiaStatus.modifiedXe === inertiaStatus.xe && inertiaStatus.modifiedYe === inertiaStatus.ye) {\n\t          inertiaStatus.sx = inertiaStatus.xe * progress;\n\t          inertiaStatus.sy = inertiaStatus.ye * progress;\n\t        } else {\n\t          var quadPoint = getQuadraticCurvePoint(0, 0, inertiaStatus.xe, inertiaStatus.ye, inertiaStatus.modifiedXe, inertiaStatus.modifiedYe, progress);\n\t\n\t          inertiaStatus.sx = quadPoint.x;\n\t          inertiaStatus.sy = quadPoint.y;\n\t        }\n\t\n\t        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t        inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n\t      } else {\n\t        inertiaStatus.ending = true;\n\t\n\t        inertiaStatus.sx = inertiaStatus.modifiedXe;\n\t        inertiaStatus.sy = inertiaStatus.modifiedYe;\n\t\n\t        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t        this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t        inertiaStatus.active = inertiaStatus.ending = false;\n\t      }\n\t    },\n\t\n\t    smoothEndFrame: function smoothEndFrame() {\n\t      var inertiaStatus = this.inertiaStatus,\n\t          t = new Date().getTime() - inertiaStatus.t0,\n\t          duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\t\n\t      if (t < duration) {\n\t        inertiaStatus.sx = easeOutQuad(t, 0, inertiaStatus.xe, duration);\n\t        inertiaStatus.sy = easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\t\n\t        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t        inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n\t      } else {\n\t        inertiaStatus.ending = true;\n\t\n\t        inertiaStatus.sx = inertiaStatus.xe;\n\t        inertiaStatus.sy = inertiaStatus.ye;\n\t\n\t        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t        this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\t\n\t        inertiaStatus.smoothEnd = inertiaStatus.active = inertiaStatus.ending = false;\n\t      }\n\t    },\n\t\n\t    addPointer: function addPointer(pointer) {\n\t      var id = getPointerId(pointer),\n\t          index = this.mouse ? 0 : indexOf(this.pointerIds, id);\n\t\n\t      if (index === -1) {\n\t        index = this.pointerIds.length;\n\t      }\n\t\n\t      this.pointerIds[index] = id;\n\t      this.pointers[index] = pointer;\n\t\n\t      return index;\n\t    },\n\t\n\t    removePointer: function removePointer(pointer) {\n\t      var id = getPointerId(pointer),\n\t          index = this.mouse ? 0 : indexOf(this.pointerIds, id);\n\t\n\t      if (index === -1) {\n\t        return;\n\t      }\n\t\n\t      this.pointers.splice(index, 1);\n\t      this.pointerIds.splice(index, 1);\n\t      this.downTargets.splice(index, 1);\n\t      this.downTimes.splice(index, 1);\n\t      this.holdTimers.splice(index, 1);\n\t    },\n\t\n\t    recordPointer: function recordPointer(pointer) {\n\t      var index = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t      if (index === -1) {\n\t        return;\n\t      }\n\t\n\t      this.pointers[index] = pointer;\n\t    },\n\t\n\t    collectEventTargets: function collectEventTargets(pointer, event, eventTarget, eventType) {\n\t      var pointerIndex = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer));\n\t\n\t      // do not fire a tap event if the pointer was moved before being lifted\n\t      if (eventType === 'tap' && (this.pointerWasMoved ||\n\t      // or if the pointerup target is different to the pointerdown target\n\t      !(this.downTargets[pointerIndex] && this.downTargets[pointerIndex] === eventTarget))) {\n\t        return;\n\t      }\n\t\n\t      var targets = [],\n\t          elements = [],\n\t          element = eventTarget;\n\t\n\t      function collectSelectors(interactable, selector, context) {\n\t        var els = ie8MatchesSelector ? context.querySelectorAll(selector) : undefined;\n\t\n\t        if (interactable._iEvents[eventType] && isElement(element) && inContext(interactable, element) && !testIgnore(interactable, element, eventTarget) && testAllow(interactable, element, eventTarget) && matchesSelector(element, selector, els)) {\n\t          targets.push(interactable);\n\t          elements.push(element);\n\t        }\n\t      }\n\t\n\t      while (element) {\n\t        if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n\t          targets.push(interact(element));\n\t          elements.push(element);\n\t        }\n\t\n\t        interactables.forEachSelector(collectSelectors);\n\t\n\t        element = parentElement(element);\n\t      }\n\t\n\t      // create the tap event even if there are no listeners so that\n\t      // doubletap can still be created and fired\n\t      if (targets.length || eventType === 'tap') {\n\t        this.firePointers(pointer, event, eventTarget, targets, elements, eventType);\n\t      }\n\t    },\n\t\n\t    firePointers: function firePointers(pointer, event, eventTarget, targets, elements, eventType) {\n\t      var pointerIndex = this.mouse ? 0 : indexOf(this.pointerIds, getPointerId(pointer)),\n\t          pointerEvent = {},\n\t          i,\n\t\n\t      // for tap events\n\t      interval,\n\t          createNewDoubleTap;\n\t\n\t      // if it's a doubletap then the event properties would have been\n\t      // copied from the tap event and provided as the pointer argument\n\t      if (eventType === 'doubletap') {\n\t        pointerEvent = pointer;\n\t      } else {\n\t        pointerExtend(pointerEvent, event);\n\t        if (event !== pointer) {\n\t          pointerExtend(pointerEvent, pointer);\n\t        }\n\t\n\t        pointerEvent.preventDefault = preventOriginalDefault;\n\t        pointerEvent.stopPropagation = InteractEvent.prototype.stopPropagation;\n\t        pointerEvent.stopImmediatePropagation = InteractEvent.prototype.stopImmediatePropagation;\n\t        pointerEvent.interaction = this;\n\t\n\t        pointerEvent.timeStamp = new Date().getTime();\n\t        pointerEvent.originalEvent = event;\n\t        pointerEvent.originalPointer = pointer;\n\t        pointerEvent.type = eventType;\n\t        pointerEvent.pointerId = getPointerId(pointer);\n\t        pointerEvent.pointerType = this.mouse ? 'mouse' : !supportsPointerEvent ? 'touch' : isString(pointer.pointerType) ? pointer.pointerType : [,, 'touch', 'pen', 'mouse'][pointer.pointerType];\n\t      }\n\t\n\t      if (eventType === 'tap') {\n\t        pointerEvent.dt = pointerEvent.timeStamp - this.downTimes[pointerIndex];\n\t\n\t        interval = pointerEvent.timeStamp - this.tapTime;\n\t        createNewDoubleTap = !!(this.prevTap && this.prevTap.type !== 'doubletap' && this.prevTap.target === pointerEvent.target && interval < 500);\n\t\n\t        pointerEvent.double = createNewDoubleTap;\n\t\n\t        this.tapTime = pointerEvent.timeStamp;\n\t      }\n\t\n\t      for (i = 0; i < targets.length; i++) {\n\t        pointerEvent.currentTarget = elements[i];\n\t        pointerEvent.interactable = targets[i];\n\t        targets[i].fire(pointerEvent);\n\t\n\t        if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && elements[i + 1] !== pointerEvent.currentTarget) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (createNewDoubleTap) {\n\t        var doubleTap = {};\n\t\n\t        extend(doubleTap, pointerEvent);\n\t\n\t        doubleTap.dt = interval;\n\t        doubleTap.type = 'doubletap';\n\t\n\t        this.collectEventTargets(doubleTap, event, eventTarget, 'doubletap');\n\t\n\t        this.prevTap = doubleTap;\n\t      } else if (eventType === 'tap') {\n\t        this.prevTap = pointerEvent;\n\t      }\n\t    },\n\t\n\t    validateSelector: function validateSelector(pointer, event, matches, matchElements) {\n\t      for (var i = 0, len = matches.length; i < len; i++) {\n\t        var match = matches[i],\n\t            matchElement = matchElements[i],\n\t            action = validateAction(match.getAction(pointer, event, this, matchElement), match);\n\t\n\t        if (action && withinInteractionLimit(match, matchElement, action)) {\n\t          this.target = match;\n\t          this.element = matchElement;\n\t\n\t          return action;\n\t        }\n\t      }\n\t    },\n\t\n\t    setSnapping: function setSnapping(pageCoords, status) {\n\t      var snap = this.target.options[this.prepared.name].snap,\n\t          targets = [],\n\t          target,\n\t          page,\n\t          i;\n\t\n\t      status = status || this.snapStatus;\n\t\n\t      if (status.useStatusXY) {\n\t        page = { x: status.x, y: status.y };\n\t      } else {\n\t        var origin = getOriginXY(this.target, this.element);\n\t\n\t        page = extend({}, pageCoords);\n\t\n\t        page.x -= origin.x;\n\t        page.y -= origin.y;\n\t      }\n\t\n\t      status.realX = page.x;\n\t      status.realY = page.y;\n\t\n\t      page.x = page.x - this.inertiaStatus.resumeDx;\n\t      page.y = page.y - this.inertiaStatus.resumeDy;\n\t\n\t      var len = snap.targets ? snap.targets.length : 0;\n\t\n\t      for (var relIndex = 0; relIndex < this.snapOffsets.length; relIndex++) {\n\t        var relative = {\n\t          x: page.x - this.snapOffsets[relIndex].x,\n\t          y: page.y - this.snapOffsets[relIndex].y\n\t        };\n\t\n\t        for (i = 0; i < len; i++) {\n\t          if (isFunction(snap.targets[i])) {\n\t            target = snap.targets[i](relative.x, relative.y, this);\n\t          } else {\n\t            target = snap.targets[i];\n\t          }\n\t\n\t          if (!target) {\n\t            continue;\n\t          }\n\t\n\t          targets.push({\n\t            x: isNumber(target.x) ? target.x + this.snapOffsets[relIndex].x : relative.x,\n\t            y: isNumber(target.y) ? target.y + this.snapOffsets[relIndex].y : relative.y,\n\t\n\t            range: isNumber(target.range) ? target.range : snap.range\n\t          });\n\t        }\n\t      }\n\t\n\t      var closest = {\n\t        target: null,\n\t        inRange: false,\n\t        distance: 0,\n\t        range: 0,\n\t        dx: 0,\n\t        dy: 0\n\t      };\n\t\n\t      for (i = 0, len = targets.length; i < len; i++) {\n\t        target = targets[i];\n\t\n\t        var range = target.range,\n\t            dx = target.x - page.x,\n\t            dy = target.y - page.y,\n\t            distance = hypot(dx, dy),\n\t            inRange = distance <= range;\n\t\n\t        // Infinite targets count as being out of range\n\t        // compared to non infinite ones that are in range\n\t        if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n\t          inRange = false;\n\t        }\n\t\n\t        if (!closest.target || (inRange ? // is the closest target in range?\n\t        closest.inRange && range !== Infinity ? // the pointer is relatively deeper in this target\n\t        distance / range < closest.distance / closest.range : // this target has Infinite range and the closest doesn't\n\t        range === Infinity && closest.range !== Infinity ||\n\t        // OR this target is closer that the previous closest\n\t        distance < closest.distance : // The other is not in range and the pointer is closer to this target\n\t        !closest.inRange && distance < closest.distance)) {\n\t          if (range === Infinity) {\n\t            inRange = true;\n\t          }\n\t\n\t          closest.target = target;\n\t          closest.distance = distance;\n\t          closest.range = range;\n\t          closest.inRange = inRange;\n\t          closest.dx = dx;\n\t          closest.dy = dy;\n\t\n\t          status.range = range;\n\t        }\n\t      }\n\t\n\t      var snapChanged;\n\t\n\t      if (closest.target) {\n\t        snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\t\n\t        status.snappedX = closest.target.x;\n\t        status.snappedY = closest.target.y;\n\t      } else {\n\t        snapChanged = true;\n\t\n\t        status.snappedX = NaN;\n\t        status.snappedY = NaN;\n\t      }\n\t\n\t      status.dx = closest.dx;\n\t      status.dy = closest.dy;\n\t\n\t      status.changed = snapChanged || closest.inRange && !status.locked;\n\t      status.locked = closest.inRange;\n\t\n\t      return status;\n\t    },\n\t\n\t    setRestriction: function setRestriction(pageCoords, status) {\n\t      var target = this.target,\n\t          restrict = target && target.options[this.prepared.name].restrict,\n\t          restriction = restrict && restrict.restriction,\n\t          page;\n\t\n\t      if (!restriction) {\n\t        return status;\n\t      }\n\t\n\t      status = status || this.restrictStatus;\n\t\n\t      page = status.useStatusXY ? page = { x: status.x, y: status.y } : page = extend({}, pageCoords);\n\t\n\t      if (status.snap && status.snap.locked) {\n\t        page.x += status.snap.dx || 0;\n\t        page.y += status.snap.dy || 0;\n\t      }\n\t\n\t      page.x -= this.inertiaStatus.resumeDx;\n\t      page.y -= this.inertiaStatus.resumeDy;\n\t\n\t      status.dx = 0;\n\t      status.dy = 0;\n\t      status.restricted = false;\n\t\n\t      var rect, restrictedX, restrictedY;\n\t\n\t      if (isString(restriction)) {\n\t        if (restriction === 'parent') {\n\t          restriction = parentElement(this.element);\n\t        } else if (restriction === 'self') {\n\t          restriction = target.getRect(this.element);\n\t        } else {\n\t          restriction = closest(this.element, restriction);\n\t        }\n\t\n\t        if (!restriction) {\n\t          return status;\n\t        }\n\t      }\n\t\n\t      if (isFunction(restriction)) {\n\t        restriction = restriction(page.x, page.y, this.element);\n\t      }\n\t\n\t      if (isElement(restriction)) {\n\t        restriction = getElementRect(restriction);\n\t      }\n\t\n\t      rect = restriction;\n\t\n\t      if (!restriction) {\n\t        restrictedX = page.x;\n\t        restrictedY = page.y;\n\t      }\n\t      // object is assumed to have\n\t      // x, y, width, height or\n\t      // left, top, right, bottom\n\t      else if ('x' in restriction && 'y' in restriction) {\n\t          restrictedX = Math.max(Math.min(rect.x + rect.width - this.restrictOffset.right, page.x), rect.x + this.restrictOffset.left);\n\t          restrictedY = Math.max(Math.min(rect.y + rect.height - this.restrictOffset.bottom, page.y), rect.y + this.restrictOffset.top);\n\t        } else {\n\t          restrictedX = Math.max(Math.min(rect.right - this.restrictOffset.right, page.x), rect.left + this.restrictOffset.left);\n\t          restrictedY = Math.max(Math.min(rect.bottom - this.restrictOffset.bottom, page.y), rect.top + this.restrictOffset.top);\n\t        }\n\t\n\t      status.dx = restrictedX - page.x;\n\t      status.dy = restrictedY - page.y;\n\t\n\t      status.changed = status.restrictedX !== restrictedX || status.restrictedY !== restrictedY;\n\t      status.restricted = !!(status.dx || status.dy);\n\t\n\t      status.restrictedX = restrictedX;\n\t      status.restrictedY = restrictedY;\n\t\n\t      return status;\n\t    },\n\t\n\t    checkAndPreventDefault: function checkAndPreventDefault(event, interactable, element) {\n\t      if (!(interactable = interactable || this.target)) {\n\t        return;\n\t      }\n\t\n\t      var options = interactable.options,\n\t          prevent = options.preventDefault;\n\t\n\t      if (prevent === 'auto' && element && !/^(input|select|textarea)$/i.test(event.target.nodeName)) {\n\t        // do not preventDefault on pointerdown if the prepared action is a drag\n\t        // and dragging can only start from a certain direction - this allows\n\t        // a touch to pan the viewport if a drag isn't in the right direction\n\t        if (/down|start/i.test(event.type) && this.prepared.name === 'drag' && options.drag.axis !== 'xy') {\n\t          return;\n\t        }\n\t\n\t        // with manualStart, only preventDefault while interacting\n\t        if (options[this.prepared.name] && options[this.prepared.name].manualStart && !this.interacting()) {\n\t          return;\n\t        }\n\t\n\t        event.preventDefault();\n\t        return;\n\t      }\n\t\n\t      if (prevent === 'always') {\n\t        event.preventDefault();\n\t        return;\n\t      }\n\t    },\n\t\n\t    calcInertia: function calcInertia(status) {\n\t      var inertiaOptions = this.target.options[this.prepared.name].inertia,\n\t          lambda = inertiaOptions.resistance,\n\t          inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\t\n\t      status.x0 = this.prevEvent.pageX;\n\t      status.y0 = this.prevEvent.pageY;\n\t      status.t0 = status.startEvent.timeStamp / 1000;\n\t      status.sx = status.sy = 0;\n\t\n\t      status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n\t      status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n\t      status.te = inertiaDur;\n\t\n\t      status.lambda_v0 = lambda / status.v0;\n\t      status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n\t    },\n\t\n\t    autoScrollMove: function autoScrollMove(pointer) {\n\t      if (!(this.interacting() && checkAutoScroll(this.target, this.prepared.name))) {\n\t        return;\n\t      }\n\t\n\t      if (this.inertiaStatus.active) {\n\t        autoScroll.x = autoScroll.y = 0;\n\t        return;\n\t      }\n\t\n\t      var top,\n\t          right,\n\t          bottom,\n\t          left,\n\t          options = this.target.options[this.prepared.name].autoScroll,\n\t          container = options.container || getWindow(this.element);\n\t\n\t      if (isWindow(container)) {\n\t        left = pointer.clientX < autoScroll.margin;\n\t        top = pointer.clientY < autoScroll.margin;\n\t        right = pointer.clientX > container.innerWidth - autoScroll.margin;\n\t        bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n\t      } else {\n\t        var rect = getElementClientRect(container);\n\t\n\t        left = pointer.clientX < rect.left + autoScroll.margin;\n\t        top = pointer.clientY < rect.top + autoScroll.margin;\n\t        right = pointer.clientX > rect.right - autoScroll.margin;\n\t        bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n\t      }\n\t\n\t      autoScroll.x = right ? 1 : left ? -1 : 0;\n\t      autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\t\n\t      if (!autoScroll.isScrolling) {\n\t        // set the autoScroll properties to those of the target\n\t        autoScroll.margin = options.margin;\n\t        autoScroll.speed = options.speed;\n\t\n\t        autoScroll.start(this);\n\t      }\n\t    },\n\t\n\t    _updateEventTargets: function _updateEventTargets(target, currentTarget) {\n\t      this._eventTarget = target;\n\t      this._curEventTarget = currentTarget;\n\t    }\n\t  };\n\t\n\t  function getInteractionFromPointer(pointer, eventType, eventTarget) {\n\t    var i = 0,\n\t        len = interactions.length,\n\t        mouseEvent = /mouse/i.test(pointer.pointerType || eventType) ||\n\t    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n\t    pointer.pointerType === 4,\n\t        interaction;\n\t\n\t    var id = getPointerId(pointer);\n\t\n\t    // try to resume inertia with a new pointer\n\t    if (/down|start/i.test(eventType)) {\n\t      for (i = 0; i < len; i++) {\n\t        interaction = interactions[i];\n\t\n\t        var element = eventTarget;\n\t\n\t        if (interaction.inertiaStatus.active && interaction.target.options[interaction.prepared.name].inertia.allowResume && interaction.mouse === mouseEvent) {\n\t          while (element) {\n\t            // if the element is the interaction element\n\t            if (element === interaction.element) {\n\t              return interaction;\n\t            }\n\t            element = parentElement(element);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // if it's a mouse interaction\n\t    if (mouseEvent || !(supportsTouch || supportsPointerEvent)) {\n\t      // find a mouse interaction that's not in inertia phase\n\t      for (i = 0; i < len; i++) {\n\t        if (interactions[i].mouse && !interactions[i].inertiaStatus.active) {\n\t          return interactions[i];\n\t        }\n\t      }\n\t\n\t      // find any interaction specifically for mouse.\n\t      // if the eventType is a mousedown, and inertia is active\n\t      // ignore the interaction\n\t      for (i = 0; i < len; i++) {\n\t        if (interactions[i].mouse && !(/down/.test(eventType) && interactions[i].inertiaStatus.active)) {\n\t          return interaction;\n\t        }\n\t      }\n\t\n\t      // create a new interaction for mouse\n\t      interaction = new Interaction();\n\t      interaction.mouse = true;\n\t\n\t      return interaction;\n\t    }\n\t\n\t    // get interaction that has this pointer\n\t    for (i = 0; i < len; i++) {\n\t      if (contains(interactions[i].pointerIds, id)) {\n\t        return interactions[i];\n\t      }\n\t    }\n\t\n\t    // at this stage, a pointerUp should not return an interaction\n\t    if (/up|end|out/i.test(eventType)) {\n\t      return null;\n\t    }\n\t\n\t    // get first idle interaction\n\t    for (i = 0; i < len; i++) {\n\t      interaction = interactions[i];\n\t\n\t      if ((!interaction.prepared.name || interaction.target.options.gesture.enabled) && !interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n\t        return interaction;\n\t      }\n\t    }\n\t\n\t    return new Interaction();\n\t  }\n\t\n\t  function doOnInteractions(method) {\n\t    return function (event) {\n\t      var interaction,\n\t          eventTarget = getActualElement(event.path ? event.path[0] : event.target),\n\t          curEventTarget = getActualElement(event.currentTarget),\n\t          i;\n\t\n\t      if (supportsTouch && /touch/.test(event.type)) {\n\t        prevTouchTime = new Date().getTime();\n\t\n\t        for (i = 0; i < event.changedTouches.length; i++) {\n\t          var pointer = event.changedTouches[i];\n\t\n\t          interaction = getInteractionFromPointer(pointer, event.type, eventTarget);\n\t\n\t          if (!interaction) {\n\t            continue;\n\t          }\n\t\n\t          interaction._updateEventTargets(eventTarget, curEventTarget);\n\t\n\t          interaction[method](pointer, event, eventTarget, curEventTarget);\n\t        }\n\t      } else {\n\t        if (!supportsPointerEvent && /mouse/.test(event.type)) {\n\t          // ignore mouse events while touch interactions are active\n\t          for (i = 0; i < interactions.length; i++) {\n\t            if (!interactions[i].mouse && interactions[i].pointerIsDown) {\n\t              return;\n\t            }\n\t          }\n\t\n\t          // try to ignore mouse events that are simulated by the browser\n\t          // after a touch event\n\t          if (new Date().getTime() - prevTouchTime < 500) {\n\t            return;\n\t          }\n\t        }\n\t\n\t        interaction = getInteractionFromPointer(event, event.type, eventTarget);\n\t\n\t        if (!interaction) {\n\t          return;\n\t        }\n\t\n\t        interaction._updateEventTargets(eventTarget, curEventTarget);\n\t\n\t        interaction[method](event, event, eventTarget, curEventTarget);\n\t      }\n\t    };\n\t  }\n\t\n\t  function InteractEvent(interaction, event, action, phase, element, related) {\n\t    var client,\n\t        page,\n\t        target = interaction.target,\n\t        snapStatus = interaction.snapStatus,\n\t        restrictStatus = interaction.restrictStatus,\n\t        pointers = interaction.pointers,\n\t        deltaSource = (target && target.options || defaultOptions).deltaSource,\n\t        sourceX = deltaSource + 'X',\n\t        sourceY = deltaSource + 'Y',\n\t        options = target ? target.options : defaultOptions,\n\t        origin = getOriginXY(target, element),\n\t        starting = phase === 'start',\n\t        ending = phase === 'end',\n\t        coords = starting ? interaction.startCoords : interaction.curCoords;\n\t\n\t    element = element || interaction.element;\n\t\n\t    page = extend({}, coords.page);\n\t    client = extend({}, coords.client);\n\t\n\t    page.x -= origin.x;\n\t    page.y -= origin.y;\n\t\n\t    client.x -= origin.x;\n\t    client.y -= origin.y;\n\t\n\t    var relativePoints = options[action].snap && options[action].snap.relativePoints;\n\t\n\t    if (checkSnap(target, action) && !(starting && relativePoints && relativePoints.length)) {\n\t      this.snap = {\n\t        range: snapStatus.range,\n\t        locked: snapStatus.locked,\n\t        x: snapStatus.snappedX,\n\t        y: snapStatus.snappedY,\n\t        realX: snapStatus.realX,\n\t        realY: snapStatus.realY,\n\t        dx: snapStatus.dx,\n\t        dy: snapStatus.dy\n\t      };\n\t\n\t      if (snapStatus.locked) {\n\t        page.x += snapStatus.dx;\n\t        page.y += snapStatus.dy;\n\t        client.x += snapStatus.dx;\n\t        client.y += snapStatus.dy;\n\t      }\n\t    }\n\t\n\t    if (checkRestrict(target, action) && !(starting && options[action].restrict.elementRect) && restrictStatus.restricted) {\n\t      page.x += restrictStatus.dx;\n\t      page.y += restrictStatus.dy;\n\t      client.x += restrictStatus.dx;\n\t      client.y += restrictStatus.dy;\n\t\n\t      this.restrict = {\n\t        dx: restrictStatus.dx,\n\t        dy: restrictStatus.dy\n\t      };\n\t    }\n\t\n\t    this.pageX = page.x;\n\t    this.pageY = page.y;\n\t    this.clientX = client.x;\n\t    this.clientY = client.y;\n\t\n\t    this.x0 = interaction.startCoords.page.x - origin.x;\n\t    this.y0 = interaction.startCoords.page.y - origin.y;\n\t    this.clientX0 = interaction.startCoords.client.x - origin.x;\n\t    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\t    this.ctrlKey = event.ctrlKey;\n\t    this.altKey = event.altKey;\n\t    this.shiftKey = event.shiftKey;\n\t    this.metaKey = event.metaKey;\n\t    this.button = event.button;\n\t    this.buttons = event.buttons;\n\t    this.target = element;\n\t    this.t0 = interaction.downTimes[0];\n\t    this.type = action + (phase || '');\n\t\n\t    this.interaction = interaction;\n\t    this.interactable = target;\n\t\n\t    var inertiaStatus = interaction.inertiaStatus;\n\t\n\t    if (inertiaStatus.active) {\n\t      this.detail = 'inertia';\n\t    }\n\t\n\t    if (related) {\n\t      this.relatedTarget = related;\n\t    }\n\t\n\t    // end event dx, dy is difference between start and end points\n\t    if (ending) {\n\t      if (deltaSource === 'client') {\n\t        this.dx = client.x - interaction.startCoords.client.x;\n\t        this.dy = client.y - interaction.startCoords.client.y;\n\t      } else {\n\t        this.dx = page.x - interaction.startCoords.page.x;\n\t        this.dy = page.y - interaction.startCoords.page.y;\n\t      }\n\t    } else if (starting) {\n\t      this.dx = 0;\n\t      this.dy = 0;\n\t    }\n\t    // copy properties from previousmove if starting inertia\n\t    else if (phase === 'inertiastart') {\n\t        this.dx = interaction.prevEvent.dx;\n\t        this.dy = interaction.prevEvent.dy;\n\t      } else {\n\t        if (deltaSource === 'client') {\n\t          this.dx = client.x - interaction.prevEvent.clientX;\n\t          this.dy = client.y - interaction.prevEvent.clientY;\n\t        } else {\n\t          this.dx = page.x - interaction.prevEvent.pageX;\n\t          this.dy = page.y - interaction.prevEvent.pageY;\n\t        }\n\t      }\n\t    if (interaction.prevEvent && interaction.prevEvent.detail === 'inertia' && !inertiaStatus.active && options[action].inertia && options[action].inertia.zeroResumeDelta) {\n\t      inertiaStatus.resumeDx += this.dx;\n\t      inertiaStatus.resumeDy += this.dy;\n\t\n\t      this.dx = this.dy = 0;\n\t    }\n\t\n\t    if (action === 'resize' && interaction.resizeAxes) {\n\t      if (options.resize.square) {\n\t        if (interaction.resizeAxes === 'y') {\n\t          this.dx = this.dy;\n\t        } else {\n\t          this.dy = this.dx;\n\t        }\n\t        this.axes = 'xy';\n\t      } else {\n\t        this.axes = interaction.resizeAxes;\n\t\n\t        if (interaction.resizeAxes === 'x') {\n\t          this.dy = 0;\n\t        } else if (interaction.resizeAxes === 'y') {\n\t          this.dx = 0;\n\t        }\n\t      }\n\t    } else if (action === 'gesture') {\n\t      this.touches = [pointers[0], pointers[1]];\n\t\n\t      if (starting) {\n\t        this.distance = touchDistance(pointers, deltaSource);\n\t        this.box = touchBBox(pointers);\n\t        this.scale = 1;\n\t        this.ds = 0;\n\t        this.angle = touchAngle(pointers, undefined, deltaSource);\n\t        this.da = 0;\n\t      } else if (ending || event instanceof InteractEvent) {\n\t        this.distance = interaction.prevEvent.distance;\n\t        this.box = interaction.prevEvent.box;\n\t        this.scale = interaction.prevEvent.scale;\n\t        this.ds = this.scale - 1;\n\t        this.angle = interaction.prevEvent.angle;\n\t        this.da = this.angle - interaction.gesture.startAngle;\n\t      } else {\n\t        this.distance = touchDistance(pointers, deltaSource);\n\t        this.box = touchBBox(pointers);\n\t        this.scale = this.distance / interaction.gesture.startDistance;\n\t        this.angle = touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\t\n\t        this.ds = this.scale - interaction.gesture.prevScale;\n\t        this.da = this.angle - interaction.gesture.prevAngle;\n\t      }\n\t    }\n\t\n\t    if (starting) {\n\t      this.timeStamp = interaction.downTimes[0];\n\t      this.dt = 0;\n\t      this.duration = 0;\n\t      this.speed = 0;\n\t      this.velocityX = 0;\n\t      this.velocityY = 0;\n\t    } else if (phase === 'inertiastart') {\n\t      this.timeStamp = interaction.prevEvent.timeStamp;\n\t      this.dt = interaction.prevEvent.dt;\n\t      this.duration = interaction.prevEvent.duration;\n\t      this.speed = interaction.prevEvent.speed;\n\t      this.velocityX = interaction.prevEvent.velocityX;\n\t      this.velocityY = interaction.prevEvent.velocityY;\n\t    } else {\n\t      this.timeStamp = new Date().getTime();\n\t      this.dt = this.timeStamp - interaction.prevEvent.timeStamp;\n\t      this.duration = this.timeStamp - interaction.downTimes[0];\n\t\n\t      if (event instanceof InteractEvent) {\n\t        var dx = this[sourceX] - interaction.prevEvent[sourceX],\n\t            dy = this[sourceY] - interaction.prevEvent[sourceY],\n\t            dt = this.dt / 1000;\n\t\n\t        this.speed = hypot(dx, dy) / dt;\n\t        this.velocityX = dx / dt;\n\t        this.velocityY = dy / dt;\n\t      }\n\t      // if normal move or end event, use previous user event coords\n\t      else {\n\t          // speed and velocity in pixels per second\n\t          this.speed = interaction.pointerDelta[deltaSource].speed;\n\t          this.velocityX = interaction.pointerDelta[deltaSource].vx;\n\t          this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\t        }\n\t    }\n\t\n\t    if ((ending || phase === 'inertiastart') && interaction.prevEvent.speed > 600 && this.timeStamp - interaction.prevEvent.timeStamp < 150) {\n\t      var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI,\n\t          overlap = 22.5;\n\t\n\t      if (angle < 0) {\n\t        angle += 360;\n\t      }\n\t\n\t      var left = 135 - overlap <= angle && angle < 225 + overlap,\n\t          up = 225 - overlap <= angle && angle < 315 + overlap,\n\t          right = !left && (315 - overlap <= angle || angle < 45 + overlap),\n\t          down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\t\n\t      this.swipe = {\n\t        up: up,\n\t        down: down,\n\t        left: left,\n\t        right: right,\n\t        angle: angle,\n\t        speed: interaction.prevEvent.speed,\n\t        velocity: {\n\t          x: interaction.prevEvent.velocityX,\n\t          y: interaction.prevEvent.velocityY\n\t        }\n\t      };\n\t    }\n\t  }\n\t\n\t  InteractEvent.prototype = {\n\t    preventDefault: blank,\n\t    stopImmediatePropagation: function stopImmediatePropagation() {\n\t      this.immediatePropagationStopped = this.propagationStopped = true;\n\t    },\n\t    stopPropagation: function stopPropagation() {\n\t      this.propagationStopped = true;\n\t    }\n\t  };\n\t\n\t  function preventOriginalDefault() {\n\t    this.originalEvent.preventDefault();\n\t  }\n\t\n\t  function getActionCursor(action) {\n\t    var cursor = '';\n\t\n\t    if (action.name === 'drag') {\n\t      cursor = actionCursors.drag;\n\t    }\n\t    if (action.name === 'resize') {\n\t      if (action.axis) {\n\t        cursor = actionCursors[action.name + action.axis];\n\t      } else if (action.edges) {\n\t        var cursorKey = 'resize',\n\t            edgeNames = ['top', 'bottom', 'left', 'right'];\n\t\n\t        for (var i = 0; i < 4; i++) {\n\t          if (action.edges[edgeNames[i]]) {\n\t            cursorKey += edgeNames[i];\n\t          }\n\t        }\n\t\n\t        cursor = actionCursors[cursorKey];\n\t      }\n\t    }\n\t\n\t    return cursor;\n\t  }\n\t\n\t  function checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n\t    // false, '', undefined, null\n\t    if (!value) {\n\t      return false;\n\t    }\n\t\n\t    // true value, use pointer coords and element rect\n\t    if (value === true) {\n\t      // if dimensions are negative, \"switch\" edges\n\t      var width = isNumber(rect.width) ? rect.width : rect.right - rect.left,\n\t          height = isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\t\n\t      if (width < 0) {\n\t        if (name === 'left') {\n\t          name = 'right';\n\t        } else if (name === 'right') {\n\t          name = 'left';\n\t        }\n\t      }\n\t      if (height < 0) {\n\t        if (name === 'top') {\n\t          name = 'bottom';\n\t        } else if (name === 'bottom') {\n\t          name = 'top';\n\t        }\n\t      }\n\t\n\t      if (name === 'left') {\n\t        return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n\t      }\n\t      if (name === 'top') {\n\t        return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n\t      }\n\t\n\t      if (name === 'right') {\n\t        return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n\t      }\n\t      if (name === 'bottom') {\n\t        return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n\t      }\n\t    }\n\t\n\t    // the remaining checks require an element\n\t    if (!isElement(element)) {\n\t      return false;\n\t    }\n\t\n\t    return isElement(value) ? // the value is an element to use as a resize handle\n\t    value === element : // otherwise check if element matches value as selector\n\t    matchesUpTo(element, value, interactableElement);\n\t  }\n\t\n\t  function defaultActionChecker(pointer, interaction, element) {\n\t    var rect = this.getRect(element),\n\t        shouldResize = false,\n\t        action = null,\n\t        resizeAxes = null,\n\t        resizeEdges,\n\t        page = extend({}, interaction.curCoords.page),\n\t        options = this.options;\n\t\n\t    if (!rect) {\n\t      return null;\n\t    }\n\t\n\t    if (actionIsEnabled.resize && options.resize.enabled) {\n\t      var resizeOptions = options.resize;\n\t\n\t      resizeEdges = {\n\t        left: false,\n\t        right: false,\n\t        top: false,\n\t        bottom: false\n\t      };\n\t\n\t      // if using resize.edges\n\t      if (isObject(resizeOptions.edges)) {\n\t        for (var edge in resizeEdges) {\n\t          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || margin);\n\t        }\n\t\n\t        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n\t        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\t\n\t        shouldResize = resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom;\n\t      } else {\n\t        var right = options.resize.axis !== 'y' && page.x > rect.right - margin,\n\t            bottom = options.resize.axis !== 'x' && page.y > rect.bottom - margin;\n\t\n\t        shouldResize = right || bottom;\n\t        resizeAxes = (right ? 'x' : '') + (bottom ? 'y' : '');\n\t      }\n\t    }\n\t\n\t    action = shouldResize ? 'resize' : actionIsEnabled.drag && options.drag.enabled ? 'drag' : null;\n\t\n\t    if (actionIsEnabled.gesture && interaction.pointerIds.length >= 2 && !(interaction.dragging || interaction.resizing)) {\n\t      action = 'gesture';\n\t    }\n\t\n\t    if (action) {\n\t      return {\n\t        name: action,\n\t        axis: resizeAxes,\n\t        edges: resizeEdges\n\t      };\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  // Check if action is enabled globally and the current target supports it\n\t  // If so, return the validated action. Otherwise, return null\n\t  function validateAction(action, interactable) {\n\t    if (!isObject(action)) {\n\t      return null;\n\t    }\n\t\n\t    var actionName = action.name,\n\t        options = interactable.options;\n\t\n\t    if ((actionName === 'resize' && options.resize.enabled || actionName === 'drag' && options.drag.enabled || actionName === 'gesture' && options.gesture.enabled) && actionIsEnabled[actionName]) {\n\t      if (actionName === 'resize' || actionName === 'resizeyx') {\n\t        actionName = 'resizexy';\n\t      }\n\t\n\t      return action;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  var listeners = {},\n\t      interactionListeners = ['dragStart', 'dragMove', 'resizeStart', 'resizeMove', 'gestureStart', 'gestureMove', 'pointerOver', 'pointerOut', 'pointerHover', 'selectorDown', 'pointerDown', 'pointerMove', 'pointerUp', 'pointerCancel', 'pointerEnd', 'addPointer', 'removePointer', 'recordPointer', 'autoScrollMove'];\n\t\n\t  for (var i = 0, len = interactionListeners.length; i < len; i++) {\n\t    var name = interactionListeners[i];\n\t\n\t    listeners[name] = doOnInteractions(name);\n\t  }\n\t\n\t  // bound to the interactable context when a DOM event\n\t  // listener is added to a selector interactable\n\t  function delegateListener(event, useCapture) {\n\t    var fakeEvent = {},\n\t        delegated = delegatedEvents[event.type],\n\t        eventTarget = getActualElement(event.path ? event.path[0] : event.target),\n\t        element = eventTarget;\n\t\n\t    useCapture = useCapture ? true : false;\n\t\n\t    // duplicate the event so that currentTarget can be changed\n\t    for (var prop in event) {\n\t      fakeEvent[prop] = event[prop];\n\t    }\n\t\n\t    fakeEvent.originalEvent = event;\n\t    fakeEvent.preventDefault = preventOriginalDefault;\n\t\n\t    // climb up document tree looking for selector matches\n\t    while (isElement(element)) {\n\t      for (var i = 0; i < delegated.selectors.length; i++) {\n\t        var selector = delegated.selectors[i],\n\t            context = delegated.contexts[i];\n\t\n\t        if (matchesSelector(element, selector) && nodeContains(context, eventTarget) && nodeContains(context, element)) {\n\t          var listeners = delegated.listeners[i];\n\t\n\t          fakeEvent.currentTarget = element;\n\t\n\t          for (var j = 0; j < listeners.length; j++) {\n\t            if (listeners[j][1] === useCapture) {\n\t              listeners[j][0](fakeEvent);\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      element = parentElement(element);\n\t    }\n\t  }\n\t\n\t  function delegateUseCapture(event) {\n\t    return delegateListener.call(this, event, true);\n\t  }\n\t\n\t  interactables.indexOfElement = function indexOfElement(element, context) {\n\t    context = context || document;\n\t\n\t    for (var i = 0; i < this.length; i++) {\n\t      var interactable = this[i];\n\t\n\t      if (interactable.selector === element && interactable._context === context || !interactable.selector && interactable._element === element) {\n\t        return i;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t\n\t  interactables.get = function interactableGet(element, options) {\n\t    return this[this.indexOfElement(element, options && options.context)];\n\t  };\n\t\n\t  interactables.forEachSelector = function (callback) {\n\t    for (var i = 0; i < this.length; i++) {\n\t      var interactable = this[i];\n\t\n\t      if (!interactable.selector) {\n\t        continue;\n\t      }\n\t\n\t      var ret = callback(interactable, interactable.selector, interactable._context, i, this);\n\t\n\t      if (ret !== undefined) {\n\t        return ret;\n\t      }\n\t    }\n\t  };\n\t\n\t  /*\\\n\t     * interact\n\t     [ method ]\n\t     *\n\t     * The methods of this variable can be used to set elements as\n\t     * interactables and also to change various default settings.\n\t     *\n\t     * Calling it as a function and passing an element or a valid CSS selector\n\t     * string returns an Interactable object which has various methods to\n\t     * configure it.\n\t     *\n\t     - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n\t     = (object) An @Interactable\n\t     *\n\t     > Usage\n\t     | interact(document.getElementById('draggable')).draggable(true);\n\t     |\n\t     | var rectables = interact('rect');\n\t     | rectables\n\t     |     .gesturable(true)\n\t     |     .on('gesturemove', function (event) {\n\t     |         // something cool...\n\t     |     })\n\t     |     .autoScroll(true);\n\t    \\*/\n\t  function interact(element, options) {\n\t    return interactables.get(element, options) || new Interactable(element, options);\n\t  }\n\t\n\t  /*\\\n\t     * Interactable\n\t     [ property ]\n\t     **\n\t     * Object type returned by @interact\n\t    \\*/\n\t  function Interactable(element, options) {\n\t    this._element = element;\n\t    this._iEvents = this._iEvents || {};\n\t\n\t    var _window;\n\t\n\t    if (trySelector(element)) {\n\t      this.selector = element;\n\t\n\t      var context = options && options.context;\n\t\n\t      _window = context ? getWindow(context) : window;\n\t\n\t      if (context && (_window.Node ? context instanceof _window.Node : isElement(context) || context === _window.document)) {\n\t        this._context = context;\n\t      }\n\t    } else {\n\t      _window = getWindow(element);\n\t\n\t      if (isElement(element, _window)) {\n\t        if (supportsPointerEvent) {\n\t          events.add(this._element, pEventTypes.down, listeners.pointerDown);\n\t          events.add(this._element, pEventTypes.move, listeners.pointerHover);\n\t        } else {\n\t          events.add(this._element, 'mousedown', listeners.pointerDown);\n\t          events.add(this._element, 'mousemove', listeners.pointerHover);\n\t          events.add(this._element, 'touchstart', listeners.pointerDown);\n\t          events.add(this._element, 'touchmove', listeners.pointerHover);\n\t        }\n\t      }\n\t    }\n\t\n\t    this._doc = _window.document;\n\t\n\t    if (!contains(documents, this._doc)) {\n\t      listenToDocument(this._doc);\n\t    }\n\t\n\t    interactables.push(this);\n\t\n\t    this.set(options);\n\t  }\n\t\n\t  Interactable.prototype = {\n\t    setOnEvents: function setOnEvents(action, phases) {\n\t      if (action === 'drop') {\n\t        if (isFunction(phases.ondrop)) {\n\t          this.ondrop = phases.ondrop;\n\t        }\n\t        if (isFunction(phases.ondropactivate)) {\n\t          this.ondropactivate = phases.ondropactivate;\n\t        }\n\t        if (isFunction(phases.ondropdeactivate)) {\n\t          this.ondropdeactivate = phases.ondropdeactivate;\n\t        }\n\t        if (isFunction(phases.ondragenter)) {\n\t          this.ondragenter = phases.ondragenter;\n\t        }\n\t        if (isFunction(phases.ondragleave)) {\n\t          this.ondragleave = phases.ondragleave;\n\t        }\n\t        if (isFunction(phases.ondropmove)) {\n\t          this.ondropmove = phases.ondropmove;\n\t        }\n\t      } else {\n\t        action = 'on' + action;\n\t\n\t        if (isFunction(phases.onstart)) {\n\t          this[action + 'start'] = phases.onstart;\n\t        }\n\t        if (isFunction(phases.onmove)) {\n\t          this[action + 'move'] = phases.onmove;\n\t        }\n\t        if (isFunction(phases.onend)) {\n\t          this[action + 'end'] = phases.onend;\n\t        }\n\t        if (isFunction(phases.oninertiastart)) {\n\t          this[action + 'inertiastart'] = phases.oninertiastart;\n\t        }\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.draggable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether drag actions can be performed on the\n\t         * Interactable\n\t         *\n\t         = (boolean) Indicates if this can be the target of drag events\n\t         | var isDraggable = interact('ul li').draggable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n\t         = (object) This Interactable\n\t         | interact(element).draggable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     // the axis in which the first movement must be\n\t         |     // for the drag sequence to start\n\t         |     // 'xy' by default - any direction\n\t         |     axis: 'x' || 'y' || 'xy',\n\t         |\n\t         |     // max number of drags that can happen concurrently\n\t         |     // with elements of this Interactable. Infinity by default\n\t         |     max: Infinity,\n\t         |\n\t         |     // max number of drags that can target the same element+Interactable\n\t         |     // 1 by default\n\t         |     maxPerElement: 2\n\t         | });\n\t        \\*/\n\t    draggable: function draggable(options) {\n\t      if (isObject(options)) {\n\t        this.options.drag.enabled = options.enabled === false ? false : true;\n\t        this.setPerAction('drag', options);\n\t        this.setOnEvents('drag', options);\n\t\n\t        if (/^x$|^y$|^xy$/.test(options.axis)) {\n\t          this.options.drag.axis = options.axis;\n\t        } else if (options.axis === null) {\n\t          delete this.options.drag.axis;\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      if (isBool(options)) {\n\t        this.options.drag.enabled = options;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.drag;\n\t    },\n\t\n\t    setPerAction: function setPerAction(action, options) {\n\t      // for all the default per-action options\n\t      for (var option in options) {\n\t        // if this option exists for this action\n\t        if (option in defaultOptions[action]) {\n\t          // if the option in the options arg is an object value\n\t          if (isObject(options[option])) {\n\t            // duplicate the object\n\t            this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\t\n\t            if (isObject(defaultOptions.perAction[option]) && 'enabled' in defaultOptions.perAction[option]) {\n\t              this.options[action][option].enabled = options[option].enabled === false ? false : true;\n\t            }\n\t          } else if (isBool(options[option]) && isObject(defaultOptions.perAction[option])) {\n\t            this.options[action][option].enabled = options[option];\n\t          } else if (options[option] !== undefined) {\n\t            // or if it's not undefined, do a plain assignment\n\t            this.options[action][option] = options[option];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.dropzone\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether elements can be dropped onto this\n\t         * Interactable to trigger drop events\n\t         *\n\t         * Dropzones can receive the following events:\n\t         *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n\t         *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n\t         *  - `dragmove` when a draggable that has entered the dropzone is moved\n\t         *  - `drop` when a draggable is dropped into this dropzone\n\t         *\n\t         *  Use the `accept` option to allow only elements that match the given CSS selector or element.\n\t         *\n\t         *  Use the `overlap` option to set how drops are checked for. The allowed values are:\n\t         *   - `'pointer'`, the pointer must be over the dropzone (default)\n\t         *   - `'center'`, the draggable element's center must be over the dropzone\n\t         *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n\t         *       e.g. `0.5` for drop to happen when half of the area of the\n\t         *       draggable is over the dropzone\n\t         *\n\t         - options (boolean | object | null) #optional The new value to be set.\n\t         | interact('.drop').dropzone({\n\t         |   accept: '.can-drop' || document.getElementById('single-drop'),\n\t         |   overlap: 'pointer' || 'center' || zeroToOne\n\t         | }\n\t         = (boolean | object) The current setting or this Interactable\n\t        \\*/\n\t    dropzone: function dropzone(options) {\n\t      if (isObject(options)) {\n\t        this.options.drop.enabled = options.enabled === false ? false : true;\n\t        this.setOnEvents('drop', options);\n\t\n\t        if (/^(pointer|center)$/.test(options.overlap)) {\n\t          this.options.drop.overlap = options.overlap;\n\t        } else if (isNumber(options.overlap)) {\n\t          this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n\t        }\n\t        if ('accept' in options) {\n\t          this.options.drop.accept = options.accept;\n\t        }\n\t        if ('checker' in options) {\n\t          this.options.drop.checker = options.checker;\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      if (isBool(options)) {\n\t        this.options.drop.enabled = options;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.drop;\n\t    },\n\t\n\t    dropCheck: function dropCheck(dragEvent, event, draggable, draggableElement, dropElement, rect) {\n\t      var dropped = false;\n\t\n\t      // if the dropzone has no rect (eg. display: none)\n\t      // call the custom dropChecker or just return false\n\t      if (!(rect = rect || this.getRect(dropElement))) {\n\t        return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n\t      }\n\t\n\t      var dropOverlap = this.options.drop.overlap;\n\t\n\t      if (dropOverlap === 'pointer') {\n\t        var page = _getPageXY(dragEvent),\n\t            origin = getOriginXY(draggable, draggableElement),\n\t            horizontal,\n\t            vertical;\n\t\n\t        page.x += origin.x;\n\t        page.y += origin.y;\n\t\n\t        horizontal = page.x > rect.left && page.x < rect.right;\n\t        vertical = page.y > rect.top && page.y < rect.bottom;\n\t\n\t        dropped = horizontal && vertical;\n\t      }\n\t\n\t      var dragRect = draggable.getRect(draggableElement);\n\t\n\t      if (dropOverlap === 'center') {\n\t        var cx = dragRect.left + dragRect.width / 2,\n\t            cy = dragRect.top + dragRect.height / 2;\n\t\n\t        dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n\t      }\n\t\n\t      if (isNumber(dropOverlap)) {\n\t        var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top)),\n\t            overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\t\n\t        dropped = overlapRatio >= dropOverlap;\n\t      }\n\t\n\t      if (this.options.drop.checker) {\n\t        dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n\t      }\n\t\n\t      return dropped;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.dropChecker\n\t         [ method ]\n\t         *\n\t         * DEPRECATED. Use interactable.dropzone({ checker: function... }) instead.\n\t         *\n\t         * Gets or sets the function used to check if a dragged element is\n\t         * over this Interactable.\n\t         *\n\t         - checker (function) #optional The function that will be called when checking for a drop\n\t         = (Function | Interactable) The checker function or this Interactable\n\t         *\n\t         * The checker function takes the following arguments:\n\t         *\n\t         - dragEvent (InteractEvent) The related dragmove or dragend event\n\t         - event (TouchEvent | PointerEvent | MouseEvent) The user move/up/end Event related to the dragEvent\n\t         - dropped (boolean) The value from the default drop checker\n\t         - dropzone (Interactable) The dropzone interactable\n\t         - dropElement (Element) The dropzone element\n\t         - draggable (Interactable) The Interactable being dragged\n\t         - draggableElement (Element) The actual element that's being dragged\n\t         *\n\t         > Usage:\n\t         | interact(target)\n\t         | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n\t         |                       event,             // TouchEvent/PointerEvent/MouseEvent\n\t         |                       dropped,           // bool result of the default checker\n\t         |                       dropzone,          // dropzone Interactable\n\t         |                       dropElement,       // dropzone elemnt\n\t         |                       draggable,         // draggable Interactable\n\t         |                       draggableElement) {// draggable element\n\t         |\n\t         |   return dropped && event.target.hasAttribute('allow-drop');\n\t         | }\n\t        \\*/\n\t    dropChecker: function dropChecker(checker) {\n\t      if (isFunction(checker)) {\n\t        this.options.drop.checker = checker;\n\t\n\t        return this;\n\t      }\n\t      if (checker === null) {\n\t        delete this.options.getRect;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.drop.checker;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.accept\n\t         [ method ]\n\t         *\n\t         * Deprecated. add an `accept` property to the options object passed to\n\t         * @Interactable.dropzone instead.\n\t         *\n\t         * Gets or sets the Element or CSS selector match that this\n\t         * Interactable accepts if it is a dropzone.\n\t         *\n\t         - newValue (Element | string | null) #optional\n\t         * If it is an Element, then only that element can be dropped into this dropzone.\n\t         * If it is a string, the element being dragged must match it as a selector.\n\t         * If it is null, the accept options is cleared - it accepts any element.\n\t         *\n\t         = (string | Element | null | Interactable) The current accept option if given `undefined` or this Interactable\n\t        \\*/\n\t    accept: function accept(newValue) {\n\t      if (isElement(newValue)) {\n\t        this.options.drop.accept = newValue;\n\t\n\t        return this;\n\t      }\n\t\n\t      // test if it is a valid CSS selector\n\t      if (trySelector(newValue)) {\n\t        this.options.drop.accept = newValue;\n\t\n\t        return this;\n\t      }\n\t\n\t      if (newValue === null) {\n\t        delete this.options.drop.accept;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.drop.accept;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.resizable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether resize actions can be performed on the\n\t         * Interactable\n\t         *\n\t         = (boolean) Indicates if this can be the target of resize elements\n\t         | var isResizeable = interact('input[type=text]').resizable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n\t         = (object) This Interactable\n\t         | interact(element).resizable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     edges: {\n\t         |       top   : true,       // Use pointer coords to check for resize.\n\t         |       left  : false,      // Disable resizing from left edge.\n\t         |       bottom: '.resize-s',// Resize if pointer target matches selector\n\t         |       right : handleEl    // Resize if pointer target is the given Element\n\t         |     },\n\t         |\n\t         |     // Width and height can be adjusted independently. When `true`, width and\n\t         |     // height are adjusted at a 1:1 ratio.\n\t         |     square: false,\n\t         |\n\t         |     // Width and height can be adjusted independently. When `true`, width and\n\t         |     // height maintain the aspect ratio they had when resizing started.\n\t         |     preserveAspectRatio: false,\n\t         |\n\t         |     // a value of 'none' will limit the resize rect to a minimum of 0x0\n\t         |     // 'negate' will allow the rect to have negative width/height\n\t         |     // 'reposition' will keep the width/height positive by swapping\n\t         |     // the top and bottom edges and/or swapping the left and right edges\n\t         |     invert: 'none' || 'negate' || 'reposition'\n\t         |\n\t         |     // limit multiple resizes.\n\t         |     // See the explanation in the @Interactable.draggable example\n\t         |     max: Infinity,\n\t         |     maxPerElement: 1,\n\t         | });\n\t        \\*/\n\t    resizable: function resizable(options) {\n\t      if (isObject(options)) {\n\t        this.options.resize.enabled = options.enabled === false ? false : true;\n\t        this.setPerAction('resize', options);\n\t        this.setOnEvents('resize', options);\n\t\n\t        if (/^x$|^y$|^xy$/.test(options.axis)) {\n\t          this.options.resize.axis = options.axis;\n\t        } else if (options.axis === null) {\n\t          this.options.resize.axis = defaultOptions.resize.axis;\n\t        }\n\t\n\t        if (isBool(options.preserveAspectRatio)) {\n\t          this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n\t        } else if (isBool(options.square)) {\n\t          this.options.resize.square = options.square;\n\t        }\n\t\n\t        return this;\n\t      }\n\t      if (isBool(options)) {\n\t        this.options.resize.enabled = options;\n\t\n\t        return this;\n\t      }\n\t      return this.options.resize;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.squareResize\n\t         [ method ]\n\t         *\n\t         * Deprecated. Add a `square: true || false` property to @Interactable.resizable instead\n\t         *\n\t         * Gets or sets whether resizing is forced 1:1 aspect\n\t         *\n\t         = (boolean) Current setting\n\t         *\n\t         * or\n\t         *\n\t         - newValue (boolean) #optional\n\t         = (object) this Interactable\n\t        \\*/\n\t    squareResize: function squareResize(newValue) {\n\t      if (isBool(newValue)) {\n\t        this.options.resize.square = newValue;\n\t\n\t        return this;\n\t      }\n\t\n\t      if (newValue === null) {\n\t        delete this.options.resize.square;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.resize.square;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.gesturable\n\t         [ method ]\n\t         *\n\t         * Gets or sets whether multitouch gestures can be performed on the\n\t         * Interactable's element\n\t         *\n\t         = (boolean) Indicates if this can be the target of gesture events\n\t         | var isGestureable = interact(element).gesturable();\n\t         * or\n\t         - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n\t         = (object) this Interactable\n\t         | interact(element).gesturable({\n\t         |     onstart: function (event) {},\n\t         |     onmove : function (event) {},\n\t         |     onend  : function (event) {},\n\t         |\n\t         |     // limit multiple gestures.\n\t         |     // See the explanation in @Interactable.draggable example\n\t         |     max: Infinity,\n\t         |     maxPerElement: 1,\n\t         | });\n\t        \\*/\n\t    gesturable: function gesturable(options) {\n\t      if (isObject(options)) {\n\t        this.options.gesture.enabled = options.enabled === false ? false : true;\n\t        this.setPerAction('gesture', options);\n\t        this.setOnEvents('gesture', options);\n\t\n\t        return this;\n\t      }\n\t\n\t      if (isBool(options)) {\n\t        this.options.gesture.enabled = options;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.gesture;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.autoScroll\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add an `autoscroll` property to the options object\n\t         * passed to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets whether dragging and resizing near the edges of the\n\t         * window/container trigger autoScroll for this Interactable\n\t         *\n\t         = (object) Object with autoScroll properties\n\t         *\n\t         * or\n\t         *\n\t         - options (object | boolean) #optional\n\t         * options can be:\n\t         * - an object with margin, distance and interval properties,\n\t         * - true or false to enable or disable autoScroll or\n\t         = (Interactable) this Interactable\n\t        \\*/\n\t    autoScroll: function autoScroll(options) {\n\t      if (isObject(options)) {\n\t        options = extend({ actions: ['drag', 'resize'] }, options);\n\t      } else if (isBool(options)) {\n\t        options = { actions: ['drag', 'resize'], enabled: options };\n\t      }\n\t\n\t      return this.setOptions('autoScroll', options);\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.snap\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add a `snap` property to the options object passed\n\t         * to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets if and how action coordinates are snapped. By\n\t         * default, snapping is relative to the pointer coordinates. You can\n\t         * change this by setting the\n\t         * [`elementOrigin`](https://github.com/taye/interact.js/pull/72).\n\t         **\n\t         = (boolean | object) `false` if snap is disabled; object with snap properties if snap is enabled\n\t         **\n\t         * or\n\t         **\n\t         - options (object | boolean | null) #optional\n\t         = (Interactable) this Interactable\n\t         > Usage\n\t         | interact(document.querySelector('#thing')).snap({\n\t         |     targets: [\n\t         |         // snap to this specific point\n\t         |         {\n\t         |             x: 100,\n\t         |             y: 100,\n\t         |             range: 25\n\t         |         },\n\t         |         // give this function the x and y page coords and snap to the object returned\n\t         |         function (x, y) {\n\t         |             return {\n\t         |                 x: x,\n\t         |                 y: (75 + 50 * Math.sin(x * 0.04)),\n\t         |                 range: 40\n\t         |             };\n\t         |         },\n\t         |         // create a function that snaps to a grid\n\t         |         interact.createSnapGrid({\n\t         |             x: 50,\n\t         |             y: 50,\n\t         |             range: 10,              // optional\n\t         |             offset: { x: 5, y: 10 } // optional\n\t         |         })\n\t         |     ],\n\t         |     // do not snap during normal movement.\n\t         |     // Instead, trigger only one snapped move event\n\t         |     // immediately before the end event.\n\t         |     endOnly: true,\n\t         |\n\t         |     relativePoints: [\n\t         |         { x: 0, y: 0 },  // snap relative to the top left of the element\n\t         |         { x: 1, y: 1 },  // and also to the bottom right\n\t         |     ],\n\t         |\n\t         |     // offset the snap target coordinates\n\t         |     // can be an object with x/y or 'startCoords'\n\t         |     offset: { x: 50, y: 50 }\n\t         |   }\n\t         | });\n\t        \\*/\n\t    snap: function snap(options) {\n\t      var ret = this.setOptions('snap', options);\n\t\n\t      if (ret === this) {\n\t        return this;\n\t      }\n\t\n\t      return ret.drag;\n\t    },\n\t\n\t    setOptions: function setOptions(option, options) {\n\t      var actions = options && isArray(options.actions) ? options.actions : ['drag'];\n\t\n\t      var i;\n\t\n\t      if (isObject(options) || isBool(options)) {\n\t        for (i = 0; i < actions.length; i++) {\n\t          var action = /resize/.test(actions[i]) ? 'resize' : actions[i];\n\t\n\t          if (!isObject(this.options[action])) {\n\t            continue;\n\t          }\n\t\n\t          var thisOption = this.options[action][option];\n\t\n\t          if (isObject(options)) {\n\t            extend(thisOption, options);\n\t            thisOption.enabled = options.enabled === false ? false : true;\n\t\n\t            if (option === 'snap') {\n\t              if (thisOption.mode === 'grid') {\n\t                thisOption.targets = [interact.createSnapGrid(extend({\n\t                  offset: thisOption.gridOffset || { x: 0, y: 0 }\n\t                }, thisOption.grid || {}))];\n\t              } else if (thisOption.mode === 'anchor') {\n\t                thisOption.targets = thisOption.anchors;\n\t              } else if (thisOption.mode === 'path') {\n\t                thisOption.targets = thisOption.paths;\n\t              }\n\t\n\t              if ('elementOrigin' in options) {\n\t                thisOption.relativePoints = [options.elementOrigin];\n\t              }\n\t            }\n\t          } else if (isBool(options)) {\n\t            thisOption.enabled = options;\n\t          }\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      var ret = {},\n\t          allActions = ['drag', 'resize', 'gesture'];\n\t\n\t      for (i = 0; i < allActions.length; i++) {\n\t        if (option in defaultOptions[allActions[i]]) {\n\t          ret[allActions[i]] = this.options[allActions[i]][option];\n\t        }\n\t      }\n\t\n\t      return ret;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.inertia\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add an `inertia` property to the options object passed\n\t         * to @Interactable.draggable or @Interactable.resizable instead.\n\t         *\n\t         * Returns or sets if and how events continue to run after the pointer is released\n\t         **\n\t         = (boolean | object) `false` if inertia is disabled; `object` with inertia properties if inertia is enabled\n\t         **\n\t         * or\n\t         **\n\t         - options (object | boolean | null) #optional\n\t         = (Interactable) this Interactable\n\t         > Usage\n\t         | // enable and use default settings\n\t         | interact(element).inertia(true);\n\t         |\n\t         | // enable and use custom settings\n\t         | interact(element).inertia({\n\t         |     // value greater than 0\n\t         |     // high values slow the object down more quickly\n\t         |     resistance     : 16,\n\t         |\n\t         |     // the minimum launch speed (pixels per second) that results in inertia start\n\t         |     minSpeed       : 200,\n\t         |\n\t         |     // inertia will stop when the object slows down to this speed\n\t         |     endSpeed       : 20,\n\t         |\n\t         |     // boolean; should actions be resumed when the pointer goes down during inertia\n\t         |     allowResume    : true,\n\t         |\n\t         |     // boolean; should the jump when resuming from inertia be ignored in event.dx/dy\n\t         |     zeroResumeDelta: false,\n\t         |\n\t         |     // if snap/restrict are set to be endOnly and inertia is enabled, releasing\n\t         |     // the pointer without triggering inertia will animate from the release\n\t         |     // point to the snaped/restricted point in the given amount of time (ms)\n\t         |     smoothEndDuration: 300,\n\t         |\n\t         |     // an array of action types that can have inertia (no gesture)\n\t         |     actions        : ['drag', 'resize']\n\t         | });\n\t         |\n\t         | // reset custom settings and use all defaults\n\t         | interact(element).inertia(null);\n\t        \\*/\n\t    inertia: function inertia(options) {\n\t      var ret = this.setOptions('inertia', options);\n\t\n\t      if (ret === this) {\n\t        return this;\n\t      }\n\t\n\t      return ret.drag;\n\t    },\n\t\n\t    getAction: function getAction(pointer, event, interaction, element) {\n\t      var action = this.defaultActionChecker(pointer, interaction, element);\n\t\n\t      if (this.options.actionChecker) {\n\t        return this.options.actionChecker(pointer, event, action, this, element, interaction);\n\t      }\n\t\n\t      return action;\n\t    },\n\t\n\t    defaultActionChecker: defaultActionChecker,\n\t\n\t    /*\\\n\t         * Interactable.actionChecker\n\t         [ method ]\n\t         *\n\t         * Gets or sets the function used to check action to be performed on\n\t         * pointerDown\n\t         *\n\t         - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n\t         = (Function | Interactable) The checker function or this Interactable\n\t         *\n\t         | interact('.resize-drag')\n\t         |   .resizable(true)\n\t         |   .draggable(true)\n\t         |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n\t         |\n\t         |   if (interact.matchesSelector(event.target, '.drag-handle') {\n\t         |     // force drag with handle target\n\t         |     action.name = drag;\n\t         |   }\n\t         |   else {\n\t         |     // resize from the top and right edges\n\t         |     action.name  = 'resize';\n\t         |     action.edges = { top: true, right: true };\n\t         |   }\n\t         |\n\t         |   return action;\n\t         | });\n\t        \\*/\n\t    actionChecker: function actionChecker(checker) {\n\t      if (isFunction(checker)) {\n\t        this.options.actionChecker = checker;\n\t\n\t        return this;\n\t      }\n\t\n\t      if (checker === null) {\n\t        delete this.options.actionChecker;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.actionChecker;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.getRect\n\t         [ method ]\n\t         *\n\t         * The default function to get an Interactables bounding rect. Can be\n\t         * overridden using @Interactable.rectChecker.\n\t         *\n\t         - element (Element) #optional The element to measure.\n\t         = (object) The object's bounding rectangle.\n\t         o {\n\t         o     top   : 0,\n\t         o     left  : 0,\n\t         o     bottom: 0,\n\t         o     right : 0,\n\t         o     width : 0,\n\t         o     height: 0\n\t         o }\n\t        \\*/\n\t    getRect: function rectCheck(element) {\n\t      element = element || this._element;\n\t\n\t      if (this.selector && !isElement(element)) {\n\t        element = this._context.querySelector(this.selector);\n\t      }\n\t\n\t      return getElementRect(element);\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.rectChecker\n\t         [ method ]\n\t         *\n\t         * Returns or sets the function used to calculate the interactable's\n\t         * element's rectangle\n\t         *\n\t         - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n\t         = (function | object) The checker function or this Interactable\n\t        \\*/\n\t    rectChecker: function rectChecker(checker) {\n\t      if (isFunction(checker)) {\n\t        this.getRect = checker;\n\t\n\t        return this;\n\t      }\n\t\n\t      if (checker === null) {\n\t        delete this.options.getRect;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.getRect;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.styleCursor\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether the action that would be performed when the\n\t         * mouse on the element are checked on `mousemove` so that the cursor\n\t         * may be styled appropriately\n\t         *\n\t         - newValue (boolean) #optional\n\t         = (boolean | Interactable) The current setting or this Interactable\n\t        \\*/\n\t    styleCursor: function styleCursor(newValue) {\n\t      if (isBool(newValue)) {\n\t        this.options.styleCursor = newValue;\n\t\n\t        return this;\n\t      }\n\t\n\t      if (newValue === null) {\n\t        delete this.options.styleCursor;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.styleCursor;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.preventDefault\n\t         [ method ]\n\t         *\n\t         * Returns or sets whether to prevent the browser's default behaviour\n\t         * in response to pointer events. Can be set to:\n\t         *  - `'always'` to always prevent\n\t         *  - `'never'` to never prevent\n\t         *  - `'auto'` to let interact.js try to determine what would be best\n\t         *\n\t         - newValue (string) #optional `true`, `false` or `'auto'`\n\t         = (string | Interactable) The current setting or this Interactable\n\t        \\*/\n\t    preventDefault: function preventDefault(newValue) {\n\t      if (/^(always|never|auto)$/.test(newValue)) {\n\t        this.options.preventDefault = newValue;\n\t        return this;\n\t      }\n\t\n\t      if (isBool(newValue)) {\n\t        this.options.preventDefault = newValue ? 'always' : 'never';\n\t        return this;\n\t      }\n\t\n\t      return this.options.preventDefault;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.origin\n\t         [ method ]\n\t         *\n\t         * Gets or sets the origin of the Interactable's element.  The x and y\n\t         * of the origin will be subtracted from action event coordinates.\n\t         *\n\t         - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n\t         * OR\n\t         - origin (Element) #optional An HTML or SVG Element whose rect will be used\n\t         **\n\t         = (object) The current origin or this Interactable\n\t        \\*/\n\t    origin: function origin(newValue) {\n\t      if (trySelector(newValue)) {\n\t        this.options.origin = newValue;\n\t        return this;\n\t      } else if (isObject(newValue)) {\n\t        this.options.origin = newValue;\n\t        return this;\n\t      }\n\t\n\t      return this.options.origin;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.deltaSource\n\t         [ method ]\n\t         *\n\t         * Returns or sets the mouse coordinate types used to calculate the\n\t         * movement of the pointer.\n\t         *\n\t         - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n\t         = (string | object) The current deltaSource or this Interactable\n\t        \\*/\n\t    deltaSource: function deltaSource(newValue) {\n\t      if (newValue === 'page' || newValue === 'client') {\n\t        this.options.deltaSource = newValue;\n\t\n\t        return this;\n\t      }\n\t\n\t      return this.options.deltaSource;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.restrict\n\t         [ method ]\n\t         **\n\t         * Deprecated. Add a `restrict` property to the options object passed to\n\t         * @Interactable.draggable, @Interactable.resizable or @Interactable.gesturable instead.\n\t         *\n\t         * Returns or sets the rectangles within which actions on this\n\t         * interactable (after snap calculations) are restricted. By default,\n\t         * restricting is relative to the pointer coordinates. You can change\n\t         * this by setting the\n\t         * [`elementRect`](https://github.com/taye/interact.js/pull/72).\n\t         **\n\t         - options (object) #optional an object with keys drag, resize, and/or gesture whose values are rects, Elements, CSS selectors, or 'parent' or 'self'\n\t         = (object) The current restrictions object or this Interactable\n\t         **\n\t         | interact(element).restrict({\n\t         |     // the rect will be `interact.getElementRect(element.parentNode)`\n\t         |     drag: element.parentNode,\n\t         |\n\t         |     // x and y are relative to the the interactable's origin\n\t         |     resize: { x: 100, y: 100, width: 200, height: 200 }\n\t         | })\n\t         |\n\t         | interact('.draggable').restrict({\n\t         |     // the rect will be the selected element's parent\n\t         |     drag: 'parent',\n\t         |\n\t         |     // do not restrict during normal movement.\n\t         |     // Instead, trigger only one restricted move event\n\t         |     // immediately before the end event.\n\t         |     endOnly: true,\n\t         |\n\t         |     // https://github.com/taye/interact.js/pull/72#issue-41813493\n\t         |     elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n\t         | });\n\t        \\*/\n\t    restrict: function restrict(options) {\n\t      if (!isObject(options)) {\n\t        return this.setOptions('restrict', options);\n\t      }\n\t\n\t      var actions = ['drag', 'resize', 'gesture'],\n\t          ret;\n\t\n\t      for (var i = 0; i < actions.length; i++) {\n\t        var action = actions[i];\n\t\n\t        if (action in options) {\n\t          var perAction = extend({\n\t            actions: [action],\n\t            restriction: options[action]\n\t          }, options);\n\t\n\t          ret = this.setOptions('restrict', perAction);\n\t        }\n\t      }\n\t\n\t      return ret;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.context\n\t         [ method ]\n\t         *\n\t         * Gets the selector context Node of the Interactable. The default is `window.document`.\n\t         *\n\t         = (Node) The context Node of this Interactable\n\t         **\n\t        \\*/\n\t    context: function context() {\n\t      return this._context;\n\t    },\n\t\n\t    _context: document,\n\t\n\t    /*\\\n\t         * Interactable.ignoreFrom\n\t         [ method ]\n\t         *\n\t         * If the target of the `mousedown`, `pointerdown` or `touchstart`\n\t         * event or any of it's parents match the given CSS selector or\n\t         * Element, no drag/resize/gesture is started.\n\t         *\n\t         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n\t         = (string | Element | object) The current ignoreFrom value or this Interactable\n\t         **\n\t         | interact(element, { ignoreFrom: document.getElementById('no-action') });\n\t         | // or\n\t         | interact(element).ignoreFrom('input, textarea, a');\n\t        \\*/\n\t    ignoreFrom: function ignoreFrom(newValue) {\n\t      if (trySelector(newValue)) {\n\t        // CSS selector to match event.target\n\t        this.options.ignoreFrom = newValue;\n\t        return this;\n\t      }\n\t\n\t      if (isElement(newValue)) {\n\t        // specific element\n\t        this.options.ignoreFrom = newValue;\n\t        return this;\n\t      }\n\t\n\t      return this.options.ignoreFrom;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.allowFrom\n\t         [ method ]\n\t         *\n\t         * A drag/resize/gesture is started only If the target of the\n\t         * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n\t         * parents match the given CSS selector or Element.\n\t         *\n\t         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n\t         = (string | Element | object) The current allowFrom value or this Interactable\n\t         **\n\t         | interact(element, { allowFrom: document.getElementById('drag-handle') });\n\t         | // or\n\t         | interact(element).allowFrom('.handle');\n\t        \\*/\n\t    allowFrom: function allowFrom(newValue) {\n\t      if (trySelector(newValue)) {\n\t        // CSS selector to match event.target\n\t        this.options.allowFrom = newValue;\n\t        return this;\n\t      }\n\t\n\t      if (isElement(newValue)) {\n\t        // specific element\n\t        this.options.allowFrom = newValue;\n\t        return this;\n\t      }\n\t\n\t      return this.options.allowFrom;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.element\n\t         [ method ]\n\t         *\n\t         * If this is not a selector Interactable, it returns the element this\n\t         * interactable represents\n\t         *\n\t         = (Element) HTML / SVG Element\n\t        \\*/\n\t    element: function element() {\n\t      return this._element;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.fire\n\t         [ method ]\n\t         *\n\t         * Calls listeners for the given InteractEvent type bound globally\n\t         * and directly to this Interactable\n\t         *\n\t         - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n\t         = (Interactable) this Interactable\n\t        \\*/\n\t    fire: function fire(iEvent) {\n\t      if (!(iEvent && iEvent.type) || !contains(eventTypes, iEvent.type)) {\n\t        return this;\n\t      }\n\t\n\t      var listeners,\n\t          i,\n\t          len,\n\t          onEvent = 'on' + iEvent.type,\n\t          funcName = '';\n\t\n\t      // Interactable#on() listeners\n\t      if (iEvent.type in this._iEvents) {\n\t        listeners = this._iEvents[iEvent.type];\n\t\n\t        for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n\t          funcName = listeners[i].name;\n\t          listeners[i](iEvent);\n\t        }\n\t      }\n\t\n\t      // interactable.onevent listener\n\t      if (isFunction(this[onEvent])) {\n\t        funcName = this[onEvent].name;\n\t        this[onEvent](iEvent);\n\t      }\n\t\n\t      // interact.on() listeners\n\t      if (iEvent.type in globalEvents && (listeners = globalEvents[iEvent.type])) {\n\t        for (i = 0, len = listeners.length; i < len && !iEvent.immediatePropagationStopped; i++) {\n\t          funcName = listeners[i].name;\n\t          listeners[i](iEvent);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.on\n\t         [ method ]\n\t         *\n\t         * Binds a listener for an InteractEvent or DOM event.\n\t         *\n\t         - eventType  (string | array | object) The types of events to listen for\n\t         - listener   (function) The function to be called on the given event(s)\n\t         - useCapture (boolean) #optional useCapture flag for addEventListener\n\t         = (object) This Interactable\n\t        \\*/\n\t    on: function on(eventType, listener, useCapture) {\n\t      var i;\n\t\n\t      if (isString(eventType) && eventType.search(' ') !== -1) {\n\t        eventType = eventType.trim().split(/ +/);\n\t      }\n\t\n\t      if (isArray(eventType)) {\n\t        for (i = 0; i < eventType.length; i++) {\n\t          this.on(eventType[i], listener, useCapture);\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      if (isObject(eventType)) {\n\t        for (var prop in eventType) {\n\t          this.on(prop, eventType[prop], listener);\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      if (eventType === 'wheel') {\n\t        eventType = wheelEvent;\n\t      }\n\t\n\t      // convert to boolean\n\t      useCapture = useCapture ? true : false;\n\t\n\t      if (contains(eventTypes, eventType)) {\n\t        // if this type of event was never bound to this Interactable\n\t        if (!(eventType in this._iEvents)) {\n\t          this._iEvents[eventType] = [listener];\n\t        } else {\n\t          this._iEvents[eventType].push(listener);\n\t        }\n\t      }\n\t      // delegated event for selector\n\t      else if (this.selector) {\n\t          if (!delegatedEvents[eventType]) {\n\t            delegatedEvents[eventType] = {\n\t              selectors: [],\n\t              contexts: [],\n\t              listeners: []\n\t            };\n\t\n\t            // add delegate listener functions\n\t            for (i = 0; i < documents.length; i++) {\n\t              events.add(documents[i], eventType, delegateListener);\n\t              events.add(documents[i], eventType, delegateUseCapture, true);\n\t            }\n\t          }\n\t\n\t          var delegated = delegatedEvents[eventType],\n\t              index;\n\t\n\t          for (index = delegated.selectors.length - 1; index >= 0; index--) {\n\t            if (delegated.selectors[index] === this.selector && delegated.contexts[index] === this._context) {\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (index === -1) {\n\t            index = delegated.selectors.length;\n\t\n\t            delegated.selectors.push(this.selector);\n\t            delegated.contexts.push(this._context);\n\t            delegated.listeners.push([]);\n\t          }\n\t\n\t          // keep listener and useCapture flag\n\t          delegated.listeners[index].push([listener, useCapture]);\n\t        } else {\n\t          events.add(this._element, eventType, listener, useCapture);\n\t        }\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.off\n\t         [ method ]\n\t         *\n\t         * Removes an InteractEvent or DOM event listener\n\t         *\n\t         - eventType  (string | array | object) The types of events that were listened for\n\t         - listener   (function) The listener function to be removed\n\t         - useCapture (boolean) #optional useCapture flag for removeEventListener\n\t         = (object) This Interactable\n\t        \\*/\n\t    off: function off(eventType, listener, useCapture) {\n\t      var i;\n\t\n\t      if (isString(eventType) && eventType.search(' ') !== -1) {\n\t        eventType = eventType.trim().split(/ +/);\n\t      }\n\t\n\t      if (isArray(eventType)) {\n\t        for (i = 0; i < eventType.length; i++) {\n\t          this.off(eventType[i], listener, useCapture);\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      if (isObject(eventType)) {\n\t        for (var prop in eventType) {\n\t          this.off(prop, eventType[prop], listener);\n\t        }\n\t\n\t        return this;\n\t      }\n\t\n\t      var eventList,\n\t          index = -1;\n\t\n\t      // convert to boolean\n\t      useCapture = useCapture ? true : false;\n\t\n\t      if (eventType === 'wheel') {\n\t        eventType = wheelEvent;\n\t      }\n\t\n\t      // if it is an action event type\n\t      if (contains(eventTypes, eventType)) {\n\t        eventList = this._iEvents[eventType];\n\t\n\t        if (eventList && (index = indexOf(eventList, listener)) !== -1) {\n\t          this._iEvents[eventType].splice(index, 1);\n\t        }\n\t      }\n\t      // delegated event\n\t      else if (this.selector) {\n\t          var delegated = delegatedEvents[eventType],\n\t              matchFound = false;\n\t\n\t          if (!delegated) {\n\t            return this;\n\t          }\n\t\n\t          // count from last index of delegated to 0\n\t          for (index = delegated.selectors.length - 1; index >= 0; index--) {\n\t            // look for matching selector and context Node\n\t            if (delegated.selectors[index] === this.selector && delegated.contexts[index] === this._context) {\n\t              var listeners = delegated.listeners[index];\n\t\n\t              // each item of the listeners array is an array: [function, useCaptureFlag]\n\t              for (i = listeners.length - 1; i >= 0; i--) {\n\t                var fn = listeners[i][0],\n\t                    useCap = listeners[i][1];\n\t\n\t                // check if the listener functions and useCapture flags match\n\t                if (fn === listener && useCap === useCapture) {\n\t                  // remove the listener from the array of listeners\n\t                  listeners.splice(i, 1);\n\t\n\t                  // if all listeners for this interactable have been removed\n\t                  // remove the interactable from the delegated arrays\n\t                  if (!listeners.length) {\n\t                    delegated.selectors.splice(index, 1);\n\t                    delegated.contexts.splice(index, 1);\n\t                    delegated.listeners.splice(index, 1);\n\t\n\t                    // remove delegate function from context\n\t                    events.remove(this._context, eventType, delegateListener);\n\t                    events.remove(this._context, eventType, delegateUseCapture, true);\n\t\n\t                    // remove the arrays if they are empty\n\t                    if (!delegated.selectors.length) {\n\t                      delegatedEvents[eventType] = null;\n\t                    }\n\t                  }\n\t\n\t                  // only remove one listener\n\t                  matchFound = true;\n\t                  break;\n\t                }\n\t              }\n\t\n\t              if (matchFound) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        // remove listener from this Interatable's element\n\t        else {\n\t            events.remove(this._element, eventType, listener, useCapture);\n\t          }\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.set\n\t         [ method ]\n\t         *\n\t         * Reset the options of this Interactable\n\t         - options (object) The new settings to apply\n\t         = (object) This Interactable\n\t        \\*/\n\t    set: function set(options) {\n\t      if (!isObject(options)) {\n\t        options = {};\n\t      }\n\t\n\t      this.options = extend({}, defaultOptions.base);\n\t\n\t      var i,\n\t          actions = ['drag', 'drop', 'resize', 'gesture'],\n\t          methods = ['draggable', 'dropzone', 'resizable', 'gesturable'],\n\t          perActions = extend(extend({}, defaultOptions.perAction), options[action] || {});\n\t\n\t      for (i = 0; i < actions.length; i++) {\n\t        var action = actions[i];\n\t\n\t        this.options[action] = extend({}, defaultOptions[action]);\n\t\n\t        this.setPerAction(action, perActions);\n\t\n\t        this[methods[i]](options[action]);\n\t      }\n\t\n\t      var settings = ['accept', 'actionChecker', 'allowFrom', 'deltaSource', 'dropChecker', 'ignoreFrom', 'origin', 'preventDefault', 'rectChecker', 'styleCursor'];\n\t\n\t      for (i = 0, len = settings.length; i < len; i++) {\n\t        var setting = settings[i];\n\t\n\t        this.options[setting] = defaultOptions.base[setting];\n\t\n\t        if (setting in options) {\n\t          this[setting](options[setting]);\n\t        }\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\\\n\t         * Interactable.unset\n\t         [ method ]\n\t         *\n\t         * Remove this interactable from the list of interactables and remove\n\t         * it's drag, drop, resize and gesture capabilities\n\t         *\n\t         = (object) @interact\n\t        \\*/\n\t    unset: function unset() {\n\t      events.remove(this._element, 'all');\n\t\n\t      if (!isString(this.selector)) {\n\t        events.remove(this, 'all');\n\t        if (this.options.styleCursor) {\n\t          this._element.style.cursor = '';\n\t        }\n\t      } else {\n\t        // remove delegated events\n\t        for (var type in delegatedEvents) {\n\t          var delegated = delegatedEvents[type];\n\t\n\t          for (var i = 0; i < delegated.selectors.length; i++) {\n\t            if (delegated.selectors[i] === this.selector && delegated.contexts[i] === this._context) {\n\t              delegated.selectors.splice(i, 1);\n\t              delegated.contexts.splice(i, 1);\n\t              delegated.listeners.splice(i, 1);\n\t\n\t              // remove the arrays if they are empty\n\t              if (!delegated.selectors.length) {\n\t                delegatedEvents[type] = null;\n\t              }\n\t            }\n\t\n\t            events.remove(this._context, type, delegateListener);\n\t            events.remove(this._context, type, delegateUseCapture, true);\n\t\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      this.dropzone(false);\n\t\n\t      interactables.splice(indexOf(interactables, this), 1);\n\t\n\t      return interact;\n\t    }\n\t  };\n\t\n\t  function warnOnce(method, message) {\n\t    var warned = false;\n\t\n\t    return function () {\n\t      if (!warned) {\n\t        window.console.warn(message);\n\t        warned = true;\n\t      }\n\t\n\t      return method.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  Interactable.prototype.snap = warnOnce(Interactable.prototype.snap, 'Interactable#snap is deprecated. See the new documentation for snapping at http://interactjs.io/docs/snapping');\n\t  Interactable.prototype.restrict = warnOnce(Interactable.prototype.restrict, 'Interactable#restrict is deprecated. See the new documentation for resticting at http://interactjs.io/docs/restriction');\n\t  Interactable.prototype.inertia = warnOnce(Interactable.prototype.inertia, 'Interactable#inertia is deprecated. See the new documentation for inertia at http://interactjs.io/docs/inertia');\n\t  Interactable.prototype.autoScroll = warnOnce(Interactable.prototype.autoScroll, 'Interactable#autoScroll is deprecated. See the new documentation for autoScroll at http://interactjs.io/docs/#autoscroll');\n\t  Interactable.prototype.squareResize = warnOnce(Interactable.prototype.squareResize, 'Interactable#squareResize is deprecated. See http://interactjs.io/docs/#resize-square');\n\t\n\t  Interactable.prototype.accept = warnOnce(Interactable.prototype.accept, 'Interactable#accept is deprecated. use Interactable#dropzone({ accept: target }) instead');\n\t  Interactable.prototype.dropChecker = warnOnce(Interactable.prototype.dropChecker, 'Interactable#dropChecker is deprecated. use Interactable#dropzone({ dropChecker: checkerFunction }) instead');\n\t  Interactable.prototype.context = warnOnce(Interactable.prototype.context, 'Interactable#context as a method is deprecated. It will soon be a DOM Node instead');\n\t\n\t  /*\\\n\t     * interact.isSet\n\t     [ method ]\n\t     *\n\t     * Check if an element has been set\n\t     - element (Element) The Element being searched for\n\t     = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\t    \\*/\n\t  interact.isSet = function (element, options) {\n\t    return interactables.indexOfElement(element, options && options.context) !== -1;\n\t  };\n\t\n\t  /*\\\n\t     * interact.on\n\t     [ method ]\n\t     *\n\t     * Adds a global listener for an InteractEvent or adds a DOM event to\n\t     * `document`\n\t     *\n\t     - type       (string | array | object) The types of events to listen for\n\t     - listener   (function) The function to be called on the given event(s)\n\t     - useCapture (boolean) #optional useCapture flag for addEventListener\n\t     = (object) interact\n\t    \\*/\n\t  interact.on = function (type, listener, useCapture) {\n\t    if (isString(type) && type.search(' ') !== -1) {\n\t      type = type.trim().split(/ +/);\n\t    }\n\t\n\t    if (isArray(type)) {\n\t      for (var i = 0; i < type.length; i++) {\n\t        interact.on(type[i], listener, useCapture);\n\t      }\n\t\n\t      return interact;\n\t    }\n\t\n\t    if (isObject(type)) {\n\t      for (var prop in type) {\n\t        interact.on(prop, type[prop], listener);\n\t      }\n\t\n\t      return interact;\n\t    }\n\t\n\t    // if it is an InteractEvent type, add listener to globalEvents\n\t    if (contains(eventTypes, type)) {\n\t      // if this type of event was never bound\n\t      if (!globalEvents[type]) {\n\t        globalEvents[type] = [listener];\n\t      } else {\n\t        globalEvents[type].push(listener);\n\t      }\n\t    }\n\t    // If non InteractEvent type, addEventListener to document\n\t    else {\n\t        events.add(document, type, listener, useCapture);\n\t      }\n\t\n\t    return interact;\n\t  };\n\t\n\t  /*\\\n\t     * interact.off\n\t     [ method ]\n\t     *\n\t     * Removes a global InteractEvent listener or DOM event from `document`\n\t     *\n\t     - type       (string | array | object) The types of events that were listened for\n\t     - listener   (function) The listener function to be removed\n\t     - useCapture (boolean) #optional useCapture flag for removeEventListener\n\t     = (object) interact\n\t     \\*/\n\t  interact.off = function (type, listener, useCapture) {\n\t    if (isString(type) && type.search(' ') !== -1) {\n\t      type = type.trim().split(/ +/);\n\t    }\n\t\n\t    if (isArray(type)) {\n\t      for (var i = 0; i < type.length; i++) {\n\t        interact.off(type[i], listener, useCapture);\n\t      }\n\t\n\t      return interact;\n\t    }\n\t\n\t    if (isObject(type)) {\n\t      for (var prop in type) {\n\t        interact.off(prop, type[prop], listener);\n\t      }\n\t\n\t      return interact;\n\t    }\n\t\n\t    if (!contains(eventTypes, type)) {\n\t      events.remove(document, type, listener, useCapture);\n\t    } else {\n\t      var index;\n\t\n\t      if (type in globalEvents && (index = indexOf(globalEvents[type], listener)) !== -1) {\n\t        globalEvents[type].splice(index, 1);\n\t      }\n\t    }\n\t\n\t    return interact;\n\t  };\n\t\n\t  /*\\\n\t     * interact.enableDragging\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether dragging is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t  interact.enableDragging = warnOnce(function (newValue) {\n\t    if (newValue !== null && newValue !== undefined) {\n\t      actionIsEnabled.drag = newValue;\n\t\n\t      return interact;\n\t    }\n\t    return actionIsEnabled.drag;\n\t  }, 'interact.enableDragging is deprecated and will soon be removed.');\n\t\n\t  /*\\\n\t     * interact.enableResizing\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether resizing is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t  interact.enableResizing = warnOnce(function (newValue) {\n\t    if (newValue !== null && newValue !== undefined) {\n\t      actionIsEnabled.resize = newValue;\n\t\n\t      return interact;\n\t    }\n\t    return actionIsEnabled.resize;\n\t  }, 'interact.enableResizing is deprecated and will soon be removed.');\n\t\n\t  /*\\\n\t     * interact.enableGesturing\n\t     [ method ]\n\t     *\n\t     * Deprecated.\n\t     *\n\t     * Returns or sets whether gesturing is enabled for any Interactables\n\t     *\n\t     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n\t     = (boolean | object) The current setting or interact\n\t    \\*/\n\t  interact.enableGesturing = warnOnce(function (newValue) {\n\t    if (newValue !== null && newValue !== undefined) {\n\t      actionIsEnabled.gesture = newValue;\n\t\n\t      return interact;\n\t    }\n\t    return actionIsEnabled.gesture;\n\t  }, 'interact.enableGesturing is deprecated and will soon be removed.');\n\t\n\t  interact.eventTypes = eventTypes;\n\t\n\t  /*\\\n\t     * interact.debug\n\t     [ method ]\n\t     *\n\t     * Returns debugging data\n\t     = (object) An object with properties that outline the current state and expose internal functions and variables\n\t    \\*/\n\t  interact.debug = function () {\n\t    var interaction = interactions[0] || new Interaction();\n\t\n\t    return {\n\t      interactions: interactions,\n\t      target: interaction.target,\n\t      dragging: interaction.dragging,\n\t      resizing: interaction.resizing,\n\t      gesturing: interaction.gesturing,\n\t      prepared: interaction.prepared,\n\t      matches: interaction.matches,\n\t      matchElements: interaction.matchElements,\n\t\n\t      prevCoords: interaction.prevCoords,\n\t      startCoords: interaction.startCoords,\n\t\n\t      pointerIds: interaction.pointerIds,\n\t      pointers: interaction.pointers,\n\t      addPointer: listeners.addPointer,\n\t      removePointer: listeners.removePointer,\n\t      recordPointer: listeners.recordPointer,\n\t\n\t      snap: interaction.snapStatus,\n\t      restrict: interaction.restrictStatus,\n\t      inertia: interaction.inertiaStatus,\n\t\n\t      downTime: interaction.downTimes[0],\n\t      downEvent: interaction.downEvent,\n\t      downPointer: interaction.downPointer,\n\t      prevEvent: interaction.prevEvent,\n\t\n\t      Interactable: Interactable,\n\t      interactables: interactables,\n\t      pointerIsDown: interaction.pointerIsDown,\n\t      defaultOptions: defaultOptions,\n\t      defaultActionChecker: defaultActionChecker,\n\t\n\t      actionCursors: actionCursors,\n\t      dragMove: listeners.dragMove,\n\t      resizeMove: listeners.resizeMove,\n\t      gestureMove: listeners.gestureMove,\n\t      pointerUp: listeners.pointerUp,\n\t      pointerDown: listeners.pointerDown,\n\t      pointerMove: listeners.pointerMove,\n\t      pointerHover: listeners.pointerHover,\n\t\n\t      eventTypes: eventTypes,\n\t\n\t      events: events,\n\t      globalEvents: globalEvents,\n\t      delegatedEvents: delegatedEvents,\n\t\n\t      prefixedPropREs: prefixedPropREs\n\t    };\n\t  };\n\t\n\t  // expose the functions used to calculate multi-touch properties\n\t  interact.getPointerAverage = pointerAverage;\n\t  interact.getTouchBBox = touchBBox;\n\t  interact.getTouchDistance = touchDistance;\n\t  interact.getTouchAngle = touchAngle;\n\t\n\t  interact.getElementRect = getElementRect;\n\t  interact.getElementClientRect = getElementClientRect;\n\t  interact.matchesSelector = matchesSelector;\n\t  interact.closest = closest;\n\t\n\t  /*\\\n\t     * interact.margin\n\t     [ method ]\n\t     *\n\t     * Deprecated. Use `interact(target).resizable({ margin: number });` instead.\n\t     * Returns or sets the margin for autocheck resizing used in\n\t     * @Interactable.getAction. That is the distance from the bottom and right\n\t     * edges of an element clicking in which will start resizing\n\t     *\n\t     - newValue (number) #optional\n\t     = (number | interact) The current margin value or interact\n\t    \\*/\n\t  interact.margin = warnOnce(function (newvalue) {\n\t    if (isNumber(newvalue)) {\n\t      margin = newvalue;\n\t\n\t      return interact;\n\t    }\n\t    return margin;\n\t  }, 'interact.margin is deprecated. Use interact(target).resizable({ margin: number }); instead.');\n\t\n\t  /*\\\n\t     * interact.supportsTouch\n\t     [ method ]\n\t     *\n\t     = (boolean) Whether or not the browser supports touch input\n\t    \\*/\n\t  interact.supportsTouch = function () {\n\t    return supportsTouch;\n\t  };\n\t\n\t  /*\\\n\t     * interact.supportsPointerEvent\n\t     [ method ]\n\t     *\n\t     = (boolean) Whether or not the browser supports PointerEvents\n\t    \\*/\n\t  interact.supportsPointerEvent = function () {\n\t    return supportsPointerEvent;\n\t  };\n\t\n\t  /*\\\n\t     * interact.stop\n\t     [ method ]\n\t     *\n\t     * Cancels all interactions (end events are not fired)\n\t     *\n\t     - event (Event) An event on which to call preventDefault()\n\t     = (object) interact\n\t    \\*/\n\t  interact.stop = function (event) {\n\t    for (var i = interactions.length - 1; i >= 0; i--) {\n\t      interactions[i].stop(event);\n\t    }\n\t\n\t    return interact;\n\t  };\n\t\n\t  /*\\\n\t     * interact.dynamicDrop\n\t     [ method ]\n\t     *\n\t     * Returns or sets whether the dimensions of dropzone elements are\n\t     * calculated on every dragmove or only on dragstart for the default\n\t     * dropChecker\n\t     *\n\t     - newValue (boolean) #optional True to check on each move. False to check only before start\n\t     = (boolean | interact) The current setting or interact\n\t    \\*/\n\t  interact.dynamicDrop = function (newValue) {\n\t    if (isBool(newValue)) {\n\t      //if (dragging && dynamicDrop !== newValue && !newValue) {\n\t      //calcRects(dropzones);\n\t      //}\n\t\n\t      dynamicDrop = newValue;\n\t\n\t      return interact;\n\t    }\n\t    return dynamicDrop;\n\t  };\n\t\n\t  /*\\\n\t     * interact.pointerMoveTolerance\n\t     [ method ]\n\t     * Returns or sets the distance the pointer must be moved before an action\n\t     * sequence occurs. This also affects tolerance for tap events.\n\t     *\n\t     - newValue (number) #optional The movement from the start position must be greater than this value\n\t     = (number | Interactable) The current setting or interact\n\t    \\*/\n\t  interact.pointerMoveTolerance = function (newValue) {\n\t    if (isNumber(newValue)) {\n\t      pointerMoveTolerance = newValue;\n\t\n\t      return this;\n\t    }\n\t\n\t    return pointerMoveTolerance;\n\t  };\n\t\n\t  /*\\\n\t     * interact.maxInteractions\n\t     [ method ]\n\t     **\n\t     * Returns or sets the maximum number of concurrent interactions allowed.\n\t     * By default only 1 interaction is allowed at a time (for backwards\n\t     * compatibility). To allow multiple interactions on the same Interactables\n\t     * and elements, you need to enable it in the draggable, resizable and\n\t     * gesturable `'max'` and `'maxPerElement'` options.\n\t     **\n\t     - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\t    \\*/\n\t  interact.maxInteractions = function (newValue) {\n\t    if (isNumber(newValue)) {\n\t      maxInteractions = newValue;\n\t\n\t      return this;\n\t    }\n\t\n\t    return maxInteractions;\n\t  };\n\t\n\t  interact.createSnapGrid = function (grid) {\n\t    return function (x, y) {\n\t      var offsetX = 0,\n\t          offsetY = 0;\n\t\n\t      if (isObject(grid.offset)) {\n\t        offsetX = grid.offset.x;\n\t        offsetY = grid.offset.y;\n\t      }\n\t\n\t      var gridx = Math.round((x - offsetX) / grid.x),\n\t          gridy = Math.round((y - offsetY) / grid.y),\n\t          newX = gridx * grid.x + offsetX,\n\t          newY = gridy * grid.y + offsetY;\n\t\n\t      return {\n\t        x: newX,\n\t        y: newY,\n\t        range: grid.range\n\t      };\n\t    };\n\t  };\n\t\n\t  function endAllInteractions(event) {\n\t    for (var i = 0; i < interactions.length; i++) {\n\t      interactions[i].pointerEnd(event, event);\n\t    }\n\t  }\n\t\n\t  function listenToDocument(doc) {\n\t    if (contains(documents, doc)) {\n\t      return;\n\t    }\n\t\n\t    var win = doc.defaultView || doc.parentWindow;\n\t\n\t    // add delegate event listener\n\t    for (var eventType in delegatedEvents) {\n\t      events.add(doc, eventType, delegateListener);\n\t      events.add(doc, eventType, delegateUseCapture, true);\n\t    }\n\t\n\t    if (supportsPointerEvent) {\n\t      if (PointerEvent === win.MSPointerEvent) {\n\t        pEventTypes = {\n\t          up: 'MSPointerUp',\n\t          down: 'MSPointerDown',\n\t          over: 'mouseover',\n\t          out: 'mouseout',\n\t          move: 'MSPointerMove',\n\t          cancel: 'MSPointerCancel'\n\t        };\n\t      } else {\n\t        pEventTypes = {\n\t          up: 'pointerup',\n\t          down: 'pointerdown',\n\t          over: 'pointerover',\n\t          out: 'pointerout',\n\t          move: 'pointermove',\n\t          cancel: 'pointercancel'\n\t        };\n\t      }\n\t\n\t      events.add(doc, pEventTypes.down, listeners.selectorDown);\n\t      events.add(doc, pEventTypes.move, listeners.pointerMove);\n\t      events.add(doc, pEventTypes.over, listeners.pointerOver);\n\t      events.add(doc, pEventTypes.out, listeners.pointerOut);\n\t      events.add(doc, pEventTypes.up, listeners.pointerUp);\n\t      events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n\t\n\t      // autoscroll\n\t      events.add(doc, pEventTypes.move, listeners.autoScrollMove);\n\t    } else {\n\t      events.add(doc, 'mousedown', listeners.selectorDown);\n\t      events.add(doc, 'mousemove', listeners.pointerMove);\n\t      events.add(doc, 'mouseup', listeners.pointerUp);\n\t      events.add(doc, 'mouseover', listeners.pointerOver);\n\t      events.add(doc, 'mouseout', listeners.pointerOut);\n\t\n\t      events.add(doc, 'touchstart', listeners.selectorDown);\n\t      events.add(doc, 'touchmove', listeners.pointerMove);\n\t      events.add(doc, 'touchend', listeners.pointerUp);\n\t      events.add(doc, 'touchcancel', listeners.pointerCancel);\n\t\n\t      // autoscroll\n\t      events.add(doc, 'mousemove', listeners.autoScrollMove);\n\t      events.add(doc, 'touchmove', listeners.autoScrollMove);\n\t    }\n\t\n\t    events.add(win, 'blur', endAllInteractions);\n\t\n\t    try {\n\t      if (win.frameElement) {\n\t        var parentDoc = win.frameElement.ownerDocument,\n\t            parentWindow = parentDoc.defaultView;\n\t\n\t        events.add(parentDoc, 'mouseup', listeners.pointerEnd);\n\t        events.add(parentDoc, 'touchend', listeners.pointerEnd);\n\t        events.add(parentDoc, 'touchcancel', listeners.pointerEnd);\n\t        events.add(parentDoc, 'pointerup', listeners.pointerEnd);\n\t        events.add(parentDoc, 'MSPointerUp', listeners.pointerEnd);\n\t        events.add(parentWindow, 'blur', endAllInteractions);\n\t      }\n\t    } catch (error) {\n\t      interact.windowParentError = error;\n\t    }\n\t\n\t    // prevent native HTML5 drag on interact.js target elements\n\t    events.add(doc, 'dragstart', function (event) {\n\t      for (var i = 0; i < interactions.length; i++) {\n\t        var interaction = interactions[i];\n\t\n\t        if (interaction.element && (interaction.element === event.target || nodeContains(interaction.element, event.target))) {\n\t          interaction.checkAndPreventDefault(event, interaction.target, interaction.element);\n\t          return;\n\t        }\n\t      }\n\t    });\n\t\n\t    if (events.useAttachEvent) {\n\t      // For IE's lack of Event#preventDefault\n\t      events.add(doc, 'selectstart', function (event) {\n\t        var interaction = interactions[0];\n\t\n\t        if (interaction.currentAction()) {\n\t          interaction.checkAndPreventDefault(event);\n\t        }\n\t      });\n\t\n\t      // For IE's bad dblclick event sequence\n\t      events.add(doc, 'dblclick', doOnInteractions('ie8Dblclick'));\n\t    }\n\t\n\t    documents.push(doc);\n\t  }\n\t\n\t  listenToDocument(document);\n\t\n\t  function indexOf(array, target) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      if (array[i] === target) {\n\t        return i;\n\t      }\n\t    }\n\t\n\t    return -1;\n\t  }\n\t\n\t  function contains(array, target) {\n\t    return indexOf(array, target) !== -1;\n\t  }\n\t\n\t  function matchesSelector(element, selector, nodeList) {\n\t    if (ie8MatchesSelector) {\n\t      return ie8MatchesSelector(element, selector, nodeList);\n\t    }\n\t\n\t    // remove /deep/ from selectors if shadowDOM polyfill is used\n\t    if (window !== realWindow) {\n\t      selector = selector.replace(/\\/deep\\//g, ' ');\n\t    }\n\t\n\t    return element[prefixedMatchesSelector](selector);\n\t  }\n\t\n\t  function matchesUpTo(element, selector, limit) {\n\t    while (isElement(element)) {\n\t      if (matchesSelector(element, selector)) {\n\t        return true;\n\t      }\n\t\n\t      element = parentElement(element);\n\t\n\t      if (element === limit) {\n\t        return matchesSelector(element, selector);\n\t      }\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  // For IE8's lack of an Element#matchesSelector\n\t  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n\t  if (!(prefixedMatchesSelector in Element.prototype) || !isFunction(Element.prototype[prefixedMatchesSelector])) {\n\t    ie8MatchesSelector = function ie8MatchesSelector(element, selector, elems) {\n\t      elems = elems || element.parentNode.querySelectorAll(selector);\n\t\n\t      for (var i = 0, len = elems.length; i < len; i++) {\n\t        if (elems[i] === element) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    };\n\t  }\n\t\n\t  // requestAnimationFrame polyfill\n\t  (function () {\n\t    var lastTime = 0,\n\t        vendors = ['ms', 'moz', 'webkit', 'o'];\n\t\n\t    for (var x = 0; x < vendors.length && !realWindow.requestAnimationFrame; ++x) {\n\t      reqFrame = realWindow[vendors[x] + 'RequestAnimationFrame'];\n\t      cancelFrame = realWindow[vendors[x] + 'CancelAnimationFrame'] || realWindow[vendors[x] + 'CancelRequestAnimationFrame'];\n\t    }\n\t\n\t    if (!reqFrame) {\n\t      reqFrame = function reqFrame(callback) {\n\t        var currTime = new Date().getTime(),\n\t            timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n\t            id = setTimeout(function () {\n\t          callback(currTime + timeToCall);\n\t        }, timeToCall);\n\t        lastTime = currTime + timeToCall;\n\t        return id;\n\t      };\n\t    }\n\t\n\t    if (!cancelFrame) {\n\t      cancelFrame = function cancelFrame(id) {\n\t        clearTimeout(id);\n\t      };\n\t    }\n\t  })();\n\t\n\t  /* global exports: true, module, define */\n\t\n\t  // http://documentcloud.github.io/underscore/docs/underscore.html#section-11\n\t  if (true) {\n\t    if (typeof module !== 'undefined' && module.exports) {\n\t      exports = module.exports = interact;\n\t    }\n\t    exports.interact = interact;\n\t  }\n\t  // AMD\n\t  else if (typeof define === 'function' && define.amd) {\n\t      define('interact', function () {\n\t        return interact;\n\t      });\n\t    } else {\n\t      realWindow.interact = interact;\n\t    }\n\t})(typeof window === 'undefined' ? undefined : window);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _jquery = __webpack_require__(2);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _interact = __webpack_require__(3);\n\t\n\tvar _interact2 = _interopRequireDefault(_interact);\n\t\n\tvar _slick = __webpack_require__(1);\n\t\n\tvar _slick2 = _interopRequireDefault(_slick);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// Slick.Grid globals pretense\n\t_slick2.default.FrozenGrid = SlickGrid; /**\n\t                                         * @license\n\t                                         * (c) 2009-2013 Michael Leibman\n\t                                         * michael{dot}leibman{at}gmail{dot}com\n\t                                         * http://github.com/mleibman/slickgrid\n\t                                         *\n\t                                         * Distributed under MIT license.\n\t                                         * All rights reserved.\n\t                                         *\n\t                                         * SlickGrid v2.2\n\t                                         *\n\t                                         * NOTES:\n\t                                         *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n\t                                         *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n\t                                         *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n\t                                         *     and do proper cleanup.\n\t                                         */\n\t\n\texports.default = SlickGrid;\n\t\n\t// shared across all grids on the page\n\t\n\tvar scrollbarDimensions = void 0;\n\tvar maxSupportedCssHeight = void 0; // browser's breaking point\n\t\n\t//////////////////////////////////////////////////////////////////////////////////////////////\n\t// SlickGrid class implementation (available as Slick.Grid)\n\t\n\t/**\n\t * Creates a new instance of the grid.\n\t * @class SlickGrid\n\t * @constructor\n\t * @param {Node}              container   Container node to create the grid in.\n\t * @param {Array,Object}      data        An array of objects for databinding.\n\t * @param {Array}             columns     An array of column definitions.\n\t * @param {Object}            options     Grid options.\n\t **/\n\tfunction SlickGrid(container, data, columns, options) {\n\t  // settings\n\t  var defaults = {\n\t    explicitInitialization: false,\n\t    rowHeight: 25,\n\t    defaultColumnWidth: 80,\n\t    enableAddRow: false,\n\t    leaveSpaceForNewRows: false,\n\t    editable: false,\n\t    autoEdit: true,\n\t    enableCellNavigation: true,\n\t    enableColumnReorder: true,\n\t    asyncEditorLoading: false,\n\t    asyncEditorLoadDelay: 100,\n\t    forceFitColumns: false,\n\t    enableAsyncPostRender: false,\n\t    asyncPostRenderDelay: 50,\n\t    autoHeight: false,\n\t    editorLock: _slick2.default.GlobalEditorLock,\n\t    showHeaderRow: false,\n\t    headerRowHeight: 25,\n\t    showFooterRow: false,\n\t    footerRowHeight: 25,\n\t    showTopPanel: false,\n\t    topPanelHeight: 25,\n\t    formatterFactory: null,\n\t    editorFactory: null,\n\t    cellFlashingCssClass: 'flashing',\n\t    selectedCellCssClass: 'selected',\n\t    multiSelect: true,\n\t    enableTextSelectionOnCells: false,\n\t    dataItemColumnValueExtractor: null,\n\t    frozenBottom: false,\n\t    frozenColumn: -1,\n\t    frozenRow: -1,\n\t    fullWidthRows: false,\n\t    multiColumnSort: false,\n\t    defaultFormatter: defaultFormatter,\n\t    forceSyncScrolling: false,\n\t    addNewRowCssClass: 'new-row'\n\t  };\n\t\n\t  var columnDefaults = {\n\t    name: '',\n\t    resizable: true,\n\t    sortable: false,\n\t    minWidth: 30,\n\t    rerenderOnResize: false,\n\t    headerCssClass: null,\n\t    defaultSortAsc: true,\n\t    focusable: true,\n\t    selectable: true\n\t  };\n\t\n\t  // scroller\n\t  var th = void 0; // virtual height\n\t  var h = void 0; // real scrollable height\n\t  var ph = void 0; // page height\n\t  var n = void 0; // number of pages\n\t  var cj = void 0; // \"jumpiness\" coefficient\n\t\n\t  var page = 0; // current page\n\t  var offset = 0; // current page offset\n\t  var vScrollDir = 1;\n\t\n\t  // private\n\t  var initialized = false;\n\t  var $container = void 0;\n\t  var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n\t  var self = this;\n\t  var $focusSink = void 0,\n\t      $focusSink2 = void 0;\n\t  var $groupHeaders = (0, _jquery2.default)();\n\t  var $headerScroller = void 0;\n\t  var $headers = void 0;\n\t  var $headerRow = void 0,\n\t      $headerRowScroller = void 0,\n\t      $headerRowSpacerL = void 0,\n\t      $headerRowSpacerR = void 0;\n\t  var $footerRow = void 0,\n\t      $footerRowScroller = void 0,\n\t      $footerRowSpacerL = void 0,\n\t      $footerRowSpacerR = void 0;\n\t  var $topPanelScroller = void 0;\n\t  var $topPanel = void 0;\n\t  var $viewport = void 0;\n\t  var $canvas = void 0;\n\t  var $style = void 0;\n\t  var $boundAncestors = void 0;\n\t  var treeColumns = void 0;\n\t  var stylesheet = void 0,\n\t      columnCssRulesL = void 0,\n\t      columnCssRulesR = void 0;\n\t  var viewportH = void 0,\n\t      viewportW = void 0;\n\t  var canvasWidth = void 0,\n\t      canvasWidthL = void 0,\n\t      canvasWidthR = void 0;\n\t  var headersWidth = void 0,\n\t      headersWidthL = void 0,\n\t      headersWidthR = void 0;\n\t  var viewportHasHScroll = void 0,\n\t      viewportHasVScroll = void 0;\n\t  var headerColumnWidthDiff = 0,\n\t      headerColumnHeightDiff = 0,\n\t      // border+padding\n\t  cellWidthDiff = 0,\n\t      cellHeightDiff = 0;\n\t  var absoluteColumnMinWidth = void 0;\n\t  var hasFrozenRows = false;\n\t  var frozenRowsHeight = 0;\n\t  var actualFrozenRow = -1;\n\t  var paneTopH = 0;\n\t  var paneBottomH = 0;\n\t  var viewportTopH = 0;\n\t  var viewportBottomH = 0;\n\t  var topPanelH = 0;\n\t  var headerRowH = 0;\n\t  var footerRowH = 0;\n\t\n\t  var tabbingDirection = 1;\n\t  var $activeCanvasNode = void 0;\n\t  var $activeViewportNode = void 0;\n\t  var activePosX = void 0;\n\t  var activeRow = void 0,\n\t      activeCell = void 0;\n\t  var activeCellNode = null;\n\t  var currentEditor = null;\n\t  var serializedEditorValue = void 0;\n\t  var editController = void 0;\n\t\n\t  var rowsCache = {};\n\t  var renderedRows = 0;\n\t  var numVisibleRows = 0;\n\t  var prevScrollTop = 0;\n\t  var scrollTop = 0;\n\t  var lastRenderedScrollTop = 0;\n\t  var lastRenderedScrollLeft = 0;\n\t  var prevScrollLeft = 0;\n\t  var scrollLeft = 0;\n\t\n\t  var selectionModel = void 0;\n\t  var selectedRows = [];\n\t\n\t  var plugins = [];\n\t  var cellCssClasses = {};\n\t\n\t  var columnsById = {};\n\t  var sortColumns = [];\n\t  var columnPosLeft = [];\n\t  var columnPosRight = [];\n\t\n\t  // async call handles\n\t  var h_editorLoader = null;\n\t  var h_render = null;\n\t  var h_postrender = null;\n\t  var postProcessedRows = {};\n\t  var postProcessToRow = null;\n\t  var postProcessFromRow = null;\n\t\n\t  // perf counters\n\t  var counter_rows_rendered = 0;\n\t  var counter_rows_removed = 0;\n\t\n\t  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n\t  // See http://crbug.com/312427.\n\t  var rowNodeFromLastMouseWheelEvent = void 0; // this node must not be deleted while inertial scrolling\n\t  var zombieRowNodeFromLastMouseWheelEvent = void 0; // node that was hidden instead of getting deleted\n\t\n\t  var $paneHeaderL = void 0;\n\t  var $paneHeaderR = void 0;\n\t  var $paneTopL = void 0;\n\t  var $paneTopR = void 0;\n\t  var $paneBottomL = void 0;\n\t  var $paneBottomR = void 0;\n\t\n\t  var $headerScrollerL = void 0;\n\t  var $headerScrollerR = void 0;\n\t\n\t  var $headerL = void 0;\n\t  var $headerR = void 0;\n\t\n\t  var $groupHeadersL = void 0;\n\t  var $groupHeadersR = void 0;\n\t\n\t  var $headerRowScrollerL = void 0;\n\t  var $headerRowScrollerR = void 0;\n\t\n\t  var $footerRowScrollerL = void 0;\n\t  var $footerRowScrollerR = void 0;\n\t\n\t  var $headerRowL = void 0;\n\t  var $headerRowR = void 0;\n\t\n\t  var $footerRowL = void 0;\n\t  var $footerRowR = void 0;\n\t\n\t  var $topPanelScrollerL = void 0;\n\t  var $topPanelScrollerR = void 0;\n\t\n\t  var $topPanelL = void 0;\n\t  var $topPanelR = void 0;\n\t\n\t  var $viewportTopL = void 0;\n\t  var $viewportTopR = void 0;\n\t  var $viewportBottomL = void 0;\n\t  var $viewportBottomR = void 0;\n\t\n\t  var $canvasTopL = void 0;\n\t  var $canvasTopR = void 0;\n\t  var $canvasBottomL = void 0;\n\t  var $canvasBottomR = void 0;\n\t\n\t  var $viewportScrollContainerX = void 0;\n\t  var $viewportScrollContainerY = void 0;\n\t  var $headerScrollContainer = void 0;\n\t  var $headerRowScrollContainer = void 0;\n\t  var $footerRowScrollContainer = void 0;\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Initialization\n\t\n\t  function init() {\n\t    $container = (0, _jquery2.default)(container);\n\t    if ($container.length < 1) {\n\t      throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n\t    }\n\t\n\t    // calculate these only once and share between grid instances\n\t    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n\t    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\t\n\t    options = _jquery2.default.extend({}, defaults, options);\n\t    validateAndEnforceOptions();\n\t    columnDefaults.width = options.defaultColumnWidth;\n\t\n\t    treeColumns = new _slick2.default.TreeColumns(columns);\n\t    columns = treeColumns.extractColumns();\n\t\n\t    columnsById = {};\n\t    for (var i = 0; i < columns.length; i++) {\n\t      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n\t      columnsById[m.id] = i;\n\t      if (m.minWidth && m.width < m.minWidth) {\n\t        m.width = m.minWidth;\n\t      }\n\t      if (m.maxWidth && m.width > m.maxWidth) {\n\t        m.width = m.maxWidth;\n\t      }\n\t    }\n\t\n\t    editController = {\n\t      commitCurrentEdit: commitCurrentEdit,\n\t      cancelCurrentEdit: cancelCurrentEdit\n\t    };\n\t\n\t    $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n\t\n\t    // set up a positioning container if needed\n\t    if (!/relative|absolute|fixed/.test($container.css('position'))) {\n\t      $container.css('position', 'relative');\n\t    }\n\t\n\t    $focusSink = (0, _jquery2.default)(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\t\n\t    // Containers used for scrolling frozen columns and rows\n\t    $paneHeaderL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\n\t    $paneHeaderR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\n\t    $paneTopL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\n\t    $paneTopR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\n\t    $paneBottomL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\n\t    $paneBottomR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\n\t\n\t    // Append the header scroller containers\n\t    $headerScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-left' />\").appendTo($paneHeaderL);\n\t    $headerScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-right' />\").appendTo($paneHeaderR);\n\t\n\t    // Cache the header scroller containers\n\t    $headerScroller = (0, _jquery2.default)().add($headerScrollerL).add($headerScrollerR);\n\t\n\t    if (treeColumns.hasDepth()) {\n\t      $groupHeadersL = [], $groupHeadersR = [];\n\t      for (var index = 0; index < treeColumns.getDepth() - 1; index++) {\n\t        $groupHeadersL[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n\t        $groupHeadersR[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\t      }\n\t\n\t      $groupHeaders = (0, _jquery2.default)().add($groupHeadersL).add($groupHeadersR);\n\t    }\n\t\n\t    // Append the columnn containers to the headers\n\t    $headerL = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n\t    $headerR = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\t\n\t    // Cache the header columns\n\t    $headers = (0, _jquery2.default)().add($headerL).add($headerR);\n\t\n\t    $headerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopL);\n\t    $headerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopR);\n\t\n\t    $headerRowScroller = (0, _jquery2.default)().add($headerRowScrollerL).add($headerRowScrollerR);\n\t\n\t    $headerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScrollerL);\n\t    $headerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScrollerR);\n\t\n\t    $headerRowL = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\n\t    $headerRowR = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\n\t\n\t    $headerRow = (0, _jquery2.default)().add($headerRowL).add($headerRowR);\n\t\n\t    // Append the top panel scroller\n\t    $topPanelScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopL);\n\t    $topPanelScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopR);\n\t\n\t    $topPanelScroller = (0, _jquery2.default)().add($topPanelScrollerL).add($topPanelScrollerR);\n\t\n\t    // Append the top panel\n\t    $topPanelL = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\n\t    $topPanelR = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\n\t\n\t    $topPanel = (0, _jquery2.default)().add($topPanelL).add($topPanelR);\n\t\n\t    if (!options.showTopPanel) {\n\t      $topPanelScroller.hide();\n\t    }\n\t\n\t    if (!options.showHeaderRow) {\n\t      $headerRowScroller.hide();\n\t    }\n\t\n\t    // Append the viewport containers\n\t    $viewportTopL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\n\t    $viewportTopR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\n\t    $viewportBottomL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\n\t    $viewportBottomR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\n\t\n\t    // Cache the viewports\n\t    $viewport = (0, _jquery2.default)().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\n\t\n\t    // Default the active viewport to the top left\n\t    $activeViewportNode = $viewportTopL;\n\t\n\t    // Append the canvas containers\n\t    $canvasTopL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\n\t    $canvasTopR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\n\t    $canvasBottomL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\n\t    $canvasBottomR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\n\t\n\t    // Cache the canvases\n\t    $canvas = (0, _jquery2.default)().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\n\t\n\t    // Default the active canvas to the top left\n\t    $activeCanvasNode = $canvasTopL;\n\t\n\t    // footer Row\n\t    $footerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopR);\n\t    $footerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopL);\n\t\n\t    $footerRowScroller = (0, _jquery2.default)().add($footerRowScrollerL).add($footerRowScrollerR);\n\t\n\t    $footerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScrollerL);\n\t    $footerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScrollerR);\n\t\n\t    $footerRowL = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\n\t    $footerRowR = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\n\t\n\t    $footerRow = (0, _jquery2.default)().add($footerRowL).add($footerRowR);\n\t\n\t    if (!options.showFooterRow) {\n\t      $footerRowScroller.hide();\n\t    }\n\t\n\t    $focusSink2 = $focusSink.clone().appendTo($container);\n\t\n\t    if (!options.explicitInitialization) {\n\t      finishInitialization();\n\t    }\n\t  }\n\t\n\t  function finishInitialization() {\n\t    if (!initialized) {\n\t      initialized = true;\n\t\n\t      getViewportWidth();\n\t      getViewportHeight();\n\t\n\t      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n\t      // calculate the diff so we can set consistent sizes\n\t      measureCellPaddingAndBorder();\n\t\n\t      // for usability reasons, all text selection in SlickGrid is disabled\n\t      // with the exception of input and textarea elements (selection must\n\t      // be enabled there so that editors work as expected); note that\n\t      // selection in grid cells (grid body) is already unavailable in\n\t      // all browsers except IE\n\t      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\t\n\t      if (!options.enableTextSelectionOnCells) {\n\t        // disable text selection in grid cells except in input and textarea elements\n\t        // (this is IE-specific, because selectstart event will only fire in IE)\n\t        $viewport.bind('selectstart.ui', function (event) {\n\t          return (0, _jquery2.default)(event.target).is('input,textarea');\n\t        });\n\t      }\n\t\n\t      setFrozenOptions();\n\t      setPaneVisibility();\n\t      setScroller();\n\t      setOverflow();\n\t\n\t      updateColumnCaches();\n\t      createColumnHeaders();\n\t      createColumnGroupHeaders();\n\t      createColumnFooter();\n\t      setupColumnSort();\n\t      createCssRules();\n\t      resizeCanvas();\n\t      bindAncestorScrollEvents();\n\t\n\t      $container.bind('resize.slickgrid', resizeCanvas);\n\t      $viewport.on('scroll', handleScroll);\n\t\n\t      if (_jquery2.default.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)) {\n\t        $viewport.on('mousewheel', handleMouseWheel);\n\t      }\n\t\n\t      $headerScroller.bind('contextmenu', handleHeaderContextMenu).bind('click', handleHeaderClick).delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter).delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n\t      $headerRowScroller.bind('scroll', handleHeaderRowScroll);\n\t\n\t      $footerRowScroller.bind('scroll', handleFooterRowScroll);\n\t\n\t      $focusSink.add($focusSink2).bind('keydown', handleKeyDown);\n\t      $canvas.bind('keydown', handleKeyDown).bind('click', handleClick).bind('dblclick', handleDblClick).bind('contextmenu', handleContextMenu).delegate('.slick-cell', 'mouseenter', handleMouseEnter).delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\t\n\t      // legacy support for drag events\n\t      (0, _interact2.default)($canvas[0]).allowFrom('div.slick-cell').draggable({\n\t        onmove: handleDrag,\n\t        onstart: handleDragStart,\n\t        onend: handleDragEnd\n\t      }).styleCursor(false);\n\t\n\t      // Work around http://crbug.com/312427.\n\t      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n\t        $canvas.on('mousewheel', handleMouseWheel);\n\t      }\n\t    }\n\t  }\n\t\n\t  function hasFrozenColumns() {\n\t    return options.frozenColumn > -1;\n\t  }\n\t\n\t  function registerPlugin(plugin) {\n\t    plugins.unshift(plugin);\n\t    plugin.init(self);\n\t  }\n\t\n\t  function unregisterPlugin(plugin) {\n\t    for (var i = plugins.length; i >= 0; i--) {\n\t      if (plugins[i] === plugin) {\n\t        if (plugins[i].destroy) {\n\t          plugins[i].destroy();\n\t        }\n\t        plugins.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t\n\t  function setSelectionModel(model) {\n\t    if (selectionModel) {\n\t      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n\t      if (selectionModel.destroy) {\n\t        selectionModel.destroy();\n\t      }\n\t    }\n\t\n\t    selectionModel = model;\n\t    if (selectionModel) {\n\t      selectionModel.init(self);\n\t      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n\t    }\n\t  }\n\t\n\t  function getSelectionModel() {\n\t    return selectionModel;\n\t  }\n\t\n\t  function getCanvasNode() {\n\t    return $canvas[0];\n\t  }\n\t\n\t  function getActiveCanvasNode(element) {\n\t    setActiveCanvasNode(element);\n\t\n\t    return $activeCanvasNode[0];\n\t  }\n\t\n\t  function getCanvases() {\n\t    return $canvas;\n\t  }\n\t\n\t  function setActiveCanvasNode(element) {\n\t    if (element) {\n\t      $activeCanvasNode = (0, _jquery2.default)(element.target).closest('.grid-canvas');\n\t    }\n\t  }\n\t\n\t  function getViewportNode() {\n\t    return $viewport[0];\n\t  }\n\t\n\t  function getActiveViewportNode(element) {\n\t    setActiveViewportNode(element);\n\t\n\t    return $activeViewportNode[0];\n\t  }\n\t\n\t  function setActiveViewportNode(element) {\n\t    if (element) {\n\t      $activeViewportNode = (0, _jquery2.default)(element.target).closest('.slick-viewport');\n\t    }\n\t  }\n\t\n\t  function measureScrollbar() {\n\t    var $c = (0, _jquery2.default)(\"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo(document.body);\n\t    var dim = {\n\t      width: $c.width() - $c[0].clientWidth,\n\t      height: $c.height() - $c[0].clientHeight\n\t    };\n\t    $c.remove();\n\t    return dim;\n\t  }\n\t\n\t  function getHeadersWidth() {\n\t    headersWidth = headersWidthL = headersWidthR = 0;\n\t\n\t    for (var i = 0, ii = columns.length; i < ii; i++) {\n\t      var width = columns[i].width;\n\t\n\t      if (options.frozenColumn > -1 && i > options.frozenColumn) {\n\t        headersWidthR += width;\n\t      } else {\n\t        headersWidthL += width;\n\t      }\n\t    }\n\t\n\t    if (hasFrozenColumns()) {\n\t      headersWidthL = headersWidthL + 1000;\n\t\n\t      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n\t      headersWidthR += scrollbarDimensions.width;\n\t    } else {\n\t      headersWidthL += scrollbarDimensions.width;\n\t      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n\t    }\n\t\n\t    headersWidth = headersWidthL + headersWidthR;\n\t  }\n\t\n\t  function getHeadersWidthL() {\n\t    headersWidthL = 0;\n\t\n\t    columns.forEach(function (column, i) {\n\t      if (!(options.frozenColumn > -1 && i > options.frozenColumn)) headersWidthL += column.width;\n\t    });\n\t\n\t    if (hasFrozenColumns()) {\n\t      headersWidthL += 1000;\n\t    } else {\n\t      headersWidthL += scrollbarDimensions.width;\n\t      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n\t    }\n\t\n\t    return headersWidthL;\n\t  }\n\t\n\t  function getHeadersWidthR() {\n\t    headersWidthR = 0;\n\t\n\t    columns.forEach(function (column, i) {\n\t      if (options.frozenColumn > -1 && i > options.frozenColumn) headersWidthR += column.width;\n\t    });\n\t\n\t    if (hasFrozenColumns()) {\n\t      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n\t      headersWidthR += scrollbarDimensions.width;\n\t    }\n\t\n\t    return headersWidthR;\n\t  }\n\t\n\t  function getCanvasWidth() {\n\t    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\t\n\t    var i = columns.length;\n\t\n\t    canvasWidthL = canvasWidthR = 0;\n\t\n\t    while (i--) {\n\t      if (hasFrozenColumns() && i > options.frozenColumn) {\n\t        canvasWidthR += columns[i].width;\n\t      } else {\n\t        canvasWidthL += columns[i].width;\n\t      }\n\t    }\n\t\n\t    var totalRowWidth = canvasWidthL + canvasWidthR;\n\t\n\t    return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n\t  }\n\t\n\t  function updateCanvasWidth(forceColumnWidthsUpdate) {\n\t    var oldCanvasWidth = canvasWidth;\n\t    var oldCanvasWidthL = canvasWidthL;\n\t    var oldCanvasWidthR = canvasWidthR;\n\t    var widthChanged;\n\t    canvasWidth = getCanvasWidth();\n\t\n\t    widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n\t\n\t    if (widthChanged || hasFrozenColumns() || hasFrozenRows) {\n\t      $canvasTopL.width(canvasWidthL);\n\t\n\t      getHeadersWidth();\n\t\n\t      $headerL.width(headersWidthL);\n\t      $headerR.width(headersWidthR);\n\t\n\t      if (hasFrozenColumns()) {\n\t        $canvasTopR.width(canvasWidthR);\n\t\n\t        $paneHeaderL.width(canvasWidthL);\n\t        $paneHeaderR.css('left', canvasWidthL);\n\t        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\t\n\t        $paneTopL.width(canvasWidthL);\n\t        $paneTopR.css('left', canvasWidthL);\n\t        $paneTopR.css('width', viewportW - canvasWidthL);\n\t\n\t        $headerRowScrollerL.width(canvasWidthL);\n\t        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\t\n\t        $headerRowL.width(canvasWidthL);\n\t        $headerRowR.width(canvasWidthR);\n\t\n\t        $footerRowScrollerL.width(canvasWidthL);\n\t        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\t\n\t        $footerRowL.width(canvasWidthL);\n\t        $footerRowR.width(canvasWidthR);\n\t\n\t        $viewportTopL.width(canvasWidthL);\n\t        $viewportTopR.width(viewportW - canvasWidthL);\n\t\n\t        if (hasFrozenRows) {\n\t          $paneBottomL.width(canvasWidthL);\n\t          $paneBottomR.css('left', canvasWidthL);\n\t\n\t          $viewportBottomL.width(canvasWidthL);\n\t          $viewportBottomR.width(viewportW - canvasWidthL);\n\t\n\t          $canvasBottomL.width(canvasWidthL);\n\t          $canvasBottomR.width(canvasWidthR);\n\t        }\n\t      } else {\n\t        $paneHeaderL.width('100%');\n\t\n\t        $paneTopL.width('100%');\n\t\n\t        $headerRowScrollerL.width('100%');\n\t\n\t        $headerRowL.width(canvasWidth);\n\t\n\t        $footerRowScrollerL.width('100%');\n\t\n\t        $footerRowL.width(canvasWidth);\n\t\n\t        $viewportTopL.width('100%');\n\t\n\t        if (hasFrozenRows) {\n\t          $viewportBottomL.width('100%');\n\t          $canvasBottomL.width(canvasWidthL);\n\t        }\n\t      }\n\t\n\t      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n\t    }\n\t\n\t    $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\t    $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\t\n\t    $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\t    $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\t\n\t    if (widthChanged || forceColumnWidthsUpdate) {\n\t      applyColumnWidths();\n\t    }\n\t  }\n\t\n\t  function disableSelection($target) {\n\t    if ($target && $target.jquery) {\n\t      $target.attr('unselectable', 'on').css('MozUserSelect', 'none').bind('selectstart.ui', function () {\n\t        return false;\n\t      }); // from jquery:ui.core.js 1.7.2\n\t    }\n\t  }\n\t\n\t  function getMaxSupportedCssHeight() {\n\t    var supportedHeight = 1000000;\n\t    // FF reports the height back but still renders blank after ~6M px\n\t    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n\t    var div = (0, _jquery2.default)(\"<div style='display:none' />\").appendTo(document.body);\n\t\n\t    while (true) {\n\t      var test = supportedHeight * 2;\n\t      div.css('height', test);\n\t      if (test > testUpTo || div.height() !== test) {\n\t        break;\n\t      } else {\n\t        supportedHeight = test;\n\t      }\n\t    }\n\t\n\t    div.remove();\n\t    return supportedHeight;\n\t  }\n\t\n\t  // TODO:  this is static.  need to handle page mutation.\n\t  function bindAncestorScrollEvents() {\n\t    var elem = hasFrozenRows && !options.frozenBottom ? $canvasBottomL[0] : $canvasTopL[0];\n\t    while ((elem = elem.parentNode) != document.body && elem != null) {\n\t      // bind to scroll containers only\n\t      if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n\t        var $elem = (0, _jquery2.default)(elem);\n\t        if (!$boundAncestors) {\n\t          $boundAncestors = $elem;\n\t        } else {\n\t          $boundAncestors = $boundAncestors.add($elem);\n\t        }\n\t        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n\t      }\n\t    }\n\t  }\n\t\n\t  function unbindAncestorScrollEvents() {\n\t    if (!$boundAncestors) {\n\t      return;\n\t    }\n\t    $boundAncestors.unbind('scroll.' + uid);\n\t    $boundAncestors = null;\n\t  }\n\t\n\t  function updateColumnHeader(columnId, title, toolTip) {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t    var idx = getColumnIndex(columnId);\n\t    if (idx == null) {\n\t      return;\n\t    }\n\t\n\t    var columnDef = columns[idx];\n\t    var $header = $headers.children().eq(idx);\n\t    if ($header) {\n\t      if (title !== undefined) {\n\t        columns[idx].name = title;\n\t      }\n\t      if (toolTip !== undefined) {\n\t        columns[idx].toolTip = toolTip;\n\t      }\n\t\n\t      trigger(self.onBeforeHeaderCellDestroy, {\n\t        node: $header[0],\n\t        column: columnDef\n\t      });\n\t\n\t      $header.attr('title', toolTip || '').children().eq(0).html(title);\n\t\n\t      trigger(self.onHeaderCellRendered, {\n\t        node: $header[0],\n\t        column: columnDef\n\t      });\n\t    }\n\t  }\n\t\n\t  function getHeaderRow() {\n\t    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n\t  }\n\t\n\t  function getHeaderRowColumn(columnId) {\n\t    var idx = getColumnIndex(columnId);\n\t\n\t    var $headerRowTarget;\n\t\n\t    if (hasFrozenColumns()) {\n\t      if (idx <= options.frozenColumn) {\n\t        $headerRowTarget = $headerRowL;\n\t      } else {\n\t        $headerRowTarget = $headerRowR;\n\t\n\t        idx -= options.frozenColumn + 1;\n\t      }\n\t    } else {\n\t      $headerRowTarget = $headerRowL;\n\t    }\n\t\n\t    var $header = $headerRowTarget.children().eq(idx);\n\t    return $header && $header[0];\n\t  }\n\t\n\t  function getFooterRow() {\n\t    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n\t  }\n\t\n\t  function getFooterRowColumn(columnId) {\n\t    var idx = getColumnIndex(columnId);\n\t\n\t    var $footerRowTarget;\n\t\n\t    if (hasFrozenColumns()) {\n\t      if (idx <= options.frozenColumn) {\n\t        $footerRowTarget = $footerRowL;\n\t      } else {\n\t        $footerRowTarget = $footerRowR;\n\t\n\t        idx -= options.frozenColumn + 1;\n\t      }\n\t    } else {\n\t      $footerRowTarget = $footerRowL;\n\t    }\n\t\n\t    var $footer = $footerRowTarget.children().eq(idx);\n\t    return $footer && $footer[0];\n\t  }\n\t\n\t  function createColumnFooter() {\n\t    $footerRow.find('.slick-footerrow-column').each(function () {\n\t      var columnDef = (0, _jquery2.default)(this).data('column');\n\t      if (columnDef) {\n\t        trigger(self.onBeforeFooterRowCellDestroy, {\n\t          node: this,\n\t          column: columnDef\n\t        });\n\t      }\n\t    });\n\t\n\t    $footerRowL.empty();\n\t    $footerRowR.empty();\n\t\n\t    for (var i = 0; i < columns.length; i++) {\n\t      var m = columns[i];\n\t\n\t      var footerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && i > options.frozenColumn ? $footerRowR : $footerRowL);\n\t\n\t      trigger(self.onFooterRowCellRendered, {\n\t        node: footerRowCell[0],\n\t        column: m\n\t      });\n\t    }\n\t  }\n\t\n\t  function createColumnGroupHeaders() {\n\t    var columnsLength = 0;\n\t    var frozenColumnsValid = false;\n\t\n\t    if (!treeColumns.hasDepth()) return;\n\t\n\t    for (var index = 0; index < $groupHeadersL.length; index++) {\n\t      $groupHeadersL[index].empty();\n\t      $groupHeadersR[index].empty();\n\t\n\t      var groupColumns = treeColumns.getColumnsInDepth(index);\n\t\n\t      for (var indexGroup in groupColumns) {\n\t        var m = groupColumns[indexGroup];\n\t\n\t        columnsLength += m.extractColumns().length;\n\t\n\t        if (hasFrozenColumns() && index == 0 && columnsLength - 1 === options.frozenColumn) frozenColumnsValid = true;\n\t\n\t        (0, _jquery2.default)(\"<div class='ui-state-default slick-group-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + '</span>').attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').addClass(hasFrozenColumns() && columnsLength - 1 <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && columnsLength - 1 > options.frozenColumn ? $groupHeadersR[index] : $groupHeadersL[index]);\n\t      }\n\t\n\t      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid) {\n\t        $groupHeadersL[index].empty();\n\t        $groupHeadersR[index].empty();\n\t        alert('All columns of group should to be grouped!');\n\t        break;\n\t      }\n\t    }\n\t\n\t    applyColumnGroupHeaderWidths();\n\t  }\n\t\n\t  function createColumnHeaders() {\n\t    function onMouseEnter() {\n\t      (0, _jquery2.default)(this).addClass('ui-state-hover');\n\t    }\n\t\n\t    function onMouseLeave() {\n\t      (0, _jquery2.default)(this).removeClass('ui-state-hover');\n\t    }\n\t\n\t    $headers.find('.slick-header-column').each(function () {\n\t      var columnDef = (0, _jquery2.default)(this).data('column');\n\t      if (columnDef) {\n\t        trigger(self.onBeforeHeaderCellDestroy, {\n\t          node: this,\n\t          column: columnDef\n\t        });\n\t      }\n\t    });\n\t\n\t    $headerL.empty();\n\t    $headerR.empty();\n\t\n\t    getHeadersWidth();\n\t\n\t    $headerL.width(headersWidthL);\n\t    $headerR.width(headersWidthR);\n\t\n\t    $headerRow.find('.slick-headerrow-column').each(function () {\n\t      var columnDef = (0, _jquery2.default)(this).data('column');\n\t      if (columnDef) {\n\t        trigger(self.onBeforeHeaderRowCellDestroy, {\n\t          node: this,\n\t          column: columnDef\n\t        });\n\t      }\n\t    });\n\t\n\t    $headerRowL.empty();\n\t    $headerRowR.empty();\n\t\n\t    for (var i = 0; i < columns.length; i++) {\n\t      var m = columns[i];\n\t\n\t      var $headerTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerL : $headerR : $headerL;\n\t      var $headerRowTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerRowL : $headerRowR : $headerRowL;\n\t\n\t      var header = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo($headerTarget);\n\t\n\t      if (options.enableColumnReorder || m.sortable) {\n\t        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n\t      }\n\t\n\t      if (m.sortable) {\n\t        header.addClass('slick-header-sortable');\n\t        header.append(\"<span class='slick-sort-indicator' />\");\n\t      }\n\t\n\t      trigger(self.onHeaderCellRendered, {\n\t        node: header[0],\n\t        column: m\n\t      });\n\t\n\t      if (options.showHeaderRow) {\n\t        var headerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).appendTo($headerRowTarget);\n\t\n\t        trigger(self.onHeaderRowCellRendered, {\n\t          node: headerRowCell[0],\n\t          column: m\n\t        });\n\t      }\n\t    }\n\t\n\t    setSortColumns(sortColumns);\n\t    setupColumnResize();\n\t    if (options.enableColumnReorder) {\n\t      setupColumnReorder();\n\t    }\n\t  }\n\t\n\t  function setupColumnSort() {\n\t    $headers.click(function (e) {\n\t      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n\t      e.metaKey = e.metaKey || e.ctrlKey;\n\t\n\t      if ((0, _jquery2.default)(e.target).hasClass('slick-resizable-handle')) {\n\t        return;\n\t      }\n\t\n\t      var $col = (0, _jquery2.default)(e.target).closest('.slick-header-column');\n\t      if (!$col.length) {\n\t        return;\n\t      }\n\t\n\t      var column = $col.data('column');\n\t      if (column.sortable) {\n\t        if (!getEditorLock().commitCurrentEdit()) {\n\t          return;\n\t        }\n\t\n\t        var sortOpts = null;\n\t        var i = 0;\n\t        for (; i < sortColumns.length; i++) {\n\t          if (sortColumns[i].columnId == column.id) {\n\t            sortOpts = sortColumns[i];\n\t            sortOpts.sortAsc = !sortOpts.sortAsc;\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (e.metaKey && options.multiColumnSort) {\n\t          if (sortOpts) {\n\t            sortColumns.splice(i, 1);\n\t          }\n\t        } else {\n\t          if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n\t            sortColumns = [];\n\t          }\n\t\n\t          if (!sortOpts) {\n\t            sortOpts = {\n\t              columnId: column.id,\n\t              sortAsc: column.defaultSortAsc\n\t            };\n\t            sortColumns.push(sortOpts);\n\t          } else if (sortColumns.length == 0) {\n\t            sortColumns.push(sortOpts);\n\t          }\n\t        }\n\t\n\t        setSortColumns(sortColumns);\n\t\n\t        if (!options.multiColumnSort) {\n\t          trigger(self.onSort, {\n\t            multiColumnSort: false,\n\t            sortCol: column,\n\t            sortAsc: sortOpts.sortAsc\n\t          }, e);\n\t        } else {\n\t          trigger(self.onSort, {\n\t            multiColumnSort: true,\n\t            sortCols: _jquery2.default.map(sortColumns, function (col) {\n\t              return {\n\t                sortCol: columns[getColumnIndex(col.columnId)],\n\t                sortAsc: col.sortAsc\n\t              };\n\t            })\n\t          }, e);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  function currentPositionInHeader(id) {\n\t    var currentPosition = 0;\n\t    $headers.find('.slick-header-column').each(function (i) {\n\t      if (this.id == id) {\n\t        currentPosition = i;\n\t        return false;\n\t      }\n\t    });\n\t\n\t    return currentPosition;\n\t  }\n\t\n\t  function limitPositionInGroup(idColumn) {\n\t    var groupColumnOfPreviousPosition,\n\t        startLimit = 0,\n\t        endLimit = 0;\n\t\n\t    treeColumns.getColumnsInDepth($groupHeadersL.length - 1).some(function (groupColumn) {\n\t      startLimit = endLimit;\n\t      endLimit += groupColumn.columns.length;\n\t\n\t      groupColumn.columns.some(function (column) {\n\t        if (column.id === idColumn) groupColumnOfPreviousPosition = groupColumn;\n\t\n\t        return groupColumnOfPreviousPosition;\n\t      });\n\t\n\t      return groupColumnOfPreviousPosition;\n\t    });\n\t\n\t    endLimit--;\n\t\n\t    return {\n\t      start: startLimit,\n\t      end: endLimit,\n\t      group: groupColumnOfPreviousPosition\n\t    };\n\t  }\n\t\n\t  function remove(arr, elem) {\n\t    var index = arr.lastIndexOf(elem);\n\t    if (index > -1) {\n\t      arr.splice(index, 1);\n\t      remove(arr, elem);\n\t    }\n\t  }\n\t\n\t  function columnPositionValidInGroup($item) {\n\t    var currentPosition = currentPositionInHeader($item[0].id);\n\t    var limit = limitPositionInGroup($item.data('column').id);\n\t    var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\n\t\n\t    return {\n\t      limit: limit,\n\t      valid: positionValid,\n\t      message: positionValid ? '' : 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\n\t    };\n\t  }\n\t\n\t  function setupColumnReorder() {\n\t    var x = 0;\n\t    var delta = 0;\n\t    var placeholder = document.createElement('div');\n\t\n\t    placeholder.className = 'interact-placeholder';\n\t\n\t    var selector = options.frozenColumn !== -1 ? '.slick-header-right .slick-header-column' : '.slick-header-column';\n\t    (0, _interact2.default)(selector, { context: $container[0] }).ignoreFrom('.slick-resizable-handle').draggable({\n\t      inertia: true,\n\t      // keep the element within the area of it's parent\n\t      restrict: {\n\t        restriction: 'parent',\n\t        endOnly: true,\n\t        elementRect: { top: 0, left: 0, bottom: 0, right: 0 }\n\t      },\n\t      // enable autoScroll\n\t      autoScroll: true,\n\t      axis: 'x',\n\t      onstart: function onstart(event) {\n\t        x = 0;\n\t        delta = event.target.offsetWidth;\n\t\n\t        // get old order\n\t        $headers.find('.slick-header-column').each(function (index) {\n\t          (0, _jquery2.default)(this).data('index', index);\n\t        });\n\t\n\t        placeholder.style.height = event.target.offsetHeight + 'px';\n\t        placeholder.style.width = delta + 'px';\n\t\n\t        (0, _jquery2.default)(event.target).after(placeholder).css({\n\t          position: 'absolute',\n\t          zIndex: 1000,\n\t          marginLeft: (0, _jquery2.default)(event.target).position().left - 1000\n\t        });\n\t      },\n\t\n\t      onmove: function onmove(event) {\n\t        x += event.dx;\n\t        event.target.style.transform = 'translate3d(' + x + 'px, -3px, 100px)';\n\t        event.target.style.zIndex = 1000;\n\t      },\n\t\n\t      onend: function onend(event) {\n\t        x = 0;\n\t        delta = 0;\n\t\n\t        if (treeColumns.hasDepth()) {\n\t          var validPositionInGroup = columnPositionValidInGroup((0, _jquery2.default)(event.target));\n\t          var limit = validPositionInGroup.limit;\n\t\n\t          var cancel = !validPositionInGroup.valid;\n\t\n\t          if (cancel) alert(validPositionInGroup.message);\n\t        }\n\t\n\t        placeholder.parentNode.removeChild(placeholder);\n\t\n\t        if (cancel) {\n\t          event.target.style.transform = 'none';\n\t          setColumns(getColumns());\n\t          return;\n\t        }\n\t\n\t        (0, _jquery2.default)(event.target).css({\n\t          position: 'relative',\n\t          zIndex: '',\n\t          marginLeft: 0,\n\t          transform: 'none'\n\t        });\n\t\n\t        var newColumns = [];\n\t        $headers.find('.slick-header-column').each(function (index) {\n\t          newColumns.push(columns[(0, _jquery2.default)(this).data('index')]);\n\t          (0, _jquery2.default)(this).removeData('index');\n\t        });\n\t\n\t        setColumns(newColumns);\n\t\n\t        trigger(self.onColumnsReordered, {\n\t          impactedColumns: getImpactedColumns(limit),\n\t          grid: self\n\t        });\n\t        setupColumnResize();\n\t      }\n\t    }).dropzone({\n\t      accept: selector,\n\t\n\t      ondragenter: function ondragenter(event) {\n\t        event.target.classList.add('interact-drop-active');\n\t        event.relatedTarget.classList.add('interact-can-drop');\n\t      },\n\t\n\t      ondragleave: function ondragleave(event) {\n\t        event.target.classList.remove('interact-drop-active');\n\t        event.relatedTarget.classList.remove('interact-can-drop');\n\t      },\n\t\n\t      ondrop: function ondrop(event) {\n\t        event.target.classList.remove('interact-drop-active');\n\t        event.relatedTarget.classList.remove('interact-can-drop');\n\t        (0, _jquery2.default)(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n\t      }\n\t    }).styleCursor(false);\n\t  }\n\t\n\t  function getImpactedColumns(limit) {\n\t    var impactedColumns = [];\n\t\n\t    if (limit != undefined) {\n\t      for (var i = limit.start; i <= limit.end; i++) {\n\t        impactedColumns.push(columns[i]);\n\t      }\n\t    } else {\n\t      impactedColumns = columns;\n\t    }\n\t\n\t    return impactedColumns;\n\t  }\n\t\n\t  function setupColumnResize() {\n\t    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n\t    columnElements = $headers.children();\n\t    columnElements.find('.slick-resizable-handle').remove();\n\t    columnElements.each(function (i, e) {\n\t      if (columns[i].resizable) {\n\t        if (firstResizable === undefined) {\n\t          firstResizable = i;\n\t        }\n\t        lastResizable = i;\n\t      }\n\t    });\n\t    if (firstResizable === undefined) {\n\t      return;\n\t    }\n\t    columnElements.each(function (i, element) {\n\t      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n\t        return;\n\t      }\n\t      $col = (0, _jquery2.default)(element);\n\t\n\t      var $handle = (0, _jquery2.default)(\"<div class='slick-resizable-handle' />\");\n\t      $handle.appendTo(element);\n\t\n\t      if ($col.data('resizable')) return;\n\t\n\t      var activeColumn = columns[i];\n\t      if (activeColumn.resizable) {\n\t        $col.data('resizable', true);\n\t        (0, _interact2.default)(element).resizable({\n\t          preserveAspectRatio: false,\n\t          edges: { left: true, right: true, bottom: false, top: false }\n\t        }).on('resizestart', function (event) {\n\t          if (!getEditorLock().commitCurrentEdit()) {\n\t            return false;\n\t          }\n\t          activeColumn.previousWidth = event.rect.width;\n\t          event.target.classList.add('slick-header-column-active');\n\t        }).on('resizemove', function (event) {\n\t          var x = event.dx;\n\t          var width = activeColumn.width += x;\n\t\n\t          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width) width = activeColumn.minWidth;else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width) width = activeColumn.maxWidth;\n\t\n\t          activeColumn.width = width;\n\t\n\t          if (options.forceFitColumns) {\n\t            autosizeColumns();\n\t          }\n\t          applyColumnHeaderWidths();\n\t          if (options.syncColumnCellResize) {\n\t            applyColumnWidths();\n\t          }\n\t        }).on('resizeend', function (event) {\n\t          event.target.classList.remove('slick-header-column-active');\n\t          if (treeColumns.hasDepth()) createColumnGroupHeaders();\n\t\n\t          invalidateAllRows();\n\t          updateCanvasWidth(true);\n\t          render();\n\t          trigger(self.onColumnsResized, { grid: self });\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  function getVBoxDelta($el) {\n\t    var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\t    var delta = 0;\n\t    _jquery2.default.each(p, function (n, val) {\n\t      delta += parseFloat($el.css(val)) || 0;\n\t    });\n\t    return delta;\n\t  }\n\t\n\t  function setFrozenOptions() {\n\t    options.frozenColumn = options.frozenColumn >= 0 && options.frozenColumn < columns.length ? parseInt(options.frozenColumn) : -1;\n\t\n\t    options.frozenRow = options.frozenRow >= 0 && options.frozenRow < numVisibleRows ? parseInt(options.frozenRow) : -1;\n\t\n\t    if (options.frozenRow > -1) {\n\t      hasFrozenRows = true;\n\t      frozenRowsHeight = options.frozenRow * options.rowHeight;\n\t\n\t      var dataLength = getDataLength() || this.data.length;\n\t\n\t      actualFrozenRow = options.frozenBottom ? dataLength - options.frozenRow : options.frozenRow;\n\t    } else {\n\t      hasFrozenRows = false;\n\t    }\n\t  }\n\t\n\t  function setPaneVisibility() {\n\t    if (hasFrozenColumns()) {\n\t      $paneHeaderR.show();\n\t      $paneTopR.show();\n\t\n\t      if (hasFrozenRows) {\n\t        $paneBottomL.show();\n\t        $paneBottomR.show();\n\t      } else {\n\t        $paneBottomR.hide();\n\t        $paneBottomL.hide();\n\t      }\n\t    } else {\n\t      $paneHeaderR.hide();\n\t      $paneTopR.hide();\n\t      $paneBottomR.hide();\n\t\n\t      if (hasFrozenRows) {\n\t        $paneBottomL.show();\n\t      } else {\n\t        $paneBottomR.hide();\n\t        $paneBottomL.hide();\n\t      }\n\t    }\n\t  }\n\t\n\t  function setOverflow() {\n\t    $viewportTopL.css({\n\t      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n\t      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n\t    });\n\t\n\t    $viewportTopR.css({\n\t      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n\t      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'scroll' : 'auto'\n\t    });\n\t\n\t    $viewportBottomL.css({\n\t      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n\t      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n\t    });\n\t\n\t    $viewportBottomR.css({\n\t      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n\t      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'auto' : 'auto' : hasFrozenRows ? 'auto' : 'auto'\n\t    });\n\t  }\n\t\n\t  function setScroller() {\n\t    if (hasFrozenColumns()) {\n\t      $headerScrollContainer = $headerScrollerR;\n\t      $headerRowScrollContainer = $headerRowScrollerR;\n\t      $footerRowScrollContainer = $footerRowScrollerR;\n\t\n\t      if (hasFrozenRows) {\n\t        if (options.frozenBottom) {\n\t          $viewportScrollContainerX = $viewportBottomR;\n\t          $viewportScrollContainerY = $viewportTopR;\n\t        } else {\n\t          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n\t        }\n\t      } else {\n\t        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n\t      }\n\t    } else {\n\t      $headerScrollContainer = $headerScrollerL;\n\t      $headerRowScrollContainer = $headerRowScrollerL;\n\t      $footerRowScrollContainer = $footerRowScrollerL;\n\t\n\t      if (hasFrozenRows) {\n\t        if (options.frozenBottom) {\n\t          $viewportScrollContainerX = $viewportBottomL;\n\t          $viewportScrollContainerY = $viewportTopL;\n\t        } else {\n\t          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n\t        }\n\t      } else {\n\t        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n\t      }\n\t    }\n\t  }\n\t\n\t  function measureCellPaddingAndBorder() {\n\t    var el;\n\t    var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight'];\n\t    var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\t\n\t    el = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n\t    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n\t    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n\t      _jquery2.default.each(h, function (n, val) {\n\t        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n\t      });\n\t      _jquery2.default.each(v, function (n, val) {\n\t        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n\t      });\n\t    }\n\t    el.remove();\n\t\n\t    var r = (0, _jquery2.default)(\"<div class='slick-row' />\").appendTo($canvas);\n\t    el = (0, _jquery2.default)(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n\t    cellWidthDiff = cellHeightDiff = 0;\n\t    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n\t      _jquery2.default.each(h, function (n, val) {\n\t        cellWidthDiff += parseFloat(el.css(val)) || 0;\n\t      });\n\t      _jquery2.default.each(v, function (n, val) {\n\t        cellHeightDiff += parseFloat(el.css(val)) || 0;\n\t      });\n\t    }\n\t    r.remove();\n\t\n\t    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n\t  }\n\t\n\t  function createCssRules() {\n\t    $style = (0, _jquery2.default)(\"<style type='text/css' rel='stylesheet' />\").appendTo((0, _jquery2.default)('head'));\n\t    var rowHeight = options.rowHeight - cellHeightDiff;\n\t    var rules = ['.' + uid + ' .slick-group-header-column { left: 1000px; }', '.' + uid + ' .slick-header-column { left: 1000px; }', '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }', '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }', '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }', '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }', '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }'];\n\t\n\t    for (var i = 0; i < columns.length; i++) {\n\t      rules.push('.' + uid + ' .l' + i + ' { }');\n\t      rules.push('.' + uid + ' .r' + i + ' { }');\n\t    }\n\t\n\t    if ($style[0].styleSheet) {\n\t      // IE\n\t      $style[0].styleSheet.cssText = rules.join(' ');\n\t    } else {\n\t      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n\t    }\n\t  }\n\t\n\t  function getColumnCssRules(idx) {\n\t    if (!stylesheet) {\n\t      var sheets = document.styleSheets;\n\t      for (var i = 0; i < sheets.length; i++) {\n\t        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n\t          stylesheet = sheets[i];\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (!stylesheet) {\n\t        throw new Error('Cannot find stylesheet.');\n\t      }\n\t\n\t      // find and cache column CSS rules\n\t      columnCssRulesL = [];\n\t      columnCssRulesR = [];\n\t      var cssRules = stylesheet.cssRules || stylesheet.rules;\n\t      var matches, columnIdx;\n\t      for (var i = 0; i < cssRules.length; i++) {\n\t        var selector = cssRules[i].selectorText;\n\t        if (matches = /\\.l\\d+/.exec(selector)) {\n\t          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n\t          columnCssRulesL[columnIdx] = cssRules[i];\n\t        } else if (matches = /\\.r\\d+/.exec(selector)) {\n\t          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n\t          columnCssRulesR[columnIdx] = cssRules[i];\n\t        }\n\t      }\n\t    }\n\t\n\t    return {\n\t      left: columnCssRulesL[idx],\n\t      right: columnCssRulesR[idx]\n\t    };\n\t  }\n\t\n\t  function removeCssRules() {\n\t    $style.remove();\n\t    stylesheet = null;\n\t  }\n\t\n\t  function destroy() {\n\t    getEditorLock().cancelCurrentEdit();\n\t\n\t    trigger(self.onBeforeDestroy, {});\n\t\n\t    var i = plugins.length;\n\t    while (i--) {\n\t      unregisterPlugin(plugins[i]);\n\t    }\n\t\n\t    unbindAncestorScrollEvents();\n\t    $container.unbind('.slickgrid');\n\t    removeCssRules();\n\t\n\t    $container.empty().removeClass(uid);\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // General\n\t\n\t  function trigger(evt, args, e) {\n\t    e = e || new _slick2.default.EventData();\n\t    args = args || {};\n\t    args.grid = self;\n\t    return evt.notify(args, e, self);\n\t  }\n\t\n\t  function getEditorLock() {\n\t    return options.editorLock;\n\t  }\n\t\n\t  function getEditController() {\n\t    return editController;\n\t  }\n\t\n\t  function getColumnIndex(id) {\n\t    return columnsById[id];\n\t  }\n\t\n\t  function autosizeColumns() {\n\t    var i,\n\t        c,\n\t        widths = [],\n\t        shrinkLeeway = 0,\n\t        total = 0,\n\t        prevTotal,\n\t        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\t\n\t    for (i = 0; i < columns.length; i++) {\n\t      c = columns[i];\n\t      widths.push(c.width);\n\t      total += c.width;\n\t      if (c.resizable) {\n\t        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n\t      }\n\t    }\n\t\n\t    // shrink\n\t    prevTotal = total;\n\t    while (total > availWidth && shrinkLeeway) {\n\t      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n\t      for (i = 0; i < columns.length && total > availWidth; i++) {\n\t        c = columns[i];\n\t        var width = widths[i];\n\t        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n\t          continue;\n\t        }\n\t        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n\t        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n\t        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n\t        total -= shrinkSize;\n\t        shrinkLeeway -= shrinkSize;\n\t        widths[i] -= shrinkSize;\n\t      }\n\t      if (prevTotal <= total) {\n\t        // avoid infinite loop\n\t        break;\n\t      }\n\t      prevTotal = total;\n\t    }\n\t\n\t    // grow\n\t    prevTotal = total;\n\t    while (total < availWidth) {\n\t      var growProportion = availWidth / total;\n\t      for (i = 0; i < columns.length && total < availWidth; i++) {\n\t        c = columns[i];\n\t        var currentWidth = widths[i];\n\t        var growSize;\n\t\n\t        if (!c.resizable || c.maxWidth <= currentWidth) {\n\t          growSize = 0;\n\t        } else {\n\t          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n\t        }\n\t        total += growSize;\n\t        widths[i] += growSize;\n\t      }\n\t      if (prevTotal >= total) {\n\t        // avoid infinite loop\n\t        break;\n\t      }\n\t      prevTotal = total;\n\t    }\n\t\n\t    var reRender = false;\n\t    for (i = 0; i < columns.length; i++) {\n\t      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n\t        reRender = true;\n\t      }\n\t      columns[i].width = widths[i];\n\t    }\n\t\n\t    applyColumnHeaderWidths();\n\t    applyColumnGroupHeaderWidths();\n\t    updateCanvasWidth(true);\n\t    if (reRender) {\n\t      invalidateAllRows();\n\t      render();\n\t    }\n\t  }\n\t\n\t  function applyColumnGroupHeaderWidths() {\n\t    if (!treeColumns.hasDepth()) return;\n\t\n\t    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--) {\n\t      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\t\n\t      (0, _jquery2.default)().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function (i) {\n\t        var $groupHeader = (0, _jquery2.default)(this),\n\t            currentColumnIndex = 0;\n\t\n\t        $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\t\n\t        $groupHeader.children().each(function () {\n\t          var $groupHeaderColumn = (0, _jquery2.default)(this);\n\t\n\t          var m = (0, _jquery2.default)(this).data('column');\n\t\n\t          m.width = 0;\n\t\n\t          m.columns.forEach(function () {\n\t            var $headerColumn = $groupHeader.next().children(':eq(' + currentColumnIndex++ + ')');\n\t            m.width += $headerColumn.outerWidth();\n\t          });\n\t\n\t          $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n\t        });\n\t      });\n\t    }\n\t  }\n\t\n\t  function applyColumnHeaderWidths() {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t    var h;\n\t    for (var i = 0, headers = $headers.children(), ii = headers.length; i < ii; i++) {\n\t      h = (0, _jquery2.default)(headers[i]);\n\t      if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n\t        h.width(columns[i].width - headerColumnWidthDiff);\n\t      }\n\t    }\n\t\n\t    updateColumnCaches();\n\t  }\n\t\n\t  function applyColumnWidths() {\n\t    var x = 0,\n\t        w,\n\t        rule;\n\t    for (var i = 0; i < columns.length; i++) {\n\t      w = columns[i].width;\n\t\n\t      rule = getColumnCssRules(i);\n\t      rule.left.style.left = x + 'px';\n\t      rule.right.style.right = (options.frozenColumn != -1 && i > options.frozenColumn ? canvasWidthR : canvasWidthL) - x - w + 'px';\n\t\n\t      // If this column is frozen, reset the css left value since the\n\t      // column starts in a new viewport.\n\t      if (options.frozenColumn == i) {\n\t        x = 0;\n\t      } else {\n\t        x += columns[i].width;\n\t      }\n\t    }\n\t  }\n\t\n\t  function setSortColumn(columnId, ascending) {\n\t    setSortColumns([{\n\t      columnId: columnId,\n\t      sortAsc: ascending\n\t    }]);\n\t  }\n\t\n\t  function setSortColumns(cols) {\n\t    sortColumns = cols;\n\t\n\t    var headerColumnEls = $headers.children();\n\t    headerColumnEls.removeClass('slick-header-column-sorted').find('.slick-sort-indicator').removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\t\n\t    _jquery2.default.each(sortColumns, function (i, col) {\n\t      if (col.sortAsc == null) {\n\t        col.sortAsc = true;\n\t      }\n\t      var columnIndex = getColumnIndex(col.columnId);\n\t      if (columnIndex != null) {\n\t        headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.slick-sort-indicator').addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n\t      }\n\t    });\n\t  }\n\t\n\t  function getSortColumns() {\n\t    return sortColumns;\n\t  }\n\t\n\t  function handleSelectedRangesChanged(e, ranges) {\n\t    selectedRows = [];\n\t    var hash = {};\n\t    for (var i = 0; i < ranges.length; i++) {\n\t      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n\t        if (!hash[j]) {\n\t          // prevent duplicates\n\t          selectedRows.push(j);\n\t          hash[j] = {};\n\t        }\n\t        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n\t          if (canCellBeSelected(j, k)) {\n\t            hash[j][columns[k].id] = options.selectedCellCssClass;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    setCellCssStyles(options.selectedCellCssClass, hash);\n\t\n\t    trigger(self.onSelectedRowsChanged, {\n\t      rows: getSelectedRows()\n\t    }, e);\n\t  }\n\t\n\t  function getColumns() {\n\t    return columns;\n\t  }\n\t\n\t  function updateColumnCaches() {\n\t    // Pre-calculate cell boundaries.\n\t    columnPosLeft = [];\n\t    columnPosRight = [];\n\t    var x = 0;\n\t    for (var i = 0, ii = columns.length; i < ii; i++) {\n\t      columnPosLeft[i] = x;\n\t      columnPosRight[i] = x + columns[i].width;\n\t\n\t      if (options.frozenColumn == i) {\n\t        x = 0;\n\t      } else {\n\t        x += columns[i].width;\n\t      }\n\t    }\n\t  }\n\t\n\t  function setColumns(columnDefinitions) {\n\t    var _treeColumns = new _slick2.default.TreeColumns(columnDefinitions);\n\t    if (_treeColumns.hasDepth()) {\n\t      treeColumns = _treeColumns;\n\t      columns = treeColumns.extractColumns();\n\t    } else {\n\t      columns = columnDefinitions;\n\t    }\n\t\n\t    columnsById = {};\n\t    for (var i = 0; i < columns.length; i++) {\n\t      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n\t      columnsById[m.id] = i;\n\t      if (m.minWidth && m.width < m.minWidth) {\n\t        m.width = m.minWidth;\n\t      }\n\t      if (m.maxWidth && m.width > m.maxWidth) {\n\t        m.width = m.maxWidth;\n\t      }\n\t    }\n\t\n\t    updateColumnCaches();\n\t\n\t    if (initialized) {\n\t      setPaneVisibility();\n\t      setOverflow();\n\t\n\t      invalidateAllRows();\n\t      createColumnHeaders();\n\t      createColumnGroupHeaders();\n\t      createColumnFooter();\n\t      removeCssRules();\n\t      createCssRules();\n\t      resizeCanvas();\n\t      updateCanvasWidth();\n\t      applyColumnWidths();\n\t      handleScroll();\n\t    }\n\t  }\n\t\n\t  function getOptions() {\n\t    return options;\n\t  }\n\t\n\t  function setOptions(args) {\n\t    if (!getEditorLock().commitCurrentEdit()) {\n\t      return;\n\t    }\n\t\n\t    makeActiveCellNormal();\n\t\n\t    if (options.enableAddRow !== args.enableAddRow) {\n\t      invalidateRow(getDataLength());\n\t    }\n\t\n\t    options = _jquery2.default.extend(options, args);\n\t    validateAndEnforceOptions();\n\t\n\t    setFrozenOptions();\n\t    setScroller();\n\t    zombieRowNodeFromLastMouseWheelEvent = null;\n\t\n\t    // https://github.com/ddomingues/X-SlickGrid/pull/26/commits/e08d6351bd350b3c203b91dd360acc5b505caaf0\n\t    if (treeColumns.hasDepth()) setColumns(treeColumns.extractColumns());\n\t    render();\n\t  }\n\t\n\t  function validateAndEnforceOptions() {\n\t    if (options.autoHeight) {\n\t      options.leaveSpaceForNewRows = false;\n\t    }\n\t  }\n\t\n\t  function setData(newData, scrollToTop) {\n\t    data = newData;\n\t    invalidateAllRows();\n\t    updateRowCount();\n\t    if (scrollToTop) {\n\t      scrollTo(0);\n\t    }\n\t  }\n\t\n\t  function getData() {\n\t    return data;\n\t  }\n\t\n\t  function getDataLength() {\n\t    if (data.getLength) {\n\t      return data.getLength();\n\t    } else {\n\t      return data.length;\n\t    }\n\t  }\n\t\n\t  function getDataLengthIncludingAddNew() {\n\t    return getDataLength() + (options.enableAddRow ? 1 : 0);\n\t  }\n\t\n\t  function getDataItem(i) {\n\t    if (data.getItem) {\n\t      return data.getItem(i);\n\t    } else {\n\t      return data[i];\n\t    }\n\t  }\n\t\n\t  function getTopPanel() {\n\t    return $topPanel[0];\n\t  }\n\t\n\t  function setTopPanelVisibility(visible) {\n\t    if (options.showTopPanel != visible) {\n\t      options.showTopPanel = visible;\n\t      if (visible) {\n\t        $topPanelScroller.slideDown('fast', resizeCanvas);\n\t      } else {\n\t        $topPanelScroller.slideUp('fast', resizeCanvas);\n\t      }\n\t    }\n\t  }\n\t\n\t  function setHeaderRowVisibility(visible) {\n\t    if (options.showHeaderRow != visible) {\n\t      options.showHeaderRow = visible;\n\t      if (visible) {\n\t        $headerRowScroller.slideDown('fast', resizeCanvas);\n\t      } else {\n\t        $headerRowScroller.slideUp('fast', resizeCanvas);\n\t      }\n\t    }\n\t  }\n\t\n\t  function setFooterRowVisibility(visible) {\n\t    if (options.showFooterRow != visible) {\n\t      options.showFooterRow = visible;\n\t      if (visible) {\n\t        $footerRowScroller.fadeIn('fast', resizeCanvas);\n\t      } else {\n\t        $footerRowScroller.slideDown('fast', resizeCanvas);\n\t      }\n\t    }\n\t  }\n\t\n\t  function getContainerNode() {\n\t    return $container.get(0);\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Rendering / Scrolling\n\t\n\t  function getRowTop(row) {\n\t    return options.rowHeight * row - offset;\n\t  }\n\t\n\t  function getRowFromPosition(y) {\n\t    return Math.floor((y + offset) / options.rowHeight);\n\t  }\n\t\n\t  function scrollTo(y) {\n\t    y = Math.max(y, 0);\n\t    y = Math.min(y, th - $viewportScrollContainerY.height() + (viewportHasHScroll || hasFrozenColumns() ? scrollbarDimensions.height : 0));\n\t\n\t    var oldOffset = offset;\n\t\n\t    page = Math.min(n - 1, Math.floor(y / ph));\n\t    offset = Math.round(page * cj);\n\t    var newScrollTop = y - offset;\n\t\n\t    if (offset != oldOffset) {\n\t      var range = getVisibleRange(newScrollTop);\n\t      cleanupRows(range);\n\t      updateRowPositions();\n\t    }\n\t\n\t    if (prevScrollTop != newScrollTop) {\n\t      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n\t\n\t      lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\t\n\t      if (hasFrozenColumns()) {\n\t        $viewportTopL[0].scrollTop = newScrollTop;\n\t      }\n\t\n\t      if (hasFrozenRows) {\n\t        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n\t      }\n\t\n\t      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\t\n\t      trigger(self.onViewportChanged, {});\n\t    }\n\t  }\n\t\n\t  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n\t    if (value == null) {\n\t      return '';\n\t    } else {\n\t      return (value + '').replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>');\n\t    }\n\t  }\n\t\n\t  function getFormatter(row, column) {\n\t    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\t\n\t    // look up by id, then index\n\t    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\t\n\t    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n\t  }\n\t\n\t  function callFormatter(row, cell, value, m, item) {\n\t    var result;\n\t\n\t    // pass metadata to formatter\n\t    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\t    metadata = metadata && metadata.columns;\n\t\n\t    if (metadata) {\n\t      var columnData = metadata[m.id] || metadata[cell];\n\t      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n\t    } else {\n\t      result = getFormatter(row, m)(row, cell, value, m, item);\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function getEditor(row, cell) {\n\t    var column = columns[cell];\n\t    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\t    var columnMetadata = rowMetadata && rowMetadata.columns;\n\t\n\t    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n\t      return columnMetadata[column.id].editor;\n\t    }\n\t    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n\t      return columnMetadata[cell].editor;\n\t    }\n\t\n\t    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n\t  }\n\t\n\t  function getDataItemValueForColumn(item, columnDef) {\n\t    if (options.dataItemColumnValueExtractor) {\n\t      return options.dataItemColumnValueExtractor(item, columnDef);\n\t    }\n\t    return item[columnDef.field];\n\t  }\n\t\n\t  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength) {\n\t    var d = getDataItem(row);\n\t    var dataLoading = row < dataLength && !d;\n\t    var rowCss = 'slick-row' + (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n\t\n\t    if (!d) {\n\t      rowCss += ' ' + options.addNewRowCssClass;\n\t    }\n\t\n\t    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\t\n\t    if (metadata && metadata.cssClasses) {\n\t      rowCss += ' ' + metadata.cssClasses;\n\t    }\n\t\n\t    var frozenRowOffset = getFrozenRowOffset(row);\n\t\n\t    var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + (getRowTop(row) - frozenRowOffset) + \"px'>\";\n\t\n\t    stringArrayL.push(rowHtml);\n\t\n\t    if (hasFrozenColumns()) {\n\t      stringArrayR.push(rowHtml);\n\t    }\n\t\n\t    var colspan, m;\n\t    for (var i = 0, ii = columns.length; i < ii; i++) {\n\t      m = columns[i];\n\t      colspan = 1;\n\t      if (metadata && metadata.columns) {\n\t        var columnData = metadata.columns[m.id] || metadata.columns[i];\n\t        colspan = columnData && columnData.colspan || 1;\n\t        if (colspan === '*') {\n\t          colspan = ii - i;\n\t        }\n\t      }\n\t\n\t      // Do not render cells outside of the viewport.\n\t      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n\t        if (columnPosLeft[i] > range.rightPx) {\n\t          // All columns to the right are outside the range.\n\t          break;\n\t        }\n\t\n\t        if (hasFrozenColumns() && i > options.frozenColumn) {\n\t          appendCellHtml(stringArrayR, row, i, colspan, d);\n\t        } else {\n\t          appendCellHtml(stringArrayL, row, i, colspan, d);\n\t        }\n\t      } else if (hasFrozenColumns() && i <= options.frozenColumn) {\n\t        appendCellHtml(stringArrayL, row, i, colspan, d);\n\t      }\n\t\n\t      if (colspan > 1) {\n\t        i += colspan - 1;\n\t      }\n\t    }\n\t\n\t    stringArrayL.push('</div>');\n\t\n\t    if (hasFrozenColumns()) {\n\t      stringArrayR.push('</div>');\n\t    }\n\t  }\n\t\n\t  function appendCellHtml(stringArray, row, cell, colspan, item) {\n\t    var m = columns[cell];\n\t    var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n\t\n\t    if (hasFrozenColumns() && cell <= options.frozenColumn) cellCss += ' frozen';\n\t\n\t    if (row === activeRow && cell === activeCell) cellCss += ' active';\n\t\n\t    // TODO:  merge them together in the setter\n\t    for (var key in cellCssClasses) {\n\t      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n\t        cellCss += ' ' + cellCssClasses[key][row][m.id];\n\t      }\n\t    }\n\t\n\t    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\t\n\t    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n\t    if (item) {\n\t      var value = getDataItemValueForColumn(item, m);\n\t      stringArray.push(callFormatter(row, cell, value, m, item));\n\t    }\n\t\n\t    stringArray.push('</div>');\n\t\n\t    rowsCache[row].cellRenderQueue.push(cell);\n\t    rowsCache[row].cellColSpans[cell] = colspan;\n\t  }\n\t\n\t  function cleanupRows(rangeToKeep) {\n\t    for (var i in rowsCache) {\n\t      var removeFrozenRow = true;\n\t\n\t      if (hasFrozenRows && (options.frozenBottom && i >= actualFrozenRow || // Frozen bottom rows\n\t      !options.frozenBottom && i <= actualFrozenRow) // Frozen top rows\n\t      ) {\n\t          removeFrozenRow = false;\n\t        }\n\t\n\t      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom) && removeFrozenRow) {\n\t        removeRowFromCache(i);\n\t      }\n\t    }\n\t  }\n\t\n\t  function invalidate() {\n\t    updateRowCount();\n\t    invalidateAllRows();\n\t    render();\n\t  }\n\t\n\t  function invalidateAllRows() {\n\t    if (currentEditor) {\n\t      makeActiveCellNormal();\n\t    }\n\t    for (var row in rowsCache) {\n\t      removeRowFromCache(row);\n\t    }\n\t  }\n\t\n\t  function removeRowFromCache(row) {\n\t    var cacheEntry = rowsCache[row];\n\t    if (!cacheEntry) {\n\t      return;\n\t    }\n\t\n\t    if (rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] || hasFrozenColumns() && rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1]) {\n\t      cacheEntry.rowNode.hide();\n\t\n\t      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n\t    } else {\n\t      cacheEntry.rowNode.each(function () {\n\t        this.parentElement.removeChild(this);\n\t      });\n\t    }\n\t\n\t    delete rowsCache[row];\n\t    delete postProcessedRows[row];\n\t    renderedRows--;\n\t    counter_rows_removed++;\n\t  }\n\t\n\t  function invalidateRows(rows) {\n\t    var i, rl;\n\t    if (!rows || !rows.length) {\n\t      return;\n\t    }\n\t    vScrollDir = 0;\n\t    for (i = 0, rl = rows.length; i < rl; i++) {\n\t      if (currentEditor && activeRow === rows[i]) {\n\t        makeActiveCellNormal();\n\t      }\n\t      if (rowsCache[rows[i]]) {\n\t        removeRowFromCache(rows[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  function invalidateRow(row) {\n\t    invalidateRows([row]);\n\t  }\n\t\n\t  function updateCell(row, cell) {\n\t    var cellNode = getCellNode(row, cell);\n\t    if (!cellNode) {\n\t      return;\n\t    }\n\t\n\t    var m = columns[cell],\n\t        d = getDataItem(row);\n\t    if (currentEditor && activeRow === row && activeCell === cell) {\n\t      currentEditor.loadValue(d);\n\t    } else {\n\t      cellNode.innerHTML = d ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n\t      invalidatePostProcessingResults(row);\n\t    }\n\t  }\n\t\n\t  function updateRow(row) {\n\t    var cacheEntry = rowsCache[row];\n\t    if (!cacheEntry) {\n\t      return;\n\t    }\n\t\n\t    ensureCellNodesInRowsCache(row);\n\t\n\t    var d = getDataItem(row);\n\t\n\t    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n\t      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n\t        continue;\n\t      }\n\t\n\t      columnIdx = columnIdx | 0;\n\t      var m = columns[columnIdx],\n\t          node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\t\n\t      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n\t        currentEditor.loadValue(d);\n\t      } else if (d) {\n\t        node.innerHTML = callFormatter(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n\t      } else {\n\t        node.innerHTML = '';\n\t      }\n\t    }\n\t\n\t    invalidatePostProcessingResults(row);\n\t  }\n\t\n\t  function getViewportHeight() {\n\t    if (options.autoHeight) {\n\t      viewportH = options.rowHeight * getDataLengthIncludingAddNew() + (options.frozenColumn == -1 ? $headers.outerHeight() : 0);\n\t    } else {\n\t      topPanelH = options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\n\t\n\t      headerRowH = options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\n\t\n\t      footerRowH = options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\n\t\n\t      viewportH = parseFloat(_jquery2.default.css($container[0], 'height', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingTop', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingBottom', true)) - parseFloat(_jquery2.default.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - topPanelH - headerRowH - footerRowH;\n\t    }\n\t\n\t    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n\t  }\n\t\n\t  function getViewportWidth() {\n\t    viewportW = parseFloat(_jquery2.default.css($container[0], 'width', true));\n\t  }\n\t\n\t  function resizeCanvas() {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t\n\t    paneTopH = 0;\n\t    paneBottomH = 0;\n\t    viewportTopH = 0;\n\t    viewportBottomH = 0;\n\t\n\t    getViewportWidth();\n\t    getViewportHeight();\n\t\n\t    // Account for Frozen Rows\n\t    if (hasFrozenRows) {\n\t      if (options.frozenBottom) {\n\t        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\t\n\t        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n\t      } else {\n\t        paneTopH = frozenRowsHeight;\n\t        paneBottomH = viewportH - frozenRowsHeight;\n\t      }\n\t    } else {\n\t      paneTopH = viewportH;\n\t    }\n\t\n\t    // The top pane includes the top panel and the header row\n\t    paneTopH += topPanelH + headerRowH + footerRowH;\n\t\n\t    if (hasFrozenColumns() && options.autoHeight) {\n\t      paneTopH += scrollbarDimensions.height;\n\t    }\n\t\n\t    // The top viewport does not contain the top panel or header row\n\t    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\t\n\t    // dimi: when no frozen columns and too many columns, scrollbar goes off-screen as opposed to on the left pane\n\t    if (!hasFrozenColumns() && !options.autoHeight) {\n\t      viewportTopH -= scrollbarDimensions.height;\n\t    }\n\t\n\t    if (options.autoHeight) {\n\t      if (hasFrozenColumns()) {\n\t        $container.height(paneTopH + parseFloat(_jquery2.default.css($headerScrollerL[0], 'height')));\n\t      }\n\t\n\t      $paneTopL.css('position', 'relative');\n\t    }\n\t\n\t    $paneTopL.css({\n\t      top: $paneHeaderL.height(),\n\t      height: paneTopH\n\t    });\n\t\n\t    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\t\n\t    $viewportTopL.height(viewportTopH);\n\t\n\t    if (hasFrozenColumns()) {\n\t      $paneTopR.css({\n\t        top: $paneHeaderL.height(),\n\t        height: paneTopH\n\t      });\n\t\n\t      $viewportTopR.height(viewportTopH);\n\t\n\t      if (hasFrozenRows) {\n\t        $paneBottomL.css({\n\t          top: paneBottomTop,\n\t          height: paneBottomH\n\t        });\n\t\n\t        $paneBottomR.css({\n\t          top: paneBottomTop,\n\t          height: paneBottomH\n\t        });\n\t\n\t        $viewportBottomR.height(paneBottomH);\n\t      }\n\t    } else {\n\t      if (hasFrozenRows) {\n\t        $paneBottomL.css({\n\t          width: '100%',\n\t          height: paneBottomH\n\t        });\n\t\n\t        $paneBottomL.css('top', paneBottomTop);\n\t      }\n\t    }\n\t\n\t    if (hasFrozenRows) {\n\t      $viewportBottomL.height(paneBottomH);\n\t\n\t      if (options.frozenBottom) {\n\t        $canvasBottomL.height(frozenRowsHeight);\n\t\n\t        if (hasFrozenColumns()) {\n\t          $canvasBottomR.height(frozenRowsHeight);\n\t        }\n\t      } else {\n\t        $canvasTopL.height(frozenRowsHeight);\n\t\n\t        if (hasFrozenColumns()) {\n\t          $canvasTopR.height(frozenRowsHeight);\n\t        }\n\t      }\n\t    } else {\n\t      $viewportTopR.height(viewportTopH);\n\t    }\n\t\n\t    if (options.forceFitColumns) {\n\t      autosizeColumns();\n\t    }\n\t\n\t    updateRowCount();\n\t    handleScroll();\n\t    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n\t    lastRenderedScrollLeft = -1;\n\t    render();\n\t  }\n\t\n\t  function updateRowCount() {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t\n\t    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\t    var numberOfRows = 0;\n\t    var oldH = hasFrozenRows && !options.frozenBottom ? $canvasBottomL.height() : $canvasTopL.height();\n\t\n\t    if (hasFrozenRows) {\n\t      var numberOfRows = getDataLength() - options.frozenRow;\n\t    } else {\n\t      var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\t    }\n\t\n\t    var tempViewportH = $viewportScrollContainerY.height();\n\t    var oldViewportHasVScroll = viewportHasVScroll;\n\t    // with autoHeight, we do not need to accommodate the vertical scroll bar\n\t    viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > tempViewportH;\n\t\n\t    makeActiveCellNormal();\n\t\n\t    // remove the rows that are now outside of the data range\n\t    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n\t    var l = dataLengthIncludingAddNew - 1;\n\t    for (var i in rowsCache) {\n\t      if (i >= l) {\n\t        removeRowFromCache(i);\n\t      }\n\t    }\n\t\n\t    th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\n\t\n\t    if (activeCellNode && activeRow > l) {\n\t      resetActiveCell();\n\t    }\n\t\n\t    if (th < maxSupportedCssHeight) {\n\t      // just one page\n\t      h = ph = th;\n\t      n = 1;\n\t      cj = 0;\n\t    } else {\n\t      // break into pages\n\t      h = maxSupportedCssHeight;\n\t      ph = h / 100;\n\t      n = Math.floor(th / ph);\n\t      cj = (th - h) / (n - 1);\n\t    }\n\t\n\t    if (h !== oldH) {\n\t      if (hasFrozenRows && !options.frozenBottom) {\n\t        $canvasBottomL.css('height', h);\n\t\n\t        if (hasFrozenColumns()) {\n\t          $canvasBottomR.css('height', h);\n\t        }\n\t      } else {\n\t        $canvasTopL.css('height', h);\n\t        $canvasTopR.css('height', h);\n\t      }\n\t\n\t      scrollTop = $viewportScrollContainerY[0].scrollTop;\n\t    }\n\t\n\t    var oldScrollTopInRange = scrollTop + offset <= th - tempViewportH;\n\t\n\t    if (th == 0 || scrollTop == 0) {\n\t      page = offset = 0;\n\t    } else if (oldScrollTopInRange) {\n\t      // maintain virtual position\n\t      scrollTo(scrollTop + offset);\n\t    } else {\n\t      // scroll to bottom\n\t      scrollTo(th - tempViewportH);\n\t    }\n\t\n\t    if (h != oldH && options.autoHeight) {\n\t      resizeCanvas();\n\t    }\n\t\n\t    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n\t      autosizeColumns();\n\t    }\n\t    updateCanvasWidth(false);\n\t  }\n\t\n\t  function getVisibleRange(viewportTop, viewportLeft) {\n\t    if (viewportTop == null) {\n\t      viewportTop = scrollTop;\n\t    }\n\t    if (viewportLeft == null) {\n\t      viewportLeft = scrollLeft;\n\t    }\n\t\n\t    return {\n\t      top: getRowFromPosition(viewportTop),\n\t      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n\t      leftPx: viewportLeft,\n\t      rightPx: viewportLeft + viewportW\n\t    };\n\t  }\n\t\n\t  function getRenderedRange(viewportTop, viewportLeft) {\n\t    var range = getVisibleRange(viewportTop, viewportLeft);\n\t    var buffer = Math.round(viewportH / options.rowHeight);\n\t    var minBuffer = 3;\n\t\n\t    if (vScrollDir == -1) {\n\t      range.top -= buffer;\n\t      range.bottom += minBuffer;\n\t    } else if (vScrollDir == 1) {\n\t      range.top -= minBuffer;\n\t      range.bottom += buffer;\n\t    } else {\n\t      range.top -= minBuffer;\n\t      range.bottom += minBuffer;\n\t    }\n\t\n\t    range.top = Math.max(0, range.top);\n\t    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\t\n\t    range.leftPx -= viewportW;\n\t    range.rightPx += viewportW;\n\t\n\t    range.leftPx = Math.max(0, range.leftPx);\n\t    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\t\n\t    return range;\n\t  }\n\t\n\t  function ensureCellNodesInRowsCache(row) {\n\t    var cacheEntry = rowsCache[row];\n\t    if (cacheEntry) {\n\t      if (cacheEntry.cellRenderQueue.length) {\n\t        var $lastNode = cacheEntry.rowNode.children().last();\n\t        while (cacheEntry.cellRenderQueue.length) {\n\t          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\t\n\t          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n\t          $lastNode = $lastNode.prev();\n\t\n\t          // Hack to retrieve the frozen columns because\n\t          if ($lastNode.length == 0) {\n\t            $lastNode = (0, _jquery2.default)(cacheEntry.rowNode[0]).children().last();\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function cleanUpCells(range, row) {\n\t    // Ignore frozen rows\n\t    if (hasFrozenRows && (options.frozenBottom && row > actualFrozenRow || // Frozen bottom rows\n\t    row <= actualFrozenRow) // Frozen top rows\n\t    ) {\n\t        return;\n\t      }\n\t\n\t    var totalCellsRemoved = 0;\n\t    var cacheEntry = rowsCache[row];\n\t\n\t    // Remove cells outside the range.\n\t    var cellsToRemove = [];\n\t    for (var i in cacheEntry.cellNodesByColumnIdx) {\n\t      // I really hate it when people mess with Array.prototype.\n\t      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n\t        continue;\n\t      }\n\t\n\t      // This is a string, so it needs to be cast back to a number.\n\t      i = i | 0;\n\t\n\t      // Ignore frozen columns\n\t      if (i <= options.frozenColumn) {\n\t        continue;\n\t      }\n\t\n\t      var colspan = cacheEntry.cellColSpans[i];\n\t      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n\t        if (!(row == activeRow && i == activeCell)) {\n\t          cellsToRemove.push(i);\n\t        }\n\t      }\n\t    }\n\t\n\t    var cellToRemove;\n\t    while ((cellToRemove = cellsToRemove.pop()) != null) {\n\t      cacheEntry.cellNodesByColumnIdx[cellToRemove][0].parentElement.removeChild(cacheEntry.cellNodesByColumnIdx[cellToRemove][0]);\n\t      delete cacheEntry.cellColSpans[cellToRemove];\n\t      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n\t      if (postProcessedRows[row]) {\n\t        delete postProcessedRows[row][cellToRemove];\n\t      }\n\t      totalCellsRemoved++;\n\t    }\n\t  }\n\t\n\t  function cleanUpAndRenderCells(range) {\n\t    var cacheEntry;\n\t    var stringArray = [];\n\t    var processedRows = [];\n\t    var cellsAdded;\n\t    var totalCellsAdded = 0;\n\t    var colspan;\n\t\n\t    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n\t      cacheEntry = rowsCache[row];\n\t      if (!cacheEntry) {\n\t        continue;\n\t      }\n\t\n\t      // cellRenderQueue populated in renderRows() needs to be cleared first\n\t      ensureCellNodesInRowsCache(row);\n\t\n\t      cleanUpCells(range, row);\n\t\n\t      // Render missing cells.\n\t      cellsAdded = 0;\n\t\n\t      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\t      metadata = metadata && metadata.columns;\n\t\n\t      var d = getDataItem(row);\n\t\n\t      // TODO:  shorten this loop (index? heuristics? binary search?)\n\t      for (var i = 0, ii = columns.length; i < ii; i++) {\n\t        // Cells to the right are outside the range.\n\t        if (columnPosLeft[i] > range.rightPx) {\n\t          break;\n\t        }\n\t\n\t        // Already rendered.\n\t        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n\t          i += colspan > 1 ? colspan - 1 : 0;\n\t          continue;\n\t        }\n\t\n\t        colspan = 1;\n\t        if (metadata) {\n\t          var columnData = metadata[columns[i].id] || metadata[i];\n\t          colspan = columnData && columnData.colspan || 1;\n\t          if (colspan === '*') {\n\t            colspan = ii - i;\n\t          }\n\t        }\n\t\n\t        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n\t          appendCellHtml(stringArray, row, i, colspan, d);\n\t          cellsAdded++;\n\t        }\n\t\n\t        i += colspan > 1 ? colspan - 1 : 0;\n\t      }\n\t\n\t      if (cellsAdded) {\n\t        totalCellsAdded += cellsAdded;\n\t        processedRows.push(row);\n\t      }\n\t    }\n\t\n\t    if (!stringArray.length) {\n\t      return;\n\t    }\n\t\n\t    var x = document.createElement('div');\n\t    x.innerHTML = stringArray.join('');\n\t\n\t    var processedRow;\n\t    var $node;\n\t    while ((processedRow = processedRows.pop()) != null) {\n\t      cacheEntry = rowsCache[processedRow];\n\t      var columnIdx;\n\t      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n\t        $node = (0, _jquery2.default)(x).children().last();\n\t\n\t        if (hasFrozenColumns() && columnIdx > options.frozenColumn) {\n\t          (0, _jquery2.default)(cacheEntry.rowNode[1]).append($node);\n\t        } else {\n\t          (0, _jquery2.default)(cacheEntry.rowNode[0]).append($node);\n\t        }\n\t\n\t        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n\t      }\n\t    }\n\t  }\n\t\n\t  function renderRows(range) {\n\t    var stringArrayL = [],\n\t        stringArrayR = [],\n\t        rows = [],\n\t        needToReselectCell = false,\n\t        dataLength = getDataLength();\n\t\n\t    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n\t      if (rowsCache[i] || hasFrozenRows && options.frozenBottom && i == getDataLength()) {\n\t        continue;\n\t      }\n\t      renderedRows++;\n\t      rows.push(i);\n\t\n\t      // Create an entry right away so that appendRowHtml() can\n\t      // start populatating it.\n\t      rowsCache[i] = {\n\t        rowNode: null,\n\t\n\t        // ColSpans of rendered cells (by column idx).\n\t        // Can also be used for checking whether a cell has been rendered.\n\t        cellColSpans: [],\n\t\n\t        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n\t        cellNodesByColumnIdx: [],\n\t\n\t        // Column indices of cell nodes that have been rendered, but not yet indexed in\n\t        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n\t        // end of the row.\n\t        cellRenderQueue: []\n\t      };\n\t\n\t      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n\t      if (activeCellNode && activeRow === i) {\n\t        needToReselectCell = true;\n\t      }\n\t      counter_rows_rendered++;\n\t    }\n\t\n\t    if (!rows.length) {\n\t      return;\n\t    }\n\t\n\t    var x = document.createElement('div'),\n\t        xRight = document.createElement('div');\n\t\n\t    x.innerHTML = stringArrayL.join('');\n\t    xRight.innerHTML = stringArrayR.join('');\n\t\n\t    for (var i = 0, ii = rows.length; i < ii; i++) {\n\t      if (hasFrozenRows && rows[i] >= actualFrozenRow) {\n\t        if (hasFrozenColumns()) {\n\t          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasBottomR));\n\t        } else {\n\t          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL));\n\t        }\n\t      } else if (hasFrozenColumns()) {\n\t        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasTopR));\n\t      } else {\n\t        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL));\n\t      }\n\t    }\n\t\n\t    if (needToReselectCell) {\n\t      activeCellNode = getCellNode(activeRow, activeCell);\n\t    }\n\t  }\n\t\n\t  function startPostProcessing() {\n\t    if (!options.enableAsyncPostRender) {\n\t      return;\n\t    }\n\t    clearTimeout(h_postrender);\n\t    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n\t  }\n\t\n\t  function invalidatePostProcessingResults(row) {\n\t    delete postProcessedRows[row];\n\t    postProcessFromRow = Math.min(postProcessFromRow, row);\n\t    postProcessToRow = Math.max(postProcessToRow, row);\n\t    startPostProcessing();\n\t  }\n\t\n\t  function updateRowPositions() {\n\t    for (var row in rowsCache) {\n\t      rowsCache[row].rowNode.css('top', getRowTop(row) + 'px');\n\t    }\n\t  }\n\t\n\t  function render() {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t    var visible = getVisibleRange();\n\t    var rendered = getRenderedRange();\n\t\n\t    // remove rows no longer in the viewport\n\t    cleanupRows(rendered);\n\t\n\t    // add new rows & missing cells in existing rows\n\t    if (lastRenderedScrollLeft != scrollLeft) {\n\t      if (hasFrozenRows) {\n\t        var renderedFrozenRows = _jquery2.default.extend(true, {}, rendered);\n\t\n\t        if (options.frozenBottom) {\n\t          renderedFrozenRows.top = actualFrozenRow;\n\t          renderedFrozenRows.bottom = getDataLength();\n\t        } else {\n\t          renderedFrozenRows.top = 0;\n\t          renderedFrozenRows.bottom = options.frozenRow;\n\t        }\n\t\n\t        cleanUpAndRenderCells(renderedFrozenRows);\n\t      }\n\t\n\t      cleanUpAndRenderCells(rendered);\n\t    }\n\t\n\t    // render missing rows\n\t    renderRows(rendered);\n\t\n\t    // Render frozen rows\n\t    if (hasFrozenRows) {\n\t      if (options.frozenBottom) {\n\t        renderRows({\n\t          top: actualFrozenRow,\n\t          bottom: getDataLength() - 1,\n\t          leftPx: rendered.leftPx,\n\t          rightPx: rendered.rightPx\n\t        });\n\t      } else {\n\t        renderRows({\n\t          top: 0,\n\t          bottom: options.frozenRow - 1,\n\t          leftPx: rendered.leftPx,\n\t          rightPx: rendered.rightPx\n\t        });\n\t      }\n\t    }\n\t\n\t    postProcessFromRow = visible.top;\n\t    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n\t    startPostProcessing();\n\t\n\t    lastRenderedScrollTop = scrollTop;\n\t    lastRenderedScrollLeft = scrollLeft;\n\t    h_render = null;\n\t  }\n\t\n\t  function handleHeaderRowScroll() {\n\t    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n\t    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n\t      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n\t    }\n\t  }\n\t\n\t  function handleFooterRowScroll() {\n\t    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n\t    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n\t      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n\t    }\n\t  }\n\t\n\t  function handleMouseWheel(e, delta, deltaX, deltaY) {\n\t    var $rowNode = (0, _jquery2.default)(e.target).closest('.slick-row');\n\t    var rowNode = $rowNode[0];\n\t\n\t    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n\t      var $gridCanvas = $rowNode.parents('.grid-canvas');\n\t      var left = $gridCanvas.hasClass('grid-canvas-left');\n\t\n\t      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode) {\n\t        var zombieRow = zombieRowNodeFromLastMouseWheelEvent[left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1];\n\t        zombieRow.parentElement.removeChild(zombieRow);\n\t\n\t        zombieRowNodeFromLastMouseWheelEvent = null;\n\t      }\n\t\n\t      rowNodeFromLastMouseWheelEvent = rowNode;\n\t    }\n\t\n\t    scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - deltaY * options.rowHeight);\n\t    scrollLeft = $viewportScrollContainerX[0].scrollLeft + deltaX * 10;\n\t    var handled = _handleScroll(true);\n\t    if (handled) e.preventDefault();\n\t  }\n\t\n\t  function handleScroll() {\n\t    scrollTop = $viewportScrollContainerY[0].scrollTop;\n\t    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n\t    return _handleScroll(false);\n\t  }\n\t\n\t  function _handleScroll(isMouseWheel) {\n\t    var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\n\t    var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\n\t    var hasFrozenCols = hasFrozenColumns();\n\t\n\t    // Ceiling the max scroll values\n\t    if (scrollTop > maxScrollDistanceY) {\n\t      scrollTop = maxScrollDistanceY;\n\t    }\n\t    if (scrollLeft > maxScrollDistanceX) {\n\t      scrollLeft = maxScrollDistanceX;\n\t    }\n\t\n\t    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n\t    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\t\n\t    if (hScrollDist) {\n\t      prevScrollLeft = scrollLeft;\n\t\n\t      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n\t      $headerScrollContainer[0].scrollLeft = scrollLeft;\n\t      $topPanelScroller[0].scrollLeft = scrollLeft;\n\t      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n\t      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\t\n\t      if (hasFrozenCols) {\n\t        if (hasFrozenRows) {\n\t          $viewportTopR[0].scrollLeft = scrollLeft;\n\t        }\n\t      } else {\n\t        if (hasFrozenRows) {\n\t          $viewportTopL[0].scrollLeft = scrollLeft;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (vScrollDist) {\n\t      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n\t      prevScrollTop = scrollTop;\n\t\n\t      if (isMouseWheel) {\n\t        $viewportScrollContainerY[0].scrollTop = scrollTop;\n\t      }\n\t\n\t      if (hasFrozenCols) {\n\t        if (hasFrozenRows && !options.frozenBottom) {\n\t          $viewportBottomL[0].scrollTop = scrollTop;\n\t        } else {\n\t          $viewportTopL[0].scrollTop = scrollTop;\n\t        }\n\t      }\n\t\n\t      // switch virtual pages if needed\n\t      if (vScrollDist < viewportH) {\n\t        scrollTo(scrollTop + offset);\n\t      } else {\n\t        var oldOffset = offset;\n\t        if (h == viewportH) {\n\t          page = 0;\n\t        } else {\n\t          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n\t        }\n\t        offset = Math.round(page * cj);\n\t        if (oldOffset != offset) {\n\t          invalidateAllRows();\n\t        }\n\t      }\n\t    }\n\t\n\t    if (hScrollDist || vScrollDist) {\n\t      if (h_render) {\n\t        cancelAnimationFrame(h_render);\n\t      }\n\t\n\t      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n\t        if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n\t          render();\n\t        } else {\n\t          h_render = requestAnimationFrame(render);\n\t        }\n\t\n\t        trigger(self.onViewportChanged, {});\n\t      }\n\t    }\n\t\n\t    trigger(self.onScroll, {\n\t      scrollLeft: scrollLeft,\n\t      scrollTop: scrollTop\n\t    });\n\t\n\t    if (hScrollDist || vScrollDist) return true;\n\t    return false;\n\t  }\n\t\n\t  function asyncPostProcessRows() {\n\t    var dataLength = getDataLength();\n\t    while (postProcessFromRow <= postProcessToRow) {\n\t      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n\t      var cacheEntry = rowsCache[row];\n\t      if (!cacheEntry || row >= dataLength) {\n\t        continue;\n\t      }\n\t\n\t      if (!postProcessedRows[row]) {\n\t        postProcessedRows[row] = {};\n\t      }\n\t\n\t      ensureCellNodesInRowsCache(row);\n\t      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n\t        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n\t          continue;\n\t        }\n\t\n\t        columnIdx = columnIdx | 0;\n\t\n\t        var m = columns[columnIdx];\n\t        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]) {\n\t          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\t          if (node) {\n\t            m.asyncPostRender(node, row, getDataItem(row), m);\n\t          }\n\t          postProcessedRows[row][columnIdx] = true;\n\t        }\n\t      }\n\t\n\t      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n\t      return;\n\t    }\n\t  }\n\t\n\t  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n\t    var node, columnId, addedRowHash, removedRowHash;\n\t    for (var row in rowsCache) {\n\t      removedRowHash = removedHash && removedHash[row];\n\t      addedRowHash = addedHash && addedHash[row];\n\t\n\t      if (removedRowHash) {\n\t        for (columnId in removedRowHash) {\n\t          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n\t            node = getCellNode(row, getColumnIndex(columnId));\n\t            if (node) {\n\t              (0, _jquery2.default)(node).removeClass(removedRowHash[columnId]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      if (addedRowHash) {\n\t        for (columnId in addedRowHash) {\n\t          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n\t            node = getCellNode(row, getColumnIndex(columnId));\n\t            if (node) {\n\t              (0, _jquery2.default)(node).addClass(addedRowHash[columnId]);\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function addCellCssStyles(key, hash) {\n\t    if (cellCssClasses[key]) {\n\t      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n\t    }\n\t\n\t    cellCssClasses[key] = hash;\n\t    updateCellCssStylesOnRenderedRows(hash, null);\n\t\n\t    trigger(self.onCellCssStylesChanged, {\n\t      key: key,\n\t      hash: hash\n\t    });\n\t  }\n\t\n\t  function removeCellCssStyles(key) {\n\t    if (!cellCssClasses[key]) {\n\t      return;\n\t    }\n\t\n\t    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n\t    delete cellCssClasses[key];\n\t\n\t    trigger(self.onCellCssStylesChanged, {\n\t      key: key,\n\t      hash: null\n\t    });\n\t  }\n\t\n\t  function setCellCssStyles(key, hash) {\n\t    var prevHash = cellCssClasses[key];\n\t\n\t    cellCssClasses[key] = hash;\n\t    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\t\n\t    trigger(self.onCellCssStylesChanged, {\n\t      key: key,\n\t      hash: hash\n\t    });\n\t  }\n\t\n\t  function getCellCssStyles(key) {\n\t    return cellCssClasses[key];\n\t  }\n\t\n\t  function flashCell(row, cell, speed) {\n\t    speed = speed || 100;\n\t    if (rowsCache[row]) {\n\t      var toggleCellClass = function toggleCellClass(times) {\n\t        if (!times) {\n\t          return;\n\t        }\n\t        setTimeout(function () {\n\t          $cell.queue(function () {\n\t            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n\t            toggleCellClass(times - 1);\n\t          });\n\t        }, speed);\n\t      };\n\t\n\t      var $cell = (0, _jquery2.default)(getCellNode(row, cell));\n\t\n\t      toggleCellClass(4);\n\t    }\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Interactivity\n\t\n\t  function handleDragInit(e, dd) {\n\t    var cell = getCellFromEvent(e);\n\t    if (!cell || !cellExists(cell.row, cell.cell)) {\n\t      return false;\n\t    }\n\t\n\t    var retval = trigger(self.onDragInit, dd, e);\n\t    if (e.isImmediatePropagationStopped()) {\n\t      return retval;\n\t    }\n\t\n\t    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n\t    // cancel out of it\n\t    return false;\n\t  }\n\t\n\t  function handleDragStart(interactEvent) {\n\t    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n\t    var cell = getCellFromEvent(event);\n\t    if (!cell || !cellExists(cell.row, cell.cell)) {\n\t      return false;\n\t    }\n\t\n\t    var retval = trigger(self.onDragStart, interactEvent, event);\n\t    if (event.isImmediatePropagationStopped()) {\n\t      return retval;\n\t    }\n\t\n\t    return false;\n\t  }\n\t\n\t  function handleDrag(interactEvent) {\n\t    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n\t    return trigger(self.onDrag, interactEvent, event);\n\t  }\n\t\n\t  function handleDragEnd(interactEvent) {\n\t    trigger(self.onDragEnd, interactEvent, _jquery2.default.Event('mousedown'));\n\t  }\n\t\n\t  function handleKeyDown(e) {\n\t    trigger(self.onKeyDown, {\n\t      row: activeRow,\n\t      cell: activeCell\n\t    }, e);\n\t    var handled = e.isImmediatePropagationStopped();\n\t\n\t    if (!handled) {\n\t      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n\t        if (e.which == 27) {\n\t          if (!getEditorLock().isActive()) {\n\t            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n\t          }\n\t          cancelEditAndSetFocus();\n\t        } else if (e.which == 34) {\n\t          navigatePageDown();\n\t          handled = true;\n\t        } else if (e.which == 33) {\n\t          navigatePageUp();\n\t          handled = true;\n\t        } else if (e.which == 37) {\n\t          handled = navigateLeft();\n\t        } else if (e.which == 39) {\n\t          handled = navigateRight();\n\t        } else if (e.which == 38) {\n\t          handled = navigateUp();\n\t        } else if (e.which == 40) {\n\t          handled = navigateDown();\n\t        } else if (e.which == 9) {\n\t          handled = navigateNext();\n\t        } else if (e.which == 13) {\n\t          if (options.editable) {\n\t            if (currentEditor) {\n\t              // adding new row\n\t              if (activeRow === getDataLength()) {\n\t                navigateDown();\n\t              } else {\n\t                commitEditAndSetFocus();\n\t              }\n\t            } else {\n\t              if (getEditorLock().commitCurrentEdit()) {\n\t                makeActiveCellEditable();\n\t              }\n\t            }\n\t          }\n\t          handled = true;\n\t        }\n\t      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey) {\n\t        handled = navigatePrev();\n\t      }\n\t    }\n\t\n\t    if (handled) {\n\t      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n\t      e.stopPropagation();\n\t      e.preventDefault();\n\t      try {\n\t        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n\t      } catch (error) {\n\t        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n\t        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n\t      }\n\t    }\n\t  }\n\t\n\t  function handleClick(e) {\n\t    if (!currentEditor) {\n\t      // if this click resulted in some cell child node getting focus,\n\t      // don't steal it back - keyboard events will still bubble up\n\t      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n\t      if (e.target != document.activeElement || (0, _jquery2.default)(e.target).hasClass('slick-cell')) {\n\t        setFocus();\n\t      }\n\t    }\n\t\n\t    var cell = getCellFromEvent(e);\n\t    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n\t      return;\n\t    }\n\t\n\t    trigger(self.onClick, {\n\t      row: cell.row,\n\t      cell: cell.cell\n\t    }, e);\n\t    if (e.isImmediatePropagationStopped()) {\n\t      return;\n\t    }\n\t\n\t    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n\t      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n\t        scrollRowIntoView(cell.row, false);\n\t        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n\t      }\n\t    }\n\t  }\n\t\n\t  function handleContextMenu(e) {\n\t    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n\t    if ($cell.length === 0) {\n\t      return;\n\t    }\n\t\n\t    // are we editing this cell?\n\t    if (activeCellNode === $cell[0] && currentEditor !== null) {\n\t      return;\n\t    }\n\t\n\t    trigger(self.onContextMenu, {}, e);\n\t  }\n\t\n\t  function handleDblClick(e) {\n\t    var cell = getCellFromEvent(e);\n\t    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n\t      return;\n\t    }\n\t\n\t    trigger(self.onDblClick, {\n\t      row: cell.row,\n\t      cell: cell.cell\n\t    }, e);\n\t    if (e.isImmediatePropagationStopped()) {\n\t      return;\n\t    }\n\t\n\t    if (options.editable) {\n\t      gotoCell(cell.row, cell.cell, true);\n\t    }\n\t  }\n\t\n\t  function handleHeaderMouseEnter(e) {\n\t    trigger(self.onHeaderMouseEnter, {\n\t      column: (0, _jquery2.default)(this).data('column')\n\t    }, e);\n\t  }\n\t\n\t  function handleHeaderMouseLeave(e) {\n\t    trigger(self.onHeaderMouseLeave, {\n\t      column: (0, _jquery2.default)(this).data('column')\n\t    }, e);\n\t  }\n\t\n\t  function handleHeaderContextMenu(e) {\n\t    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n\t    var column = $header && $header.data('column');\n\t    trigger(self.onHeaderContextMenu, {\n\t      column: column\n\t    }, e);\n\t  }\n\t\n\t  function handleHeaderClick(e) {\n\t    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n\t    var column = $header && $header.data('column');\n\t    if (column) {\n\t      trigger(self.onHeaderClick, {\n\t        column: column\n\t      }, e);\n\t    }\n\t  }\n\t\n\t  function handleMouseEnter(e) {\n\t    trigger(self.onMouseEnter, {}, e);\n\t  }\n\t\n\t  function handleMouseLeave(e) {\n\t    trigger(self.onMouseLeave, {}, e);\n\t  }\n\t\n\t  function cellExists(row, cell) {\n\t    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n\t  }\n\t\n\t  function getCellFromPoint(x, y) {\n\t    var row = getRowFromPosition(y);\n\t    var cell = 0;\n\t\n\t    var w = 0;\n\t    for (var i = 0; i < columns.length && w < x; i++) {\n\t      w += columns[i].width;\n\t      cell++;\n\t    }\n\t\n\t    if (cell < 0) {\n\t      cell = 0;\n\t    }\n\t\n\t    return {\n\t      row: row,\n\t      cell: cell - 1\n\t    };\n\t  }\n\t\n\t  function getCellFromNode(cellNode) {\n\t    // read column number from .l<columnNumber> CSS class\n\t    var cls = /l\\d+/.exec(cellNode.className);\n\t    if (!cls) {\n\t      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n\t    }\n\t    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n\t  }\n\t\n\t  function getRowFromNode(rowNode) {\n\t    for (var row in rowsCache) {\n\t      for (var i in rowsCache[row].rowNode) {\n\t        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n\t      }\n\t    }return null;\n\t  }\n\t\n\t  function getFrozenRowOffset(row) {\n\t    var offset = hasFrozenRows ? options.frozenBottom ? row >= actualFrozenRow ? h < viewportTopH ? actualFrozenRow * options.rowHeight : h : 0 : row >= actualFrozenRow ? frozenRowsHeight : 0 : 0;\n\t\n\t    return offset;\n\t  }\n\t\n\t  function getCellFromEvent(e) {\n\t    var row, cell;\n\t    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n\t    if (!$cell.length) {\n\t      return null;\n\t    }\n\t\n\t    row = getRowFromNode($cell[0].parentNode);\n\t\n\t    if (hasFrozenRows) {\n\t      var c = $cell.parents('.grid-canvas').offset();\n\t\n\t      var rowOffset = 0;\n\t      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\t\n\t      if (isBottom) {\n\t        rowOffset = options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n\t      }\n\t\n\t      row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + (0, _jquery2.default)(document).scrollTop()).row;\n\t    }\n\t\n\t    cell = getCellFromNode($cell[0]);\n\t\n\t    if (row == null || cell == null) {\n\t      return null;\n\t    } else {\n\t      return {\n\t        row: row,\n\t        cell: cell\n\t      };\n\t    }\n\t  }\n\t\n\t  function getCellNodeBox(row, cell) {\n\t    if (!cellExists(row, cell)) {\n\t      return null;\n\t    }\n\t\n\t    var frozenRowOffset = getFrozenRowOffset(row);\n\t\n\t    var y1 = getRowTop(row) - frozenRowOffset;\n\t    var y2 = y1 + options.rowHeight - 1;\n\t    var x1 = 0;\n\t    for (var i = 0; i < cell; i++) {\n\t      x1 += columns[i].width;\n\t\n\t      if (options.frozenColumn == i) {\n\t        x1 = 0;\n\t      }\n\t    }\n\t    var x2 = x1 + columns[cell].width;\n\t\n\t    return {\n\t      top: y1,\n\t      left: x1,\n\t      bottom: y2,\n\t      right: x2\n\t    };\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Cell switching\n\t\n\t  function resetActiveCell() {\n\t    setActiveCellInternal(null, false);\n\t  }\n\t\n\t  function setFocus() {\n\t    if (tabbingDirection == -1) {\n\t      $focusSink[0].focus();\n\t    } else {\n\t      $focusSink2[0].focus();\n\t    }\n\t  }\n\t\n\t  function scrollCellIntoView(row, cell, doPaging) {\n\t    // Don't scroll to frozen cells\n\t    if (cell < options.frozenColumn) {\n\t      return;\n\t    }\n\t\n\t    if (options.frozenRow > 0 && row < actualFrozenRow) {\n\t      scrollRowIntoView(row, doPaging);\n\t    } else {\n\t      // always scroll like normal slickgrid.\n\t      scrollRowIntoView(row, doPaging);\n\t    }\n\t\n\t    var colspan = getColspan(row, cell);\n\t    var left = columnPosLeft[cell],\n\t        right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n\t        scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\t\n\t    if (left < scrollLeft) {\n\t      $viewportScrollContainerX.scrollLeft(left);\n\t      handleScroll();\n\t      render();\n\t    } else if (right > scrollRight) {\n\t      $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\n\t      handleScroll();\n\t      render();\n\t    }\n\t  }\n\t\n\t  function setActiveCellInternal(newCell, opt_editMode) {\n\t    if (activeCellNode !== null) {\n\t      makeActiveCellNormal();\n\t      (0, _jquery2.default)(activeCellNode).removeClass('active');\n\t      if (rowsCache[activeRow]) {\n\t        (0, _jquery2.default)(rowsCache[activeRow].rowNode).removeClass('active');\n\t      }\n\t    }\n\t\n\t    var activeCellChanged = activeCellNode !== newCell;\n\t    activeCellNode = newCell;\n\t\n\t    if (activeCellNode != null) {\n\t      var $activeCellNode = (0, _jquery2.default)(activeCellNode);\n\t      var $activeCellOffset = $activeCellNode.offset();\n\t\n\t      var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\n\t      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\t\n\t      if (hasFrozenRows && isBottom) {\n\t        rowOffset -= options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n\t      }\n\t\n\t      var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\n\t\n\t      activeRow = cell.row;\n\t      activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode[0]);\n\t\n\t      $activeCellNode.addClass('active');\n\t      if (rowsCache[activeRow]) {\n\t        (0, _jquery2.default)(rowsCache[activeRow].rowNode).addClass('active');\n\t      }\n\t\n\t      if (opt_editMode == null) {\n\t        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n\t      }\n\t\n\t      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n\t        clearTimeout(h_editorLoader);\n\t\n\t        if (options.asyncEditorLoading) {\n\t          h_editorLoader = setTimeout(function () {\n\t            makeActiveCellEditable();\n\t          }, options.asyncEditorLoadDelay);\n\t        } else {\n\t          makeActiveCellEditable();\n\t        }\n\t      }\n\t    } else {\n\t      activeRow = activeCell = null;\n\t    }\n\t\n\t    if (activeCellChanged) {\n\t      setTimeout(scrollActiveCellIntoView, 50);\n\t      trigger(self.onActiveCellChanged, getActiveCell());\n\t    }\n\t  }\n\t\n\t  function clearTextSelection() {\n\t    if (document.selection && document.selection.empty) {\n\t      try {\n\t        //IE fails here if selected element is not in dom\n\t        document.selection.empty();\n\t      } catch (e) {}\n\t    } else if (window.getSelection) {\n\t      var sel = window.getSelection();\n\t      if (sel && sel.removeAllRanges) {\n\t        sel.removeAllRanges();\n\t      }\n\t    }\n\t  }\n\t\n\t  function isCellPotentiallyEditable(row, cell) {\n\t    var dataLength = getDataLength();\n\t    // is the data for this row loaded?\n\t    if (row < dataLength && !getDataItem(row)) {\n\t      return false;\n\t    }\n\t\n\t    // are we in the Add New row?  can we create new from this cell?\n\t    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n\t      return false;\n\t    }\n\t\n\t    // does this cell have an editor?\n\t    if (!getEditor(row, cell)) {\n\t      return false;\n\t    }\n\t\n\t    return true;\n\t  }\n\t\n\t  function makeActiveCellNormal() {\n\t    if (!currentEditor) {\n\t      return;\n\t    }\n\t    trigger(self.onBeforeCellEditorDestroy, {\n\t      editor: currentEditor\n\t    });\n\t    currentEditor.destroy();\n\t    currentEditor = null;\n\t\n\t    if (activeCellNode) {\n\t      var d = getDataItem(activeRow);\n\t      (0, _jquery2.default)(activeCellNode).removeClass('editable invalid');\n\t      if (d) {\n\t        var column = columns[activeCell];\n\t        activeCellNode[0].innerHTML = callFormatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d);\n\t        invalidatePostProcessingResults(activeRow);\n\t      }\n\t    }\n\t\n\t    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n\t    // IE can't set focus to anything else correctly\n\t    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n\t      clearTextSelection();\n\t    }\n\t\n\t    getEditorLock().deactivate(editController);\n\t  }\n\t\n\t  function makeActiveCellEditable(editor) {\n\t    if (!activeCellNode) {\n\t      return;\n\t    }\n\t    if (!options.editable) {\n\t      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n\t    }\n\t\n\t    // cancel pending async call if there is one\n\t    clearTimeout(h_editorLoader);\n\t\n\t    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n\t      return;\n\t    }\n\t\n\t    var columnDef = columns[activeCell];\n\t    var item = getDataItem(activeRow);\n\t\n\t    if (trigger(self.onBeforeEditCell, {\n\t      row: activeRow,\n\t      cell: activeCell,\n\t      item: item,\n\t      column: columnDef\n\t    }) === false) {\n\t      setFocus();\n\t      return;\n\t    }\n\t\n\t    getEditorLock().activate(editController);\n\t    (0, _jquery2.default)(activeCellNode).addClass('editable');\n\t\n\t    // don't clear the cell if a custom editor is passed through\n\t    if (!editor) {\n\t      activeCellNode[0].innerHTML = '';\n\t    }\n\t\n\t    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n\t      grid: self,\n\t      gridPosition: absBox($container[0]),\n\t      position: absBox(activeCellNode[0]),\n\t      container: activeCellNode,\n\t      column: columnDef,\n\t      item: item || {},\n\t      commitChanges: commitEditAndSetFocus,\n\t      cancelChanges: cancelEditAndSetFocus\n\t    });\n\t\n\t    if (item) {\n\t      currentEditor.loadValue(item);\n\t    }\n\t\n\t    serializedEditorValue = currentEditor.serializeValue();\n\t\n\t    if (currentEditor.position) {\n\t      handleActiveCellPositionChange();\n\t    }\n\t  }\n\t\n\t  function commitEditAndSetFocus() {\n\t    // if the commit fails, it would do so due to a validation error\n\t    // if so, do not steal the focus from the editor\n\t    if (getEditorLock().commitCurrentEdit()) {\n\t      setFocus();\n\t      if (options.autoEdit) {\n\t        navigateDown();\n\t      }\n\t    }\n\t  }\n\t\n\t  function cancelEditAndSetFocus() {\n\t    if (getEditorLock().cancelCurrentEdit()) {\n\t      setFocus();\n\t    }\n\t  }\n\t\n\t  function absBox(elem) {\n\t    var box = {\n\t      top: elem.offsetTop,\n\t      left: elem.offsetLeft,\n\t      bottom: 0,\n\t      right: 0,\n\t      width: (0, _jquery2.default)(elem).outerWidth(),\n\t      height: (0, _jquery2.default)(elem).outerHeight(),\n\t      visible: true\n\t    };\n\t    box.bottom = box.top + box.height;\n\t    box.right = box.left + box.width;\n\t\n\t    // walk up the tree\n\t    var offsetParent = elem.offsetParent;\n\t    while ((elem = elem.parentNode) != document.body) {\n\t      if (box.visible && elem.scrollHeight != elem.offsetHeight && (0, _jquery2.default)(elem).css('overflowY') != 'visible') {\n\t        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n\t      }\n\t\n\t      if (box.visible && elem.scrollWidth != elem.offsetWidth && (0, _jquery2.default)(elem).css('overflowX') != 'visible') {\n\t        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n\t      }\n\t\n\t      box.left -= elem.scrollLeft;\n\t      box.top -= elem.scrollTop;\n\t\n\t      if (elem === offsetParent) {\n\t        box.left += elem.offsetLeft;\n\t        box.top += elem.offsetTop;\n\t        offsetParent = elem.offsetParent;\n\t      }\n\t\n\t      box.bottom = box.top + box.height;\n\t      box.right = box.left + box.width;\n\t    }\n\t\n\t    return box;\n\t  }\n\t\n\t  function getActiveCellPosition() {\n\t    return absBox(activeCellNode[0]);\n\t  }\n\t\n\t  function getGridPosition() {\n\t    return absBox($container[0]);\n\t  }\n\t\n\t  function handleActiveCellPositionChange() {\n\t    if (!activeCellNode) {\n\t      return;\n\t    }\n\t\n\t    trigger(self.onActiveCellPositionChanged, {});\n\t\n\t    if (currentEditor) {\n\t      var cellBox = getActiveCellPosition();\n\t      if (currentEditor.show && currentEditor.hide) {\n\t        if (!cellBox.visible) {\n\t          currentEditor.hide();\n\t        } else {\n\t          currentEditor.show();\n\t        }\n\t      }\n\t\n\t      if (currentEditor.position) {\n\t        currentEditor.position(cellBox);\n\t      }\n\t    }\n\t  }\n\t\n\t  function getCellEditor() {\n\t    return currentEditor;\n\t  }\n\t\n\t  function getActiveCell() {\n\t    if (!activeCellNode) {\n\t      return null;\n\t    } else {\n\t      return {\n\t        row: activeRow,\n\t        cell: activeCell\n\t      };\n\t    }\n\t  }\n\t\n\t  function getActiveCellNode() {\n\t    return activeCellNode;\n\t  }\n\t\n\t  function scrollActiveCellIntoView() {\n\t    if (activeRow != null && activeCell != null) {\n\t      scrollCellIntoView(activeRow, activeCell);\n\t    }\n\t  }\n\t\n\t  function scrollRowIntoView(row, doPaging) {\n\t    if (!hasFrozenRows || !options.frozenBottom && row > actualFrozenRow - 1 || options.frozenBottom && row < actualFrozenRow - 1) {\n\t      var viewportScrollH = $viewportScrollContainerY.height();\n\t\n\t      var rowAtTop = row * options.rowHeight;\n\t      var rowAtBottom = (row + 1) * options.rowHeight - viewportScrollH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\t\n\t      // need to page down?\n\t      if ((row + 1) * options.rowHeight > scrollTop + viewportScrollH + offset) {\n\t        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n\t        render();\n\t      }\n\t      // or page up?\n\t      else if (row * options.rowHeight < scrollTop + offset) {\n\t          scrollTo(doPaging ? rowAtBottom : rowAtTop);\n\t          render();\n\t        }\n\t    }\n\t  }\n\t\n\t  function scrollRowToTop(row) {\n\t    scrollTo(row * options.rowHeight);\n\t    render();\n\t  }\n\t\n\t  function scrollPage(dir) {\n\t    var deltaRows = dir * numVisibleRows;\n\t    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n\t    render();\n\t\n\t    if (options.enableCellNavigation && activeRow != null) {\n\t      var row = activeRow + deltaRows;\n\t      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\t      if (row >= dataLengthIncludingAddNew) {\n\t        row = dataLengthIncludingAddNew - 1;\n\t      }\n\t      if (row < 0) {\n\t        row = 0;\n\t      }\n\t\n\t      var cell = 0,\n\t          prevCell = null;\n\t      var prevActivePosX = activePosX;\n\t      while (cell <= activePosX) {\n\t        if (canCellBeActive(row, cell)) {\n\t          prevCell = cell;\n\t        }\n\t        cell += getColspan(row, cell);\n\t      }\n\t\n\t      if (prevCell !== null) {\n\t        setActiveCellInternal(getCellNode(row, prevCell));\n\t        activePosX = prevActivePosX;\n\t      } else {\n\t        resetActiveCell();\n\t      }\n\t    }\n\t  }\n\t\n\t  function navigatePageDown() {\n\t    scrollPage(1);\n\t  }\n\t\n\t  function navigatePageUp() {\n\t    scrollPage(-1);\n\t  }\n\t\n\t  function getColspan(row, cell) {\n\t    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\t    if (!metadata || !metadata.columns) {\n\t      return 1;\n\t    }\n\t\n\t    var columnData = columns[cell] && (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n\t    var colspan = columnData && columnData.colspan;\n\t    if (colspan === '*') {\n\t      colspan = columns.length - cell;\n\t    } else {\n\t      colspan = colspan || 1;\n\t    }\n\t\n\t    return colspan;\n\t  }\n\t\n\t  function findFirstFocusableCell(row) {\n\t    var cell = 0;\n\t    while (cell < columns.length) {\n\t      if (canCellBeActive(row, cell)) {\n\t        return cell;\n\t      }\n\t      cell += getColspan(row, cell);\n\t    }\n\t    return null;\n\t  }\n\t\n\t  function findLastFocusableCell(row) {\n\t    var cell = 0;\n\t    var lastFocusableCell = null;\n\t    while (cell < columns.length) {\n\t      if (canCellBeActive(row, cell)) {\n\t        lastFocusableCell = cell;\n\t      }\n\t      cell += getColspan(row, cell);\n\t    }\n\t    return lastFocusableCell;\n\t  }\n\t\n\t  function gotoRight(row, cell, posX) {\n\t    if (cell >= columns.length) {\n\t      return null;\n\t    }\n\t\n\t    do {\n\t      cell += getColspan(row, cell);\n\t    } while (cell < columns.length && !canCellBeActive(row, cell));\n\t\n\t    if (cell < columns.length) {\n\t      return {\n\t        row: row,\n\t        cell: cell,\n\t        posX: cell\n\t      };\n\t    }\n\t    return null;\n\t  }\n\t\n\t  function gotoLeft(row, cell, posX) {\n\t    if (cell <= 0) {\n\t      return null;\n\t    }\n\t\n\t    var firstFocusableCell = findFirstFocusableCell(row);\n\t    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n\t      return null;\n\t    }\n\t\n\t    var prev = {\n\t      row: row,\n\t      cell: firstFocusableCell,\n\t      posX: firstFocusableCell\n\t    };\n\t    var pos;\n\t    while (true) {\n\t      pos = gotoRight(prev.row, prev.cell, prev.posX);\n\t      if (!pos) {\n\t        return null;\n\t      }\n\t      if (pos.cell >= cell) {\n\t        return prev;\n\t      }\n\t      prev = pos;\n\t    }\n\t  }\n\t\n\t  function gotoDown(row, cell, posX) {\n\t    var prevCell;\n\t    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\t    while (true) {\n\t      if (++row >= dataLengthIncludingAddNew) {\n\t        return null;\n\t      }\n\t\n\t      prevCell = cell = 0;\n\t      while (cell <= posX) {\n\t        prevCell = cell;\n\t        cell += getColspan(row, cell);\n\t      }\n\t\n\t      if (canCellBeActive(row, prevCell)) {\n\t        return {\n\t          row: row,\n\t          cell: prevCell,\n\t          posX: posX\n\t        };\n\t      }\n\t    }\n\t  }\n\t\n\t  function gotoUp(row, cell, posX) {\n\t    var prevCell;\n\t    while (true) {\n\t      if (--row < 0) {\n\t        return null;\n\t      }\n\t\n\t      prevCell = cell = 0;\n\t      while (cell <= posX) {\n\t        prevCell = cell;\n\t        cell += getColspan(row, cell);\n\t      }\n\t\n\t      if (canCellBeActive(row, prevCell)) {\n\t        return {\n\t          row: row,\n\t          cell: prevCell,\n\t          posX: posX\n\t        };\n\t      }\n\t    }\n\t  }\n\t\n\t  function gotoNext(row, cell, posX) {\n\t    if (row == null && cell == null) {\n\t      row = cell = posX = 0;\n\t      if (canCellBeActive(row, cell)) {\n\t        return {\n\t          row: row,\n\t          cell: cell,\n\t          posX: cell\n\t        };\n\t      }\n\t    }\n\t\n\t    var pos = gotoRight(row, cell, posX);\n\t    if (pos) {\n\t      return pos;\n\t    }\n\t\n\t    var firstFocusableCell = null;\n\t    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n\t    while (++row < dataLengthIncludingAddNew) {\n\t      firstFocusableCell = findFirstFocusableCell(row);\n\t      if (firstFocusableCell !== null) {\n\t        return {\n\t          row: row,\n\t          cell: firstFocusableCell,\n\t          posX: firstFocusableCell\n\t        };\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t\n\t  function gotoPrev(row, cell, posX) {\n\t    if (row == null && cell == null) {\n\t      row = getDataLengthIncludingAddNew() - 1;\n\t      cell = posX = columns.length - 1;\n\t      if (canCellBeActive(row, cell)) {\n\t        return {\n\t          row: row,\n\t          cell: cell,\n\t          posX: cell\n\t        };\n\t      }\n\t    }\n\t\n\t    var pos;\n\t    var lastSelectableCell;\n\t    while (!pos) {\n\t      pos = gotoLeft(row, cell, posX);\n\t      if (pos) {\n\t        break;\n\t      }\n\t      if (--row < 0) {\n\t        return null;\n\t      }\n\t\n\t      cell = 0;\n\t      lastSelectableCell = findLastFocusableCell(row);\n\t      if (lastSelectableCell !== null) {\n\t        pos = {\n\t          row: row,\n\t          cell: lastSelectableCell,\n\t          posX: lastSelectableCell\n\t        };\n\t      }\n\t    }\n\t    return pos;\n\t  }\n\t\n\t  function navigateRight() {\n\t    return navigate('right');\n\t  }\n\t\n\t  function navigateLeft() {\n\t    return navigate('left');\n\t  }\n\t\n\t  function navigateDown() {\n\t    return navigate('down');\n\t  }\n\t\n\t  function navigateUp() {\n\t    return navigate('up');\n\t  }\n\t\n\t  function navigateNext() {\n\t    return navigate('next');\n\t  }\n\t\n\t  function navigatePrev() {\n\t    return navigate('prev');\n\t  }\n\t\n\t  /**\n\t   * @param {string} dir Navigation direction.\n\t   * @return {boolean} Whether navigation resulted in a change of active cell.\n\t   */\n\t  function navigate(dir) {\n\t    if (!options.enableCellNavigation) {\n\t      return false;\n\t    }\n\t\n\t    if (!activeCellNode && dir != 'prev' && dir != 'next') {\n\t      return false;\n\t    }\n\t\n\t    if (!getEditorLock().commitCurrentEdit()) {\n\t      return true;\n\t    }\n\t    setFocus();\n\t\n\t    var tabbingDirections = {\n\t      up: -1,\n\t      down: 1,\n\t      left: -1,\n\t      right: 1,\n\t      prev: -1,\n\t      next: 1\n\t    };\n\t    tabbingDirection = tabbingDirections[dir];\n\t\n\t    var stepFunctions = {\n\t      up: gotoUp,\n\t      down: gotoDown,\n\t      left: gotoLeft,\n\t      right: gotoRight,\n\t      prev: gotoPrev,\n\t      next: gotoNext\n\t    };\n\t    var stepFn = stepFunctions[dir];\n\t    var pos = stepFn(activeRow, activeCell, activePosX);\n\t    if (pos) {\n\t      if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()) {\n\t        return;\n\t      }\n\t\n\t      var isAddNewRow = pos.row == getDataLength();\n\t\n\t      if (!options.frozenBottom && pos.row >= actualFrozenRow || options.frozenBottom && pos.row < actualFrozenRow) {\n\t        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n\t      }\n\t\n\t      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n\t      activePosX = pos.posX;\n\t      return true;\n\t    } else {\n\t      setActiveCellInternal(getCellNode(activeRow, activeCell));\n\t      return false;\n\t    }\n\t  }\n\t\n\t  function getCellNode(row, cell) {\n\t    if (rowsCache[row]) {\n\t      ensureCellNodesInRowsCache(row);\n\t      return rowsCache[row].cellNodesByColumnIdx[cell];\n\t    }\n\t    return null;\n\t  }\n\t\n\t  function setActiveCell(row, cell) {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n\t      return;\n\t    }\n\t\n\t    if (!options.enableCellNavigation) {\n\t      return;\n\t    }\n\t\n\t    scrollCellIntoView(row, cell, false);\n\t    setActiveCellInternal(getCellNode(row, cell), false);\n\t  }\n\t\n\t  function canCellBeActive(row, cell) {\n\t    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n\t      return false;\n\t    }\n\t\n\t    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\t    if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n\t      return rowMetadata.focusable;\n\t    }\n\t\n\t    var columnMetadata = rowMetadata && rowMetadata.columns;\n\t    if (columnMetadata && columns[cell] && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n\t      return columnMetadata[columns[cell].id].focusable;\n\t    }\n\t    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n\t      return columnMetadata[cell].focusable;\n\t    }\n\t\n\t    return columns[cell] && columns[cell].focusable;\n\t  }\n\t\n\t  function canCellBeSelected(row, cell) {\n\t    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n\t      return false;\n\t    }\n\t\n\t    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\t    if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n\t      return rowMetadata.selectable;\n\t    }\n\t\n\t    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n\t    if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n\t      return columnMetadata.selectable;\n\t    }\n\t\n\t    return columns[cell].selectable;\n\t  }\n\t\n\t  function gotoCell(row, cell, forceEdit) {\n\t    if (!initialized) {\n\t      return;\n\t    }\n\t    if (!canCellBeActive(row, cell)) {\n\t      return;\n\t    }\n\t\n\t    if (!getEditorLock().commitCurrentEdit()) {\n\t      return;\n\t    }\n\t\n\t    scrollCellIntoView(row, cell, false);\n\t\n\t    var newCell = getCellNode(row, cell);\n\t\n\t    // if selecting the 'add new' row, start editing right away\n\t    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n\t\n\t    // if no editor was created, set the focus back on the grid\n\t    if (!currentEditor) {\n\t      setFocus();\n\t    }\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // IEditor implementation for the editor lock\n\t\n\t  function commitCurrentEdit() {\n\t    var item = getDataItem(activeRow);\n\t    var column = columns[activeCell];\n\t\n\t    if (currentEditor) {\n\t      if (currentEditor.isValueChanged()) {\n\t        var validationResults = currentEditor.validate();\n\t\n\t        if (validationResults.valid) {\n\t          if (activeRow < getDataLength()) {\n\t            var editCommand = {\n\t              row: activeRow,\n\t              cell: activeCell,\n\t              editor: currentEditor,\n\t              serializedValue: currentEditor.serializeValue(),\n\t              prevSerializedValue: serializedEditorValue,\n\t              execute: function execute() {\n\t                this.editor.applyValue(item, this.serializedValue);\n\t                updateRow(this.row);\n\t                trigger(self.onCellChange, {\n\t                  row: activeRow,\n\t                  cell: activeCell,\n\t                  item: item\n\t                });\n\t              },\n\t              undo: function undo() {\n\t                this.editor.applyValue(item, this.prevSerializedValue);\n\t                updateRow(this.row);\n\t                trigger(self.onCellChange, {\n\t                  row: activeRow,\n\t                  cell: activeCell,\n\t                  item: item\n\t                });\n\t              }\n\t            };\n\t\n\t            if (options.editCommandHandler) {\n\t              makeActiveCellNormal();\n\t              options.editCommandHandler(item, column, editCommand);\n\t            } else {\n\t              editCommand.execute();\n\t              makeActiveCellNormal();\n\t            }\n\t          } else {\n\t            var newItem = {};\n\t            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n\t            makeActiveCellNormal();\n\t            trigger(self.onAddNewRow, {\n\t              item: newItem,\n\t              column: column\n\t            });\n\t          }\n\t\n\t          // check whether the lock has been re-acquired by event handlers\n\t          return !getEditorLock().isActive();\n\t        } else {\n\t          // Re-add the CSS class to trigger transitions, if any.\n\t          (0, _jquery2.default)(activeCellNode).removeClass('invalid');\n\t          (0, _jquery2.default)(activeCellNode).width(); // force layout\n\t          (0, _jquery2.default)(activeCellNode).addClass('invalid');\n\t\n\t          trigger(self.onValidationError, {\n\t            editor: currentEditor,\n\t            cellNode: activeCellNode,\n\t            validationResults: validationResults,\n\t            row: activeRow,\n\t            cell: activeCell,\n\t            column: column\n\t          });\n\t\n\t          currentEditor.focus();\n\t          return false;\n\t        }\n\t      }\n\t\n\t      makeActiveCellNormal();\n\t    }\n\t    return true;\n\t  }\n\t\n\t  function cancelCurrentEdit() {\n\t    makeActiveCellNormal();\n\t    return true;\n\t  }\n\t\n\t  function rowsToRanges(rows) {\n\t    var ranges = [];\n\t    var lastCell = columns.length - 1;\n\t    for (var i = 0; i < rows.length; i++) {\n\t      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n\t    }\n\t    return ranges;\n\t  }\n\t\n\t  function getSelectedRows() {\n\t    if (!selectionModel) {\n\t      throw 'Selection model is not set';\n\t    }\n\t    return selectedRows;\n\t  }\n\t\n\t  function setSelectedRows(rows) {\n\t    if (!selectionModel) {\n\t      throw 'Selection model is not set';\n\t    }\n\t    selectionModel.setSelectedRanges(rowsToRanges(rows));\n\t  }\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Debug\n\t\n\t  this.debug = function () {\n\t    var s = '';\n\t\n\t    s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n\t    s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n\t    s += '\\n' + 'renderedRows:  ' + renderedRows;\n\t    s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n\t    s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n\t    s += '\\n' + 'n(umber of pages):  ' + n;\n\t    s += '\\n' + '(current) page:  ' + page;\n\t    s += '\\n' + 'page height (ph):  ' + ph;\n\t    s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n\t\n\t    alert(s);\n\t  };\n\t\n\t  // a debug helper to be able to access private members\n\t  this.eval = function (expr) {\n\t    return eval(expr);\n\t  };\n\t\n\t  //////////////////////////////////////////////////////////////////////////////////////////////\n\t  // Public API\n\t\n\t  _jquery2.default.extend(this, {\n\t    slickGridVersion: '2.1',\n\t\n\t    // Events\n\t    onScroll: new _slick2.default.Event(),\n\t    onSort: new _slick2.default.Event(),\n\t    onHeaderMouseEnter: new _slick2.default.Event(),\n\t    onHeaderMouseLeave: new _slick2.default.Event(),\n\t    onHeaderContextMenu: new _slick2.default.Event(),\n\t    onHeaderClick: new _slick2.default.Event(),\n\t    onHeaderCellRendered: new _slick2.default.Event(),\n\t    onBeforeHeaderCellDestroy: new _slick2.default.Event(),\n\t    onHeaderRowCellRendered: new _slick2.default.Event(),\n\t    onFooterRowCellRendered: new _slick2.default.Event(),\n\t    onBeforeHeaderRowCellDestroy: new _slick2.default.Event(),\n\t    onBeforeFooterRowCellDestroy: new _slick2.default.Event(),\n\t    onMouseEnter: new _slick2.default.Event(),\n\t    onMouseLeave: new _slick2.default.Event(),\n\t    onClick: new _slick2.default.Event(),\n\t    onDblClick: new _slick2.default.Event(),\n\t    onContextMenu: new _slick2.default.Event(),\n\t    onKeyDown: new _slick2.default.Event(),\n\t    onAddNewRow: new _slick2.default.Event(),\n\t    onValidationError: new _slick2.default.Event(),\n\t    onViewportChanged: new _slick2.default.Event(),\n\t    onColumnsReordered: new _slick2.default.Event(),\n\t    onColumnsResized: new _slick2.default.Event(),\n\t    onCellChange: new _slick2.default.Event(),\n\t    onBeforeEditCell: new _slick2.default.Event(),\n\t    onBeforeCellEditorDestroy: new _slick2.default.Event(),\n\t    onBeforeDestroy: new _slick2.default.Event(),\n\t    onActiveCellChanged: new _slick2.default.Event(),\n\t    onActiveCellPositionChanged: new _slick2.default.Event(),\n\t    onDragInit: new _slick2.default.Event(),\n\t    onDragStart: new _slick2.default.Event(),\n\t    onDrag: new _slick2.default.Event(),\n\t    onDragEnd: new _slick2.default.Event(),\n\t    onSelectedRowsChanged: new _slick2.default.Event(),\n\t    onCellCssStylesChanged: new _slick2.default.Event(),\n\t\n\t    // Methods\n\t    registerPlugin: registerPlugin,\n\t    unregisterPlugin: unregisterPlugin,\n\t    getColumns: getColumns,\n\t    setColumns: setColumns,\n\t    getColumnIndex: getColumnIndex,\n\t    updateColumnHeader: updateColumnHeader,\n\t    setSortColumn: setSortColumn,\n\t    setSortColumns: setSortColumns,\n\t    getSortColumns: getSortColumns,\n\t    autosizeColumns: autosizeColumns,\n\t    getOptions: getOptions,\n\t    setOptions: setOptions,\n\t    getData: getData,\n\t    getDataLength: getDataLength,\n\t    getDataItem: getDataItem,\n\t    setData: setData,\n\t    getSelectionModel: getSelectionModel,\n\t    setSelectionModel: setSelectionModel,\n\t    getSelectedRows: getSelectedRows,\n\t    setSelectedRows: setSelectedRows,\n\t    getContainerNode: getContainerNode,\n\t\n\t    render: render,\n\t    invalidate: invalidate,\n\t    invalidateRow: invalidateRow,\n\t    invalidateRows: invalidateRows,\n\t    invalidateAllRows: invalidateAllRows,\n\t    updateCell: updateCell,\n\t    updateRow: updateRow,\n\t    getViewport: getVisibleRange,\n\t    getRenderedRange: getRenderedRange,\n\t    resizeCanvas: resizeCanvas,\n\t    updateRowCount: updateRowCount,\n\t    scrollRowIntoView: scrollRowIntoView,\n\t    scrollRowToTop: scrollRowToTop,\n\t    scrollCellIntoView: scrollCellIntoView,\n\t    getCanvasNode: getCanvasNode,\n\t    getCanvases: getCanvases,\n\t    getActiveCanvasNode: getActiveCanvasNode,\n\t    setActiveCanvasNode: setActiveCanvasNode,\n\t    getViewportNode: getViewportNode,\n\t    getActiveViewportNode: getActiveViewportNode,\n\t    setActiveViewportNode: setActiveViewportNode,\n\t    focus: setFocus,\n\t\n\t    getCellFromPoint: getCellFromPoint,\n\t    getCellFromEvent: getCellFromEvent,\n\t    getActiveCell: getActiveCell,\n\t    setActiveCell: setActiveCell,\n\t    getActiveCellNode: getActiveCellNode,\n\t    getActiveCellPosition: getActiveCellPosition,\n\t    resetActiveCell: resetActiveCell,\n\t    editActiveCell: makeActiveCellEditable,\n\t    getCellEditor: getCellEditor,\n\t    getCellNode: getCellNode,\n\t    getCellNodeBox: getCellNodeBox,\n\t    canCellBeSelected: canCellBeSelected,\n\t    canCellBeActive: canCellBeActive,\n\t    navigatePrev: navigatePrev,\n\t    navigateNext: navigateNext,\n\t    navigateUp: navigateUp,\n\t    navigateDown: navigateDown,\n\t    navigateLeft: navigateLeft,\n\t    navigateRight: navigateRight,\n\t    navigatePageUp: navigatePageUp,\n\t    navigatePageDown: navigatePageDown,\n\t    gotoCell: gotoCell,\n\t    getTopPanel: getTopPanel,\n\t    setTopPanelVisibility: setTopPanelVisibility,\n\t    setHeaderRowVisibility: setHeaderRowVisibility,\n\t    getHeaderRow: getHeaderRow,\n\t    getHeaderRowColumn: getHeaderRowColumn,\n\t    setFooterRowVisibility: setFooterRowVisibility,\n\t    getFooterRow: getFooterRow,\n\t    getFooterRowColumn: getFooterRowColumn,\n\t    getGridPosition: getGridPosition,\n\t    flashCell: flashCell,\n\t    addCellCssStyles: addCellCssStyles,\n\t    setCellCssStyles: setCellCssStyles,\n\t    removeCellCssStyles: removeCellCssStyles,\n\t    getCellCssStyles: getCellCssStyles,\n\t    getFrozenRowOffset: getFrozenRowOffset,\n\t\n\t    init: finishInitialization,\n\t    destroy: destroy,\n\t\n\t    // IEditor implementation\n\t    getEditorLock: getEditorLock,\n\t    getEditController: getEditController\n\t  });\n\t\n\t  init();\n\t}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// frozen.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b4d968a9885b53a17df8","/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\nconst Slick = {\n  Event: Event,\n  EventData: EventData,\n  EventHandler: EventHandler,\n  Range: Range,\n  NonDataRow: NonDataItem,\n  Group: Group,\n  GroupTotals: GroupTotals,\n  EditorLock: EditorLock,\n  /** *\n   * A global singleton editor lock.\n   * @class GlobalEditorLock\n   * @static\n   * @constructor\n   */\n  GlobalEditorLock: new EditorLock(),\n  TreeColumns: TreeColumns,\n\n  keyCode: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    INSERT: 45,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    RIGHT: 39,\n    TAB: 9,\n    UP: 38,\n    SPACE: 32\n  }\n};\n\nexport default Slick;\n\n/***\n * An event object for passing data to event handlers and letting them control propagation.\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n * @class EventData\n * @constructor\n */\nfunction EventData() {\n  var isPropagationStopped = false;\n  var isImmediatePropagationStopped = false;\n\n  /***\n   * Stops event from propagating up the DOM tree.\n   * @method stopPropagation\n   */\n  this.stopPropagation = function() {\n    isPropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopPropagation was called on this event object.\n   * @method isPropagationStopped\n   * @return {Boolean}\n   */\n  this.isPropagationStopped = function() {\n    return isPropagationStopped;\n  };\n\n  /***\n   * Prevents the rest of the handlers from being executed.\n   * @method stopImmediatePropagation\n   */\n  this.stopImmediatePropagation = function() {\n    isImmediatePropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopImmediatePropagation was called on this event object.\\\n   * @method isImmediatePropagationStopped\n   * @return {Boolean}\n   */\n  this.isImmediatePropagationStopped = function() {\n    return isImmediatePropagationStopped;\n  };\n}\n\n/***\n * A simple publisher-subscriber implementation.\n * @class Event\n * @constructor\n */\nfunction Event() {\n  var handlers = [];\n\n  /***\n   * Adds an event handler to be called when the event is fired.\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n   * object the event was fired with.<p>\n   * @method subscribe\n   * @param fn {Function} Event handler.\n   */\n  this.subscribe = function(fn) {\n    handlers.push(fn);\n  };\n\n  /***\n   * Removes an event handler added with <code>subscribe(fn)</code>.\n   * @method unsubscribe\n   * @param fn {Function} Event handler to be removed.\n   */\n  this.unsubscribe = function(fn) {\n    for (var i = handlers.length - 1; i >= 0; i--) {\n      if (handlers[i] === fn) {\n        handlers.splice(i, 1);\n      }\n    }\n  };\n\n  /***\n   * Fires an event notifying all subscribers.\n   * @method notify\n   * @param args {Object} Additional data object to be passed to all handlers.\n   * @param e {EventData}\n   *      Optional.\n   *      An <code>EventData</code> object to be passed to all handlers.\n   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n   * @param scope {Object}\n   *      Optional.\n   *      The scope (\"this\") within which the handler will be executed.\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\n   */\n  this.notify = function(args, e, scope) {\n    e = e || new EventData();\n    scope = scope || this;\n\n    var returnValue;\n    for (\n      var i = 0;\n      i < handlers.length &&\n      !(e.isPropagationStopped() || e.isImmediatePropagationStopped());\n      i++\n    ) {\n      returnValue = handlers[i].call(scope, e, args);\n    }\n\n    return returnValue;\n  };\n}\n\nfunction EventHandler() {\n  var handlers = [];\n\n  this.subscribe = function(event, handler) {\n    handlers.push({\n      event: event,\n      handler: handler\n    });\n    event.subscribe(handler);\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribe = function(event, handler) {\n    var i = handlers.length;\n    while (i--) {\n      if (handlers[i].event === event && handlers[i].handler === handler) {\n        handlers.splice(i, 1);\n        event.unsubscribe(handler);\n        return;\n      }\n    }\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribeAll = function() {\n    var i = handlers.length;\n    while (i--) {\n      handlers[i].event.unsubscribe(handlers[i].handler);\n    }\n    handlers = [];\n\n    return this; // allow chaining\n  };\n}\n\n/***\n * A structure containing a range of cells.\n * @class Range\n * @constructor\n * @param fromRow {Integer} Starting row.\n * @param fromCell {Integer} Starting cell.\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n  if (toRow === undefined && toCell === undefined) {\n    toRow = fromRow;\n    toCell = fromCell;\n  }\n\n  /***\n   * @property fromRow\n   * @type {Integer}\n   */\n  this.fromRow = Math.min(fromRow, toRow);\n\n  /***\n   * @property fromCell\n   * @type {Integer}\n   */\n  this.fromCell = Math.min(fromCell, toCell);\n\n  /***\n   * @property toRow\n   * @type {Integer}\n   */\n  this.toRow = Math.max(fromRow, toRow);\n\n  /***\n   * @property toCell\n   * @type {Integer}\n   */\n  this.toCell = Math.max(fromCell, toCell);\n\n  /***\n   * Returns whether a range represents a single row.\n   * @method isSingleRow\n   * @return {Boolean}\n   */\n  this.isSingleRow = function() {\n    return this.fromRow == this.toRow;\n  };\n\n  /***\n   * Returns whether a range represents a single cell.\n   * @method isSingleCell\n   * @return {Boolean}\n   */\n  this.isSingleCell = function() {\n    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n  };\n\n  /***\n   * Returns whether a range contains a given cell.\n   * @method contains\n   * @param row {Integer}\n   * @param cell {Integer}\n   * @return {Boolean}\n   */\n  this.contains = function(row, cell) {\n    return (\n      row >= this.fromRow &&\n      row <= this.toRow &&\n      cell >= this.fromCell &&\n      cell <= this.toCell\n    );\n  };\n\n  /***\n   * Returns a readable representation of a range.\n   * @method toString\n   * @return {String}\n   */\n  this.toString = function() {\n    if (this.isSingleCell()) {\n      return '(' + this.fromRow + ':' + this.fromCell + ')';\n    } else {\n      return (\n        '(' +\n        this.fromRow +\n        ':' +\n        this.fromCell +\n        ' - ' +\n        this.toRow +\n        ':' +\n        this.toCell +\n        ')'\n      );\n    }\n  };\n}\n\n/***\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n * @class NonDataItem\n * @constructor\n */\nfunction NonDataItem() {\n  this.__nonDataRow = true;\n}\n\n/***\n * Information about a group of rows.\n * @class Group\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction Group() {\n  this.__group = true;\n\n  /**\n   * Grouping level, starting with 0.\n   * @property level\n   * @type {Number}\n   */\n  this.level = 0;\n\n  /***\n   * Number of rows in the group.\n   * @property count\n   * @type {Integer}\n   */\n  this.count = 0;\n\n  /***\n   * Grouping value.\n   * @property value\n   * @type {Object}\n   */\n  this.value = null;\n\n  /***\n   * Formatted display value of the group.\n   * @property title\n   * @type {String}\n   */\n  this.title = null;\n\n  /***\n   * Whether a group is collapsed.\n   * @property collapsed\n   * @type {Boolean}\n   */\n  this.collapsed = false;\n\n  /***\n   * GroupTotals, if any.\n   * @property totals\n   * @type {GroupTotals}\n   */\n  this.totals = null;\n\n  /**\n   * Rows that are part of the group.\n   * @property rows\n   * @type {Array}\n   */\n  this.rows = [];\n\n  /**\n   * Sub-groups that are part of the group.\n   * @property groups\n   * @type {Array}\n   */\n  this.groups = null;\n\n  /**\n   * A unique key used to identify the group.  This key can be used in calls to DataView\n   * collapseGroup() or expandGroup().\n   * @property groupingKey\n   * @type {Object}\n   */\n  this.groupingKey = null;\n}\n\nGroup.prototype = new NonDataItem();\n\n/***\n * Compares two Group instances.\n * @method equals\n * @return {Boolean}\n * @param group {Group} Group instance to compare to.\n */\nGroup.prototype.equals = function(group) {\n  return (\n    this.value === group.value &&\n    this.count === group.count &&\n    this.collapsed === group.collapsed &&\n    this.title === group.title\n  );\n};\n\n/***\n * Information about group totals.\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n * formatters during the display.\n * @class GroupTotals\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction GroupTotals() {\n  this.__groupTotals = true;\n\n  /***\n   * Parent Group.\n   * @param group\n   * @type {Group}\n   */\n  this.group = null;\n\n  /***\n   * Whether the totals have been fully initialized / calculated.\n   * Will be set to false for lazy-calculated group totals.\n   * @param initialized\n   * @type {Boolean}\n   */\n  this.initialized = false;\n}\n\nGroupTotals.prototype = new NonDataItem();\n\n/***\n * A locking helper to track the active edit controller and ensure that only a single controller\n * can be active at a time.  This prevents a whole class of state and validation synchronization\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n * and attempt a commit or cancel before proceeding.\n * @class EditorLock\n * @constructor\n */\nfunction EditorLock() {\n  var activeEditController = null;\n\n  /***\n   * Returns true if a specified edit controller is active (has the edit lock).\n   * If the parameter is not specified, returns true if any edit controller is active.\n   * @method isActive\n   * @param editController {EditController}\n   * @return {Boolean}\n   */\n  this.isActive = function(editController) {\n    return editController\n      ? activeEditController === editController\n      : activeEditController !== null;\n  };\n\n  /***\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n   * If another edit controller is already active, and exception will be thrown.\n   * @method activate\n   * @param editController {EditController} edit controller acquiring the lock\n   */\n  this.activate = function(editController) {\n    if (editController === activeEditController) {\n      // already activated?\n      return;\n    }\n    if (activeEditController !== null) {\n      throw \"SlickGrid.EditorLock.activate: an editController is still active, can't activate another editController\";\n    }\n    if (!editController.commitCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n    }\n    if (!editController.cancelCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n    }\n    activeEditController = editController;\n  };\n\n  /***\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\n   * If the specified edit controller is not the active one, an exception will be thrown.\n   * @method deactivate\n   * @param editController {EditController} edit controller releasing the lock\n   */\n  this.deactivate = function(editController) {\n    if (activeEditController !== editController) {\n      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n    }\n    activeEditController = null;\n  };\n\n  /***\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n   * and false otherwise.  If no edit controller is active, returns true.\n   * @method commitCurrentEdit\n   * @return {Boolean}\n   */\n  this.commitCurrentEdit = function() {\n    return activeEditController\n      ? activeEditController.commitCurrentEdit()\n      : true;\n  };\n\n  /***\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n   * active, returns true.\n   * @method cancelCurrentEdit\n   * @return {Boolean}\n   */\n  this.cancelCurrentEdit = function cancelCurrentEdit() {\n    return activeEditController\n      ? activeEditController.cancelCurrentEdit()\n      : true;\n  };\n}\n\n/**\n *\n * @param {Array} treeColumns Array com levels of columns\n * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n * @constructor\n */\nfunction TreeColumns(treeColumns) {\n  var columnsById = {};\n\n  function init() {\n    mapToId(treeColumns);\n  }\n\n  function mapToId(columns) {\n    columns.forEach(function(column) {\n      columnsById[column.id] = column;\n\n      if (column.columns) mapToId(column.columns);\n    });\n  }\n\n  function filter(node, condition) {\n    return node.filter(function(column) {\n      var valid = condition.call(column);\n\n      if (valid && column.columns)\n        column.columns = filter(column.columns, condition);\n\n      return valid && (!column.columns || column.columns.length);\n    });\n  }\n\n  function sort(columns, grid) {\n    columns\n      .sort(function(a, b) {\n        var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n          indexB = getOrDefault(grid.getColumnIndex(b.id));\n\n        return indexA - indexB;\n      })\n      .forEach(function(column) {\n        if (column.columns) sort(column.columns, grid);\n      });\n  }\n\n  function getOrDefault(value) {\n    return typeof value === 'undefined' ? -1 : value;\n  }\n\n  function getDepth(node) {\n    if (node.length) for (var i in node) return getDepth(node[i]);\n    else if (node.columns) return 1 + getDepth(node.columns);\n    else return 1;\n  }\n\n  function getColumnsInDepth(node, depth, current) {\n    var columns = [];\n    current = current || 0;\n\n    if (depth == current) {\n      if (node.length)\n        node.forEach(function(n) {\n          if (n.columns)\n            n.extractColumns = function() {\n              return extractColumns(n);\n            };\n        });\n\n      return node;\n    } else\n      for (var i in node)\n        if (node[i].columns) {\n          columns = columns.concat(\n            getColumnsInDepth(node[i].columns, depth, current + 1)\n          );\n        }\n\n    return columns;\n  }\n\n  function extractColumns(node) {\n    var result = [];\n\n    if (node.hasOwnProperty('length')) {\n      for (var i = 0; i < node.length; i++)\n        result = result.concat(extractColumns(node[i]));\n    } else {\n      if (node.hasOwnProperty('columns'))\n        result = result.concat(extractColumns(node.columns));\n      else return node;\n    }\n\n    return result;\n  }\n\n  function cloneTreeColumns() {\n    return $.extend(true, [], treeColumns);\n  }\n\n  init();\n\n  this.hasDepth = function() {\n    for (var i in treeColumns)\n      if (treeColumns[i].hasOwnProperty('columns')) return true;\n\n    return false;\n  };\n\n  this.getTreeColumns = function() {\n    return treeColumns;\n  };\n\n  this.extractColumns = function() {\n    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n  };\n\n  this.getDepth = function() {\n    return getDepth(treeColumns);\n  };\n\n  this.getColumnsInDepth = function(depth) {\n    return getColumnsInDepth(treeColumns, depth);\n  };\n\n  this.getColumnsInGroup = function(groups) {\n    return extractColumns(groups);\n  };\n\n  this.visibleColumns = function() {\n    return filter(cloneTreeColumns(), function() {\n      return this.visible;\n    });\n  };\n\n  this.filter = function(condition) {\n    return filter(cloneTreeColumns(), condition);\n  };\n\n  this.reOrder = function(grid) {\n    return sort(treeColumns, grid);\n  };\n\n  this.getById = function(id) {\n    return columnsById[id];\n  };\n\n  this.getInIds = function(ids) {\n    return ids.map(function(id) {\n      return columnsById[id];\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/slick.core.js","module.exports = require(\"jquery\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 2\n// module chunks = 0 1 2 3","/**\n * interact.js v1.2.6\n *\n * Copyright (c) 2012-2015 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n *\n * This file has been monkey patched to pass the originalEvent on to drag events\n */\n(function(realWindow) {\n  'use strict';\n\n  // return early if there's no window to work with (eg. Node.js)\n  if (!realWindow) {\n    return;\n  }\n\n  var // get wrapped window if using Shadow DOM polyfill\n    window = (function() {\n      // create a TextNode\n      var el = realWindow.document.createTextNode('');\n\n      // check if it's wrapped by a polyfill\n      if (\n        el.ownerDocument !== realWindow.document &&\n        typeof realWindow.wrap === 'function' &&\n        realWindow.wrap(el) === el\n      ) {\n        // return wrapped window\n        return realWindow.wrap(realWindow);\n      }\n\n      // no Shadow DOM polyfil or native implementation\n      return realWindow;\n    })(),\n    document = window.document,\n    DocumentFragment = window.DocumentFragment || blank,\n    SVGElement = window.SVGElement || blank,\n    SVGSVGElement = window.SVGSVGElement || blank,\n    SVGElementInstance = window.SVGElementInstance || blank,\n    HTMLElement = window.HTMLElement || window.Element,\n    PointerEvent = window.PointerEvent || window.MSPointerEvent,\n    pEventTypes,\n    hypot =\n      Math.hypot ||\n      function(x, y) {\n        return Math.sqrt(x * x + y * y);\n      },\n    tmpXY = {}, // reduce object creation in getXY()\n    documents = [], // all documents being listened to\n    interactables = [], // all set interactables\n    interactions = [], // all interactions\n    dynamicDrop = false,\n    // {\n    //      type: {\n    //          selectors: ['selector', ...],\n    //          contexts : [document, ...],\n    //          listeners: [[listener, useCapture], ...]\n    //      }\n    //  }\n    delegatedEvents = {},\n    defaultOptions = {\n      base: {\n        accept: null,\n        actionChecker: null,\n        styleCursor: true,\n        preventDefault: 'auto',\n        origin: {x: 0, y: 0},\n        deltaSource: 'page',\n        allowFrom: null,\n        ignoreFrom: null,\n        _context: document,\n        dropChecker: null\n      },\n\n      drag: {\n        enabled: false,\n        manualStart: true,\n        max: Infinity,\n        maxPerElement: 1,\n\n        snap: null,\n        restrict: null,\n        inertia: null,\n        autoScroll: null,\n\n        axis: 'xy'\n      },\n\n      drop: {\n        enabled: false,\n        accept: null,\n        overlap: 'pointer'\n      },\n\n      resize: {\n        enabled: false,\n        manualStart: false,\n        max: Infinity,\n        maxPerElement: 1,\n\n        snap: null,\n        restrict: null,\n        inertia: null,\n        autoScroll: null,\n\n        square: false,\n        preserveAspectRatio: false,\n        axis: 'xy',\n\n        // use default margin\n        margin: NaN,\n\n        // object with props left, right, top, bottom which are\n        // true/false values to resize when the pointer is over that edge,\n        // CSS selectors to match the handles for each direction\n        // or the Elements for each handle\n        edges: null,\n\n        // a value of 'none' will limit the resize rect to a minimum of 0x0\n        // 'negate' will alow the rect to have negative width/height\n        // 'reposition' will keep the width/height positive by swapping\n        // the top and bottom edges and/or swapping the left and right edges\n        invert: 'none'\n      },\n\n      gesture: {\n        manualStart: false,\n        enabled: false,\n        max: Infinity,\n        maxPerElement: 1,\n\n        restrict: null\n      },\n\n      perAction: {\n        manualStart: false,\n        max: Infinity,\n        maxPerElement: 1,\n\n        snap: {\n          enabled: false,\n          endOnly: false,\n          range: Infinity,\n          targets: null,\n          offsets: null,\n\n          relativePoints: null\n        },\n\n        restrict: {\n          enabled: false,\n          endOnly: false\n        },\n\n        autoScroll: {\n          enabled: false,\n          container: null, // the item that is scrolled (Window or HTMLElement)\n          margin: 60,\n          speed: 300 // the scroll speed in pixels per second\n        },\n\n        inertia: {\n          enabled: false,\n          resistance: 10, // the lambda in exponential decay\n          minSpeed: 100, // target speed must be above this for inertia to start\n          endSpeed: 10, // the speed at which inertia is slow enough to stop\n          allowResume: true, // allow resuming an action in inertia phase\n          zeroResumeDelta: true, // if an action is resumed after launch, set dx/dy to 0\n          smoothEndDuration: 300 // animate to snap/restrict endOnly if there's no inertia\n        }\n      },\n\n      _holdDuration: 600\n    },\n    // Things related to autoScroll\n    autoScroll = {\n      interaction: null,\n      i: null, // the handle returned by window.setInterval\n      x: 0,\n      y: 0, // Direction each pulse is to scroll in\n\n      // scroll the window by the values in scroll.x/y\n      scroll: function() {\n        var options =\n            autoScroll.interaction.target.options[\n              autoScroll.interaction.prepared.name\n            ].autoScroll,\n          container =\n            options.container || getWindow(autoScroll.interaction.element),\n          now = new Date().getTime(),\n          // change in time in seconds\n          dtx = (now - autoScroll.prevTimeX) / 1000,\n          dty = (now - autoScroll.prevTimeY) / 1000,\n          vx,\n          vy,\n          sx,\n          sy;\n\n        // displacement\n        if (options.velocity) {\n          vx = options.velocity.x;\n          vy = options.velocity.y;\n        } else {\n          vx = vy = options.speed;\n        }\n\n        sx = vx * dtx;\n        sy = vy * dty;\n\n        if (sx >= 1 || sy >= 1) {\n          if (isWindow(container)) {\n            container.scrollBy(autoScroll.x * sx, autoScroll.y * sy);\n          } else if (container) {\n            container.scrollLeft += autoScroll.x * sx;\n            container.scrollTop += autoScroll.y * sy;\n          }\n\n          if (sx >= 1) autoScroll.prevTimeX = now;\n          if (sy >= 1) autoScroll.prevTimeY = now;\n        }\n\n        if (autoScroll.isScrolling) {\n          cancelFrame(autoScroll.i);\n          autoScroll.i = reqFrame(autoScroll.scroll);\n        }\n      },\n\n      isScrolling: false,\n      prevTimeX: 0,\n      prevTimeY: 0,\n\n      start: function(interaction) {\n        autoScroll.isScrolling = true;\n        cancelFrame(autoScroll.i);\n\n        autoScroll.interaction = interaction;\n        autoScroll.prevTimeX = new Date().getTime();\n        autoScroll.prevTimeY = new Date().getTime();\n        autoScroll.i = reqFrame(autoScroll.scroll);\n      },\n\n      stop: function() {\n        autoScroll.isScrolling = false;\n        cancelFrame(autoScroll.i);\n      }\n    },\n    // Does the browser support touch input?\n    supportsTouch =\n      'ontouchstart' in window ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch),\n    // Does the browser support PointerEvents\n    // Avoid PointerEvent bugs introduced in Chrome 55\n    supportsPointerEvent = PointerEvent && !/Chrome/.test(navigator.userAgent),\n    // Less Precision with touch input\n    margin = supportsTouch || supportsPointerEvent ? 20 : 10,\n    pointerMoveTolerance = 1,\n    // for ignoring browser's simulated mouse events\n    prevTouchTime = 0,\n    // Allow this many interactions to happen simultaneously\n    maxInteractions = Infinity,\n    // Check if is IE9 or older\n    actionCursors =\n      document.all && !window.atob\n        ? {\n            drag: 'move',\n            resizex: 'e-resize',\n            resizey: 's-resize',\n            resizexy: 'se-resize',\n\n            resizetop: 'n-resize',\n            resizeleft: 'w-resize',\n            resizebottom: 's-resize',\n            resizeright: 'e-resize',\n            resizetopleft: 'se-resize',\n            resizebottomright: 'se-resize',\n            resizetopright: 'ne-resize',\n            resizebottomleft: 'ne-resize',\n\n            gesture: ''\n          }\n        : {\n            drag: 'move',\n            resizex: 'ew-resize',\n            resizey: 'ns-resize',\n            resizexy: 'nwse-resize',\n\n            resizetop: 'ns-resize',\n            resizeleft: 'ew-resize',\n            resizebottom: 'ns-resize',\n            resizeright: 'ew-resize',\n            resizetopleft: 'nwse-resize',\n            resizebottomright: 'nwse-resize',\n            resizetopright: 'nesw-resize',\n            resizebottomleft: 'nesw-resize',\n\n            gesture: ''\n          },\n    actionIsEnabled = {\n      drag: true,\n      resize: true,\n      gesture: true\n    },\n    // because Webkit and Opera still use 'mousewheel' event type\n    wheelEvent = 'onmousewheel' in document ? 'mousewheel' : 'wheel',\n    eventTypes = [\n      'dragstart',\n      'dragmove',\n      'draginertiastart',\n      'dragend',\n      'dragenter',\n      'dragleave',\n      'dropactivate',\n      'dropdeactivate',\n      'dropmove',\n      'drop',\n      'resizestart',\n      'resizemove',\n      'resizeinertiastart',\n      'resizeend',\n      'gesturestart',\n      'gesturemove',\n      'gestureinertiastart',\n      'gestureend',\n\n      'down',\n      'move',\n      'up',\n      'cancel',\n      'tap',\n      'doubletap',\n      'hold'\n    ],\n    globalEvents = {},\n    // Opera Mobile must be handled differently\n    isOperaMobile =\n      navigator.appName == 'Opera' &&\n      supportsTouch &&\n      navigator.userAgent.match('Presto'),\n    // scrolling doesn't change the result of getClientRects on iOS 7\n    isIOS7 =\n      /iP(hone|od|ad)/.test(navigator.platform) &&\n      /OS 7[^\\d]/.test(navigator.appVersion),\n    // prefix matchesSelector\n    prefixedMatchesSelector =\n      'matches' in Element.prototype\n        ? 'matches'\n        : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n        ? 'oMatchesSelector'\n        : 'msMatchesSelector',\n    // will be polyfill function if browser is IE8\n    ie8MatchesSelector,\n    // native requestAnimationFrame or polyfill\n    reqFrame = realWindow.requestAnimationFrame,\n    cancelFrame = realWindow.cancelAnimationFrame,\n    // Events wrapper\n    events = (function() {\n      var useAttachEvent =\n          'attachEvent' in window && !('addEventListener' in window),\n        addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener',\n        removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener',\n        on = useAttachEvent ? 'on' : '',\n        elements = [],\n        targets = [],\n        attachedListeners = [];\n\n      function add(element, type, listener, useCapture) {\n        var elementIndex = indexOf(elements, element),\n          target = targets[elementIndex];\n\n        if (!target) {\n          target = {\n            events: {},\n            typeCount: 0\n          };\n\n          elementIndex = elements.push(element) - 1;\n          targets.push(target);\n\n          attachedListeners.push(\n            useAttachEvent\n              ? {\n                  supplied: [],\n                  wrapped: [],\n                  useCount: []\n                }\n              : null\n          );\n        }\n\n        if (!target.events[type]) {\n          target.events[type] = [];\n          target.typeCount++;\n        }\n\n        if (!contains(target.events[type], listener)) {\n          var ret;\n\n          if (useAttachEvent) {\n            var listeners = attachedListeners[elementIndex],\n              listenerIndex = indexOf(listeners.supplied, listener);\n\n            var wrapped =\n              listeners.wrapped[listenerIndex] ||\n              function(event) {\n                if (!event.immediatePropagationStopped) {\n                  event.target = event.srcElement;\n                  event.currentTarget = element;\n\n                  event.preventDefault = event.preventDefault || preventDef;\n                  event.stopPropagation = event.stopPropagation || stopProp;\n                  event.stopImmediatePropagation =\n                    event.stopImmediatePropagation || stopImmProp;\n\n                  if (/mouse|click/.test(event.type)) {\n                    event.pageX =\n                      event.clientX +\n                      getWindow(element).document.documentElement.scrollLeft;\n                    event.pageY =\n                      event.clientY +\n                      getWindow(element).document.documentElement.scrollTop;\n                  }\n\n                  listener(event);\n                }\n              };\n\n            ret = element[addEvent](on + type, wrapped, Boolean(useCapture));\n\n            if (listenerIndex === -1) {\n              listeners.supplied.push(listener);\n              listeners.wrapped.push(wrapped);\n              listeners.useCount.push(1);\n            } else {\n              listeners.useCount[listenerIndex]++;\n            }\n          } else {\n            ret = element[addEvent](type, listener, useCapture || false);\n          }\n          target.events[type].push(listener);\n\n          return ret;\n        }\n      }\n\n      function remove(element, type, listener, useCapture) {\n        var i,\n          elementIndex = indexOf(elements, element),\n          target = targets[elementIndex],\n          listeners,\n          listenerIndex,\n          wrapped = listener;\n\n        if (!target || !target.events) {\n          return;\n        }\n\n        if (useAttachEvent) {\n          listeners = attachedListeners[elementIndex];\n          listenerIndex = indexOf(listeners.supplied, listener);\n          wrapped = listeners.wrapped[listenerIndex];\n        }\n\n        if (type === 'all') {\n          for (type in target.events) {\n            if (target.events.hasOwnProperty(type)) {\n              remove(element, type, 'all');\n            }\n          }\n          return;\n        }\n\n        if (target.events[type]) {\n          var len = target.events[type].length;\n\n          if (listener === 'all') {\n            for (i = 0; i < len; i++) {\n              remove(\n                element,\n                type,\n                target.events[type][i],\n                Boolean(useCapture)\n              );\n            }\n            return;\n          } else {\n            for (i = 0; i < len; i++) {\n              if (target.events[type][i] === listener) {\n                element[removeEvent](on + type, wrapped, useCapture || false);\n                target.events[type].splice(i, 1);\n\n                if (useAttachEvent && listeners) {\n                  listeners.useCount[listenerIndex]--;\n                  if (listeners.useCount[listenerIndex] === 0) {\n                    listeners.supplied.splice(listenerIndex, 1);\n                    listeners.wrapped.splice(listenerIndex, 1);\n                    listeners.useCount.splice(listenerIndex, 1);\n                  }\n                }\n\n                break;\n              }\n            }\n          }\n\n          if (target.events[type] && target.events[type].length === 0) {\n            target.events[type] = null;\n            target.typeCount--;\n          }\n        }\n\n        if (!target.typeCount) {\n          targets.splice(elementIndex, 1);\n          elements.splice(elementIndex, 1);\n          attachedListeners.splice(elementIndex, 1);\n        }\n      }\n\n      function preventDef() {\n        this.returnValue = false;\n      }\n\n      function stopProp() {\n        this.cancelBubble = true;\n      }\n\n      function stopImmProp() {\n        this.cancelBubble = true;\n        this.immediatePropagationStopped = true;\n      }\n\n      return {\n        add: add,\n        remove: remove,\n        useAttachEvent: useAttachEvent,\n\n        _elements: elements,\n        _targets: targets,\n        _attachedListeners: attachedListeners\n      };\n    })();\n\n  function blank() {}\n\n  function isElement(o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = getWindow(o) || window;\n\n    return /object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string';\n  }\n  function isWindow(thing) {\n    return (\n      thing === window ||\n      (!!(thing && thing.Window) && thing instanceof thing.Window)\n    );\n  }\n  function isDocFrag(thing) {\n    return !!thing && thing instanceof DocumentFragment;\n  }\n  function isArray(thing) {\n    return (\n      isObject(thing) &&\n      typeof thing.length !== undefined &&\n      isFunction(thing.splice)\n    );\n  }\n  function isObject(thing) {\n    return !!thing && typeof thing === 'object';\n  }\n  function isFunction(thing) {\n    return typeof thing === 'function';\n  }\n  function isNumber(thing) {\n    return typeof thing === 'number';\n  }\n  function isBool(thing) {\n    return typeof thing === 'boolean';\n  }\n  function isString(thing) {\n    return typeof thing === 'string';\n  }\n\n  function trySelector(value) {\n    if (!isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    document.querySelector(value);\n    return true;\n  }\n\n  function extend(dest, source) {\n    for (var prop in source) {\n      dest[prop] = source[prop];\n    }\n    return dest;\n  }\n\n  var prefixedPropREs = {\n    webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n  };\n\n  function pointerExtend(dest, source) {\n    for (var prop in source) {\n      var deprecated = false;\n\n      // skip deprecated prefixed properties\n      for (var vendor in prefixedPropREs) {\n        if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n          deprecated = true;\n          break;\n        }\n      }\n\n      if (!deprecated) {\n        dest[prop] = source[prop];\n      }\n    }\n    return dest;\n  }\n\n  function copyCoords(dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  }\n\n  function setEventXY(targetObj, pointers, interaction) {\n    var pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0];\n\n    getPageXY(pointer, tmpXY, interaction);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    getClientXY(pointer, tmpXY, interaction);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = new Date().getTime();\n  }\n\n  function setEventDeltas(targetObj, prev, cur) {\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = new Date().getTime() - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  }\n\n  function isNativePointer(pointer) {\n    return (\n      pointer instanceof window.Event ||\n      (supportsTouch && window.Touch && pointer instanceof window.Touch)\n    );\n  }\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  function getXY(type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  }\n\n  function getPageXY(pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (isOperaMobile && isNativePointer(pointer)) {\n      getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      getXY('page', pointer, page);\n    }\n\n    return page;\n  }\n\n  function getClientXY(pointer, client) {\n    client = client || {};\n\n    if (isOperaMobile && isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      getXY('screen', pointer, client);\n    } else {\n      getXY('client', pointer, client);\n    }\n\n    return client;\n  }\n\n  function getScrollXY(win) {\n    win = win || window;\n    return {\n      x: win.scrollX || win.document.documentElement.scrollLeft,\n      y: win.scrollY || win.document.documentElement.scrollTop\n    };\n  }\n\n  function getPointerId(pointer) {\n    return isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  }\n\n  function getActualElement(element) {\n    return element instanceof SVGElementInstance\n      ? element.correspondingUseElement\n      : element;\n  }\n\n  function getWindow(node) {\n    if (isWindow(node)) {\n      return node;\n    }\n\n    var rootNode = node.ownerDocument || node;\n\n    return rootNode.defaultView || rootNode.parentWindow || window;\n  }\n\n  function getElementClientRect(element) {\n    var clientRect =\n      element instanceof SVGElement\n        ? element.getBoundingClientRect()\n        : element.getClientRects()[0];\n\n    return (\n      clientRect && {\n        left: clientRect.left,\n        right: clientRect.right,\n        top: clientRect.top,\n        bottom: clientRect.bottom,\n        width: clientRect.width || clientRect.right - clientRect.left,\n        height: clientRect.height || clientRect.bottom - clientRect.top\n      }\n    );\n  }\n\n  function getElementRect(element) {\n    var clientRect = getElementClientRect(element);\n\n    if (!isIOS7 && clientRect) {\n      var scroll = getScrollXY(getWindow(element));\n\n      clientRect.left += scroll.x;\n      clientRect.right += scroll.x;\n      clientRect.top += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  }\n\n  function getTouchPair(event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        } else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      } else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  }\n\n  function pointerAverage(pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n    var prop;\n\n    for (var i = 0; i < pointers.length; i++) {\n      for (prop in average) {\n        average[prop] += pointers[i][prop];\n      }\n    }\n    for (prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  }\n\n  function touchBBox(event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = getTouchPair(event),\n      minX = Math.min(touches[0].pageX, touches[1].pageX),\n      minY = Math.min(touches[0].pageY, touches[1].pageY),\n      maxX = Math.max(touches[0].pageX, touches[1].pageX),\n      maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  }\n\n  function touchDistance(event, deltaSource) {\n    deltaSource = deltaSource || defaultOptions.deltaSource;\n\n    var sourceX = deltaSource + 'X',\n      sourceY = deltaSource + 'Y',\n      touches = getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX],\n      dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  }\n\n  function touchAngle(event, prevAngle, deltaSource) {\n    deltaSource = deltaSource || defaultOptions.deltaSource;\n\n    var sourceX = deltaSource + 'X',\n      sourceY = deltaSource + 'Y',\n      touches = getTouchPair(event),\n      dx = touches[0][sourceX] - touches[1][sourceX],\n      dy = touches[0][sourceY] - touches[1][sourceY],\n      angle = (180 * Math.atan(dy / dx)) / Math.PI;\n\n    if (isNumber(prevAngle)) {\n      var dr = angle - prevAngle,\n        drClamped = dr % 360;\n\n      if (drClamped > 315) {\n        angle -= (360 + angle / 360) | (0 * 360);\n      } else if (drClamped > 135) {\n        angle -= (180 + angle / 360) | (0 * 360);\n      } else if (drClamped < -315) {\n        angle += (360 + angle / 360) | (0 * 360);\n      } else if (drClamped < -135) {\n        angle += (180 + angle / 360) | (0 * 360);\n      }\n    }\n\n    return angle;\n  }\n\n  function getOriginXY(interactable, element) {\n    var origin = interactable\n      ? interactable.options.origin\n      : defaultOptions.origin;\n\n    if (origin === 'parent') {\n      origin = parentElement(element);\n    } else if (origin === 'self') {\n      origin = interactable.getRect(element);\n    } else if (trySelector(origin)) {\n      origin = closest(element, origin) || {x: 0, y: 0};\n    }\n\n    if (isFunction(origin)) {\n      origin = origin(interactable && element);\n    }\n\n    if (isElement(origin)) {\n      origin = getElementRect(origin);\n    }\n\n    origin.x = 'x' in origin ? origin.x : origin.left;\n    origin.y = 'y' in origin ? origin.y : origin.top;\n\n    return origin;\n  }\n\n  // http://stackoverflow.com/a/5634528/2280888\n  function _getQBezierValue(t, p1, p2, p3) {\n    var iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  }\n\n  function getQuadraticCurvePoint(\n    startX,\n    startY,\n    cpX,\n    cpY,\n    endX,\n    endY,\n    position\n  ) {\n    return {\n      x: _getQBezierValue(position, startX, cpX, endX),\n      y: _getQBezierValue(position, startY, cpY, endY)\n    };\n  }\n\n  // http://gizma.com/easing/\n  function easeOutQuad(t, b, c, d) {\n    t /= d;\n    return -c * t * (t - 2) + b;\n  }\n\n  function nodeContains(parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  }\n\n  function closest(child, selector) {\n    var parent = parentElement(child);\n\n    while (isElement(parent)) {\n      if (matchesSelector(parent, selector)) {\n        return parent;\n      }\n\n      parent = parentElement(parent);\n    }\n\n    return null;\n  }\n\n  function parentElement(node) {\n    var parent = node.parentNode;\n\n    if (isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isDocFrag(parent)) {}\n\n      return parent;\n    }\n\n    return parent;\n  }\n\n  function inContext(interactable, element) {\n    return (\n      interactable._context === element.ownerDocument ||\n      nodeContains(interactable._context, element)\n    );\n  }\n\n  function testIgnore(interactable, interactableElement, element) {\n    var ignoreFrom = interactable.options.ignoreFrom;\n\n    if (!ignoreFrom || !isElement(element)) {\n      return false;\n    }\n\n    if (isString(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, interactableElement);\n    } else if (isElement(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element);\n    }\n\n    return false;\n  }\n\n  function testAllow(interactable, interactableElement, element) {\n    var allowFrom = interactable.options.allowFrom;\n\n    if (!allowFrom) {\n      return true;\n    }\n\n    if (!isElement(element)) {\n      return false;\n    }\n\n    if (isString(allowFrom)) {\n      return matchesUpTo(element, allowFrom, interactableElement);\n    } else if (isElement(allowFrom)) {\n      return nodeContains(allowFrom, element);\n    }\n\n    return false;\n  }\n\n  function checkAxis(axis, interactable) {\n    if (!interactable) {\n      return false;\n    }\n\n    var thisAxis = interactable.options.drag.axis;\n\n    return axis === 'xy' || thisAxis === 'xy' || thisAxis === axis;\n  }\n\n  function checkSnap(interactable, action) {\n    var options = interactable.options;\n\n    if (/^resize/.test(action)) {\n      action = 'resize';\n    }\n\n    return options[action].snap && options[action].snap.enabled;\n  }\n\n  function checkRestrict(interactable, action) {\n    var options = interactable.options;\n\n    if (/^resize/.test(action)) {\n      action = 'resize';\n    }\n\n    return options[action].restrict && options[action].restrict.enabled;\n  }\n\n  function checkAutoScroll(interactable, action) {\n    var options = interactable.options;\n\n    if (/^resize/.test(action)) {\n      action = 'resize';\n    }\n\n    return options[action].autoScroll && options[action].autoScroll.enabled;\n  }\n\n  function withinInteractionLimit(interactable, element, action) {\n    var options = interactable.options,\n      maxActions = options[action.name].max,\n      maxPerElement = options[action.name].maxPerElement,\n      activeInteractions = 0,\n      targetCount = 0,\n      targetElementCount = 0;\n\n    for (var i = 0, len = interactions.length; i < len; i++) {\n      var interaction = interactions[i],\n        otherAction = interaction.prepared.name,\n        active = interaction.interacting();\n\n      if (!active) {\n        continue;\n      }\n\n      activeInteractions++;\n\n      if (activeInteractions >= maxInteractions) {\n        return false;\n      }\n\n      if (interaction.target !== interactable) {\n        continue;\n      }\n\n      targetCount += (otherAction === action.name) | 0;\n\n      if (targetCount >= maxActions) {\n        return false;\n      }\n\n      if (interaction.element === element) {\n        targetElementCount++;\n\n        if (\n          otherAction !== action.name ||\n          targetElementCount >= maxPerElement\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return maxInteractions > 0;\n  }\n\n  // Test for the element that's \"above\" all other qualifiers\n  function indexOfDeepestElement(elements) {\n    var dropzone,\n      deepestZone = elements[0],\n      index = deepestZone ? 0 : -1,\n      parent,\n      deepestZoneParents = [],\n      dropzoneParents = [],\n      child,\n      i,\n      n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (\n          parent.parentNode &&\n          parent.parentNode !== parent.ownerDocument\n        ) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (\n        deepestZone instanceof HTMLElement &&\n        dropzone instanceof SVGElement &&\n        !(dropzone instanceof SVGSVGElement)\n      ) {\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (\n        dropzoneParents[n] &&\n        dropzoneParents[n] === deepestZoneParents[n]\n      ) {\n        n++;\n      }\n\n      var parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n]\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  }\n\n  function Interaction() {\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n    this.dropTarget = null; // the dropzone a drag target might be dropped into\n    this.dropElement = null; // the element at the time of checking\n    this.prevDropTarget = null; // the dropzone that was recently dragged away from\n    this.prevDropElement = null; // the element at the time of checking\n\n    this.prepared = {\n      // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    this.matches = []; // all selectors that are matched by target element\n    this.matchElements = []; // corresponding elements\n\n    this.inertiaStatus = {\n      active: false,\n      smoothEnd: false,\n      ending: false,\n\n      startEvent: null,\n      upCoords: {},\n\n      xe: 0,\n      ye: 0,\n      sx: 0,\n      sy: 0,\n\n      t0: 0,\n      vx0: 0,\n      vys: 0,\n      duration: 0,\n\n      resumeDx: 0,\n      resumeDy: 0,\n\n      lambda_v0: 0,\n      one_ve_v0: 0,\n      i: null\n    };\n\n    if (isFunction(Function.prototype.bind)) {\n      this.boundInertiaFrame = this.inertiaFrame.bind(this);\n      this.boundSmoothEndFrame = this.smoothEndFrame.bind(this);\n    } else {\n      var that = this;\n\n      this.boundInertiaFrame = function() {\n        return that.inertiaFrame();\n      };\n      this.boundSmoothEndFrame = function() {\n        return that.smoothEndFrame();\n      };\n    }\n\n    this.activeDrops = {\n      dropzones: [], // the dropzones that are mentioned below\n      elements: [], // elements of dropzones that accept the target draggable\n      rects: [] // the rects of the elements mentioned above\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: {x: 0, y: 0},\n      client: {x: 0, y: 0},\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: {x: 0, y: 0},\n      client: {x: 0, y: 0},\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: {x: 0, y: 0},\n      client: {x: 0, y: 0},\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: {x: 0, y: 0, vx: 0, vy: 0, speed: 0},\n      client: {x: 0, y: 0, vx: 0, vy: 0, speed: 0},\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n    this.tapTime = 0; // time of the most recent tap event\n    this.prevTap = null;\n\n    this.startOffset = {left: 0, right: 0, top: 0, bottom: 0};\n    this.restrictOffset = {left: 0, right: 0, top: 0, bottom: 0};\n    this.snapOffsets = [];\n\n    this.gesture = {\n      start: {x: 0, y: 0},\n\n      startDistance: 0, // distance between two touches of touchStart\n      prevDistance: 0,\n      distance: 0,\n\n      scale: 1, // gesture.distance / gesture.startDistance\n\n      startAngle: 0, // angle of line joining two touches\n      prevAngle: 0 // angle of the previous gesture event\n    };\n\n    this.snapStatus = {\n      x: 0,\n      y: 0,\n      dx: 0,\n      dy: 0,\n      realX: 0,\n      realY: 0,\n      snappedX: 0,\n      snappedY: 0,\n      targets: [],\n      locked: false,\n      changed: false\n    };\n\n    this.restrictStatus = {\n      dx: 0,\n      dy: 0,\n      restrictedX: 0,\n      restrictedY: 0,\n      snap: null,\n      restricted: false,\n      changed: false\n    };\n\n    this.restrictStatus.snap = this.snapStatus;\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this.gesturing = false;\n    this.dragging = false;\n    this.resizing = false;\n    this.resizeAxes = 'xy';\n\n    this.mouse = false;\n\n    interactions.push(this);\n  }\n\n  Interaction.prototype = {\n    getPageXY: function(pointer, xy) {\n      return getPageXY(pointer, xy, this);\n    },\n    getClientXY: function(pointer, xy) {\n      return getClientXY(pointer, xy, this);\n    },\n    setEventXY: function(target, ptr) {\n      return setEventXY(target, ptr, this);\n    },\n\n    pointerOver: function(pointer, event, eventTarget) {\n      if (this.prepared.name || !this.mouse) {\n        return;\n      }\n\n      var curMatches = [],\n        curMatchElements = [],\n        prevTargetElement = this.element;\n\n      this.addPointer(pointer);\n\n      if (\n        this.target &&\n        (testIgnore(this.target, this.element, eventTarget) ||\n          !testAllow(this.target, this.element, eventTarget))\n      ) {\n        // if the eventTarget should be ignored or shouldn't be allowed\n        // clear the previous target\n        this.target = null;\n        this.element = null;\n        this.matches = [];\n        this.matchElements = [];\n      }\n\n      var elementInteractable = interactables.get(eventTarget),\n        elementAction =\n          elementInteractable &&\n          !testIgnore(elementInteractable, eventTarget, eventTarget) &&\n          testAllow(elementInteractable, eventTarget, eventTarget) &&\n          validateAction(\n            elementInteractable.getAction(pointer, event, this, eventTarget),\n            elementInteractable\n          );\n\n      if (\n        elementAction &&\n        !withinInteractionLimit(elementInteractable, eventTarget, elementAction)\n      ) {\n        elementAction = null;\n      }\n\n      function pushCurMatches(interactable, selector) {\n        if (\n          interactable &&\n          inContext(interactable, eventTarget) &&\n          !testIgnore(interactable, eventTarget, eventTarget) &&\n          testAllow(interactable, eventTarget, eventTarget) &&\n          matchesSelector(eventTarget, selector)\n        ) {\n          curMatches.push(interactable);\n          curMatchElements.push(eventTarget);\n        }\n      }\n\n      if (elementAction) {\n        this.target = elementInteractable;\n        this.element = eventTarget;\n        this.matches = [];\n        this.matchElements = [];\n      } else {\n        interactables.forEachSelector(pushCurMatches);\n\n        if (\n          this.validateSelector(pointer, event, curMatches, curMatchElements)\n        ) {\n          this.matches = curMatches;\n          this.matchElements = curMatchElements;\n\n          this.pointerHover(pointer, event, this.matches, this.matchElements);\n          events.add(\n            eventTarget,\n            supportsPointerEvent ? pEventTypes.move : 'mousemove',\n            listeners.pointerHover\n          );\n        } else if (this.target) {\n          if (nodeContains(prevTargetElement, eventTarget)) {\n            this.pointerHover(pointer, event, this.matches, this.matchElements);\n            events.add(\n              this.element,\n              supportsPointerEvent ? pEventTypes.move : 'mousemove',\n              listeners.pointerHover\n            );\n          } else {\n            this.target = null;\n            this.element = null;\n            this.matches = [];\n            this.matchElements = [];\n          }\n        }\n      }\n    },\n\n    // Check what action would be performed on pointerMove target if a mouse\n    // button were pressed and change the cursor accordingly\n    pointerHover: function(\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      matches,\n      matchElements\n    ) {\n      var target = this.target;\n\n      if (!this.prepared.name && this.mouse) {\n        var action;\n\n        // update pointer coords for defaultActionChecker to use\n        this.setEventXY(this.curCoords, [pointer]);\n\n        if (matches) {\n          action = this.validateSelector(\n            pointer,\n            event,\n            matches,\n            matchElements\n          );\n        } else if (target) {\n          action = validateAction(\n            target.getAction(this.pointers[0], event, this, this.element),\n            this.target\n          );\n        }\n\n        if (target && target.options.styleCursor) {\n          if (action) {\n            target._doc.documentElement.style.cursor = getActionCursor(action);\n          } else {\n            target._doc.documentElement.style.cursor = '';\n          }\n        }\n      } else if (this.prepared.name) {\n        this.checkAndPreventDefault(event, target, this.element);\n      }\n    },\n\n    pointerOut: function(pointer, event, eventTarget) {\n      if (this.prepared.name) {\n        return;\n      }\n\n      // Remove temporary event listeners for selector Interactables\n      if (!interactables.get(eventTarget)) {\n        events.remove(\n          eventTarget,\n          supportsPointerEvent ? pEventTypes.move : 'mousemove',\n          listeners.pointerHover\n        );\n      }\n\n      if (\n        this.target &&\n        this.target.options.styleCursor &&\n        !this.interacting()\n      ) {\n        this.target._doc.documentElement.style.cursor = '';\n      }\n    },\n\n    selectorDown: function(pointer, event, eventTarget, curEventTarget) {\n      var that = this,\n        // copy event to be used in timeout for IE8\n        eventCopy = events.useAttachEvent ? extend({}, event) : event,\n        element = eventTarget,\n        pointerIndex = this.addPointer(pointer),\n        action;\n\n      this.holdTimers[pointerIndex] = setTimeout(function() {\n        that.pointerHold(\n          events.useAttachEvent ? eventCopy : pointer,\n          eventCopy,\n          eventTarget,\n          curEventTarget\n        );\n      }, defaultOptions._holdDuration);\n\n      this.pointerIsDown = true;\n\n      // Check if the down event hits the current inertia target\n      if (this.inertiaStatus.active && this.target.selector) {\n        // climb up the DOM tree from the event target\n        while (isElement(element)) {\n          // if this element is the current inertia target element\n          if (\n            element === this.element &&\n            // and the prospective action is the same as the ongoing one\n            validateAction(\n              this.target.getAction(pointer, event, this, this.element),\n              this.target\n            ).name === this.prepared.name\n          ) {\n            // stop inertia so that the next move will be a normal one\n            cancelFrame(this.inertiaStatus.i);\n            this.inertiaStatus.active = false;\n\n            this.collectEventTargets(pointer, event, eventTarget, 'down');\n            return;\n          }\n          element = parentElement(element);\n        }\n      }\n\n      // do nothing if interacting\n      if (this.interacting()) {\n        this.collectEventTargets(pointer, event, eventTarget, 'down');\n        return;\n      }\n\n      function pushMatches(interactable, selector, context) {\n        var elements = ie8MatchesSelector\n          ? context.querySelectorAll(selector)\n          : undefined;\n\n        if (\n          inContext(interactable, element) &&\n          !testIgnore(interactable, element, eventTarget) &&\n          testAllow(interactable, element, eventTarget) &&\n          matchesSelector(element, selector, elements)\n        ) {\n          that.matches.push(interactable);\n          that.matchElements.push(element);\n        }\n      }\n\n      // update pointer coords for defaultActionChecker to use\n      this.setEventXY(this.curCoords, [pointer]);\n      this.downEvent = event;\n\n      while (isElement(element) && !action) {\n        this.matches = [];\n        this.matchElements = [];\n\n        interactables.forEachSelector(pushMatches);\n\n        action = this.validateSelector(\n          pointer,\n          event,\n          this.matches,\n          this.matchElements\n        );\n        element = parentElement(element);\n      }\n\n      if (action) {\n        this.prepared.name = action.name;\n        this.prepared.axis = action.axis;\n        this.prepared.edges = action.edges;\n\n        this.collectEventTargets(pointer, event, eventTarget, 'down');\n\n        return this.pointerDown(\n          pointer,\n          event,\n          eventTarget,\n          curEventTarget,\n          action\n        );\n      } else {\n        // do these now since pointerDown isn't being called from here\n        this.downTimes[pointerIndex] = new Date().getTime();\n        this.downTargets[pointerIndex] = eventTarget;\n        pointerExtend(this.downPointer, pointer);\n\n        copyCoords(this.prevCoords, this.curCoords);\n        this.pointerWasMoved = false;\n      }\n\n      this.collectEventTargets(pointer, event, eventTarget, 'down');\n    },\n\n    // Determine action to be performed on next pointerMove and add appropriate\n    // style and event Listeners\n    pointerDown: function(\n      pointer,\n      event,\n      eventTarget,\n      curEventTarget,\n      forceAction\n    ) {\n      if (\n        !forceAction &&\n        !this.inertiaStatus.active &&\n        this.pointerWasMoved &&\n        this.prepared.name\n      ) {\n        this.checkAndPreventDefault(event, this.target, this.element);\n\n        return;\n      }\n\n      this.pointerIsDown = true;\n      this.downEvent = event;\n\n      var pointerIndex = this.addPointer(pointer),\n        action;\n\n      // If it is the second touch of a multi-touch gesture, keep the\n      // target the same and get a new action if a target was set by the\n      // first touch\n      if (this.pointerIds.length > 1 && this.target._element === this.element) {\n        var newAction = validateAction(\n          forceAction ||\n            this.target.getAction(pointer, event, this, this.element),\n          this.target\n        );\n\n        if (withinInteractionLimit(this.target, this.element, newAction)) {\n          action = newAction;\n        }\n\n        this.prepared.name = null;\n      }\n      // Otherwise, set the target if there is no action prepared\n      else if (!this.prepared.name) {\n        var interactable = interactables.get(curEventTarget);\n\n        if (\n          interactable &&\n          !testIgnore(interactable, curEventTarget, eventTarget) &&\n          testAllow(interactable, curEventTarget, eventTarget) &&\n          (action = validateAction(\n            forceAction ||\n              interactable.getAction(pointer, event, this, curEventTarget),\n            interactable,\n            eventTarget\n          )) &&\n          withinInteractionLimit(interactable, curEventTarget, action)\n        ) {\n          this.target = interactable;\n          this.element = curEventTarget;\n        }\n      }\n\n      var target = this.target,\n        options = target && target.options;\n\n      if (target && (forceAction || !this.prepared.name)) {\n        action =\n          action ||\n          validateAction(\n            forceAction ||\n              target.getAction(pointer, event, this, curEventTarget),\n            target,\n            this.element\n          );\n\n        this.setEventXY(this.startCoords, this.pointers);\n\n        if (!action) {\n          return;\n        }\n\n        if (options.styleCursor) {\n          target._doc.documentElement.style.cursor = getActionCursor(action);\n        }\n\n        this.resizeAxes = action.name === 'resize' ? action.axis : null;\n\n        if (action === 'gesture' && this.pointerIds.length < 2) {\n          action = null;\n        }\n\n        this.prepared.name = action.name;\n        this.prepared.axis = action.axis;\n        this.prepared.edges = action.edges;\n\n        this.snapStatus.snappedX = this.snapStatus.snappedY = this.restrictStatus.restrictedX = this.restrictStatus.restrictedY = NaN;\n\n        this.downTimes[pointerIndex] = new Date().getTime();\n        this.downTargets[pointerIndex] = eventTarget;\n        pointerExtend(this.downPointer, pointer);\n\n        copyCoords(this.prevCoords, this.startCoords);\n        this.pointerWasMoved = false;\n\n        this.checkAndPreventDefault(event, target, this.element);\n      }\n      // if inertia is active try to resume action\n      else if (\n        this.inertiaStatus.active &&\n        curEventTarget === this.element &&\n        validateAction(\n          target.getAction(pointer, event, this, this.element),\n          target\n        ).name === this.prepared.name\n      ) {\n        cancelFrame(this.inertiaStatus.i);\n        this.inertiaStatus.active = false;\n\n        this.checkAndPreventDefault(event, target, this.element);\n      }\n    },\n\n    setModifications: function(coords, preEnd) {\n      var target = this.target,\n        shouldMove = true,\n        shouldSnap =\n          checkSnap(target, this.prepared.name) &&\n          (!target.options[this.prepared.name].snap.endOnly || preEnd),\n        shouldRestrict =\n          checkRestrict(target, this.prepared.name) &&\n          (!target.options[this.prepared.name].restrict.endOnly || preEnd);\n\n      if (shouldSnap) {\n        this.setSnapping(coords);\n      } else {\n        this.snapStatus.locked = false;\n      }\n      if (shouldRestrict) {\n        this.setRestriction(coords);\n      } else {\n        this.restrictStatus.restricted = false;\n      }\n\n      if (shouldSnap && this.snapStatus.locked && !this.snapStatus.changed) {\n        shouldMove =\n          shouldRestrict &&\n          this.restrictStatus.restricted &&\n          this.restrictStatus.changed;\n      } else if (\n        shouldRestrict &&\n        this.restrictStatus.restricted &&\n        !this.restrictStatus.changed\n      ) {\n        shouldMove = false;\n      }\n\n      return shouldMove;\n    },\n\n    setStartOffsets: function(action, interactable, element) {\n      var rect = interactable.getRect(element),\n        origin = getOriginXY(interactable, element),\n        snap = interactable.options[this.prepared.name].snap,\n        restrict = interactable.options[this.prepared.name].restrict,\n        width,\n        height;\n\n      if (rect) {\n        this.startOffset.left = this.startCoords.page.x - rect.left;\n        this.startOffset.top = this.startCoords.page.y - rect.top;\n\n        this.startOffset.right = rect.right - this.startCoords.page.x;\n        this.startOffset.bottom = rect.bottom - this.startCoords.page.y;\n\n        if ('width' in rect) {\n          width = rect.width;\n        } else {\n          width = rect.right - rect.left;\n        }\n        if ('height' in rect) {\n          height = rect.height;\n        } else {\n          height = rect.bottom - rect.top;\n        }\n      } else {\n        this.startOffset.left = this.startOffset.top = this.startOffset.right = this.startOffset.bottom = 0;\n      }\n\n      this.snapOffsets.splice(0);\n\n      var snapOffset =\n        snap && snap.offset === 'startCoords'\n          ? {\n              x: this.startCoords.page.x - origin.x,\n              y: this.startCoords.page.y - origin.y\n            }\n          : (snap && snap.offset) || {x: 0, y: 0};\n\n      if (rect && snap && snap.relativePoints && snap.relativePoints.length) {\n        for (var i = 0; i < snap.relativePoints.length; i++) {\n          this.snapOffsets.push({\n            x:\n              this.startOffset.left -\n              width * snap.relativePoints[i].x +\n              snapOffset.x,\n            y:\n              this.startOffset.top -\n              height * snap.relativePoints[i].y +\n              snapOffset.y\n          });\n        }\n      } else {\n        this.snapOffsets.push(snapOffset);\n      }\n\n      if (rect && restrict.elementRect) {\n        this.restrictOffset.left =\n          this.startOffset.left - width * restrict.elementRect.left;\n        this.restrictOffset.top =\n          this.startOffset.top - height * restrict.elementRect.top;\n\n        this.restrictOffset.right =\n          this.startOffset.right - width * (1 - restrict.elementRect.right);\n        this.restrictOffset.bottom =\n          this.startOffset.bottom - height * (1 - restrict.elementRect.bottom);\n      } else {\n        this.restrictOffset.left = this.restrictOffset.top = this.restrictOffset.right = this.restrictOffset.bottom = 0;\n      }\n    },\n\n    /*\\\n         * Interaction.start\n         [ method ]\n         *\n         * Start an action with the given Interactable and Element as tartgets. The\n         * action must be enabled for the target Interactable and an appropriate number\n         * of pointers must be held down – 1 for drag/resize, 2 for gesture.\n         *\n         * Use it with `interactable.<action>able({ manualStart: false })` to always\n         * [start actions manually](https://github.com/taye/interact.js/issues/114)\n         *\n         - action       (object)  The action to be performed - drag, resize, etc.\n         - interactable (Interactable) The Interactable to target\n         - element      (Element) The DOM Element to target\n         = (object) interact\n         **\n         | interact(target)\n         |   .draggable({\n         |     // disable the default drag start by down->move\n         |     manualStart: true\n         |   })\n         |   // start dragging after the user holds the pointer down\n         |   .on('hold', function (event) {\n         |     var interaction = event.interaction;\n         |\n         |     if (!interaction.interacting()) {\n         |       interaction.start({ name: 'drag' },\n         |                         event.interactable,\n         |                         event.currentTarget);\n         |     }\n         | });\n        \\*/\n    start: function(action, interactable, element) {\n      if (\n        this.interacting() ||\n        !this.pointerIsDown ||\n        this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)\n      ) {\n        return;\n      }\n\n      // if this interaction had been removed after stopping\n      // add it back\n      if (indexOf(interactions, this) === -1) {\n        interactions.push(this);\n      }\n\n      // set the startCoords if there was no prepared action\n      if (!this.prepared.name) {\n        this.setEventXY(this.startCoords, this.pointers);\n      }\n\n      this.prepared.name = action.name;\n      this.prepared.axis = action.axis;\n      this.prepared.edges = action.edges;\n      this.target = interactable;\n      this.element = element;\n\n      this.setStartOffsets(action.name, interactable, element);\n      this.setModifications(this.startCoords.page);\n\n      this.prevEvent = this[this.prepared.name + 'Start'](this.downEvent);\n    },\n\n    pointerMove: function(pointer, event, eventTarget, curEventTarget, preEnd) {\n      if (this.inertiaStatus.active) {\n        var pageUp = this.inertiaStatus.upCoords.page;\n        var clientUp = this.inertiaStatus.upCoords.client;\n\n        var inertiaPosition = {\n          pageX: pageUp.x + this.inertiaStatus.sx,\n          pageY: pageUp.y + this.inertiaStatus.sy,\n          clientX: clientUp.x + this.inertiaStatus.sx,\n          clientY: clientUp.y + this.inertiaStatus.sy\n        };\n\n        this.setEventXY(this.curCoords, [inertiaPosition]);\n      } else {\n        this.recordPointer(pointer);\n        this.setEventXY(this.curCoords, this.pointers);\n      }\n\n      var duplicateMove =\n        this.curCoords.page.x === this.prevCoords.page.x &&\n        this.curCoords.page.y === this.prevCoords.page.y &&\n        this.curCoords.client.x === this.prevCoords.client.x &&\n        this.curCoords.client.y === this.prevCoords.client.y;\n\n      var dx,\n        dy,\n        pointerIndex = this.mouse\n          ? 0\n          : indexOf(this.pointerIds, getPointerId(pointer));\n\n      // register movement greater than pointerMoveTolerance\n      if (this.pointerIsDown && !this.pointerWasMoved) {\n        dx = this.curCoords.client.x - this.startCoords.client.x;\n        dy = this.curCoords.client.y - this.startCoords.client.y;\n\n        this.pointerWasMoved = hypot(dx, dy) > pointerMoveTolerance;\n      }\n\n      if (!duplicateMove && (!this.pointerIsDown || this.pointerWasMoved)) {\n        if (this.pointerIsDown) {\n          clearTimeout(this.holdTimers[pointerIndex]);\n        }\n\n        this.collectEventTargets(pointer, event, eventTarget, 'move');\n      }\n\n      if (!this.pointerIsDown) {\n        return;\n      }\n\n      if (duplicateMove && this.pointerWasMoved && !preEnd) {\n        this.checkAndPreventDefault(event, this.target, this.element);\n        return;\n      }\n\n      // set pointer coordinate, time changes and speeds\n      setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n      if (!this.prepared.name) {\n        return;\n      }\n\n      if (\n        this.pointerWasMoved &&\n        // ignore movement while inertia is active\n        (!this.inertiaStatus.active ||\n          (pointer instanceof InteractEvent &&\n            /inertiastart/.test(pointer.type)))\n      ) {\n        // if just starting an action, calculate the pointer speed now\n        if (!this.interacting()) {\n          setEventDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n          // check if a drag is in the correct axis\n          if (this.prepared.name === 'drag') {\n            var absX = Math.abs(dx),\n              absY = Math.abs(dy),\n              targetAxis = this.target.options.drag.axis,\n              axis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n            // if the movement isn't in the axis of the interactable\n            if (axis !== 'xy' && targetAxis !== 'xy' && targetAxis !== axis) {\n              // cancel the prepared action\n              this.prepared.name = null;\n\n              // then try to get a drag from another ineractable\n\n              var element = eventTarget;\n\n              // check element interactables\n              while (isElement(element)) {\n                var elementInteractable = interactables.get(element);\n\n                if (\n                  elementInteractable &&\n                  elementInteractable !== this.target &&\n                  !elementInteractable.options.drag.manualStart &&\n                  (\n                    elementInteractable.getAction(\n                      this.downPointer,\n                      this.downEvent,\n                      this,\n                      element\n                    ) || {}\n                  ).name === 'drag' &&\n                  checkAxis(axis, elementInteractable)\n                ) {\n                  this.prepared.name = 'drag';\n                  this.target = elementInteractable;\n                  this.element = element;\n                  break;\n                }\n\n                element = parentElement(element);\n              }\n\n              // if there's no drag from element interactables,\n              // check the selector interactables\n              if (!this.prepared.name) {\n                var thisInteraction = this;\n\n                var getDraggable = function(interactable, selector, context) {\n                  var elements = ie8MatchesSelector\n                    ? context.querySelectorAll(selector)\n                    : undefined;\n\n                  if (interactable === thisInteraction.target) {\n                    return;\n                  }\n\n                  if (\n                    inContext(interactable, eventTarget) &&\n                    !interactable.options.drag.manualStart &&\n                    !testIgnore(interactable, element, eventTarget) &&\n                    testAllow(interactable, element, eventTarget) &&\n                    matchesSelector(element, selector, elements) &&\n                    interactable.getAction(\n                      thisInteraction.downPointer,\n                      thisInteraction.downEvent,\n                      thisInteraction,\n                      element\n                    ).name === 'drag' &&\n                    checkAxis(axis, interactable) &&\n                    withinInteractionLimit(interactable, element, 'drag')\n                  ) {\n                    return interactable;\n                  }\n                };\n\n                element = eventTarget;\n\n                while (isElement(element)) {\n                  var selectorInteractable = interactables.forEachSelector(\n                    getDraggable\n                  );\n\n                  if (selectorInteractable) {\n                    this.prepared.name = 'drag';\n                    this.target = selectorInteractable;\n                    this.element = element;\n                    break;\n                  }\n\n                  element = parentElement(element);\n                }\n              }\n            }\n          }\n        }\n\n        var starting = !!this.prepared.name && !this.interacting();\n\n        if (\n          starting &&\n          (this.target.options[this.prepared.name].manualStart ||\n            !withinInteractionLimit(this.target, this.element, this.prepared))\n        ) {\n          this.stop(event);\n          return;\n        }\n\n        if (this.prepared.name && this.target) {\n          if (starting) {\n            this.start(this.prepared, this.target, this.element);\n          }\n\n          var shouldMove = this.setModifications(this.curCoords.page, preEnd);\n\n          // move if snapping or restriction doesn't prevent it\n          if (shouldMove || starting) {\n            this.prevEvent = this[this.prepared.name + 'Move'](event);\n          }\n\n          this.checkAndPreventDefault(event, this.target, this.element);\n        }\n      }\n\n      copyCoords(this.prevCoords, this.curCoords);\n\n      if (this.dragging || this.resizing) {\n        this.autoScrollMove(pointer);\n      }\n    },\n\n    dragStart: function(event) {\n      var dragEvent = new InteractEvent(\n        this,\n        event,\n        'drag',\n        'start',\n        this.element\n      );\n\n      dragEvent.originalEvent = event;\n      this.dragging = true;\n      this.target.fire(dragEvent);\n\n      // reset active dropzones\n      this.activeDrops.dropzones = [];\n      this.activeDrops.elements = [];\n      this.activeDrops.rects = [];\n\n      if (!this.dynamicDrop) {\n        this.setActiveDrops(this.element);\n      }\n\n      var dropEvents = this.getDropEvents(event, dragEvent);\n\n      if (dropEvents.activate) {\n        this.fireActiveDrops(dropEvents.activate);\n      }\n\n      return dragEvent;\n    },\n\n    dragMove: function(event) {\n      var target = this.target,\n        dragEvent = new InteractEvent(\n          this,\n          event,\n          'drag',\n          'move',\n          this.element\n        ),\n        draggableElement = this.element,\n        drop = this.getDrop(dragEvent, event, draggableElement);\n\n      dragEvent.originalEvent = event;\n\n      this.dropTarget = drop.dropzone;\n      this.dropElement = drop.element;\n\n      var dropEvents = this.getDropEvents(event, dragEvent);\n\n      target.fire(dragEvent);\n\n      if (dropEvents.leave) {\n        this.prevDropTarget.fire(dropEvents.leave);\n      }\n      if (dropEvents.enter) {\n        this.dropTarget.fire(dropEvents.enter);\n      }\n      if (dropEvents.move) {\n        this.dropTarget.fire(dropEvents.move);\n      }\n\n      this.prevDropTarget = this.dropTarget;\n      this.prevDropElement = this.dropElement;\n\n      return dragEvent;\n    },\n\n    resizeStart: function(event) {\n      var resizeEvent = new InteractEvent(\n        this,\n        event,\n        'resize',\n        'start',\n        this.element\n      );\n\n      if (this.prepared.edges) {\n        var startRect = this.target.getRect(this.element);\n\n        /*\n         * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n         * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n         * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n         * on the active edges and the edge being interacted with.\n         */\n        if (\n          this.target.options.resize.square ||\n          this.target.options.resize.preserveAspectRatio\n        ) {\n          var linkedEdges = extend({}, this.prepared.edges);\n\n          linkedEdges.top =\n            linkedEdges.top || (linkedEdges.left && !linkedEdges.bottom);\n          linkedEdges.left =\n            linkedEdges.left || (linkedEdges.top && !linkedEdges.right);\n          linkedEdges.bottom =\n            linkedEdges.bottom || (linkedEdges.right && !linkedEdges.top);\n          linkedEdges.right =\n            linkedEdges.right || (linkedEdges.bottom && !linkedEdges.left);\n\n          this.prepared._linkedEdges = linkedEdges;\n        } else {\n          this.prepared._linkedEdges = null;\n        }\n\n        // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n        if (this.target.options.resize.preserveAspectRatio) {\n          this.resizeStartAspectRatio = startRect.width / startRect.height;\n        }\n\n        this.resizeRects = {\n          start: startRect,\n          current: extend({}, startRect),\n          restricted: extend({}, startRect),\n          previous: extend({}, startRect),\n          delta: {\n            left: 0,\n            right: 0,\n            width: 0,\n            top: 0,\n            bottom: 0,\n            height: 0\n          }\n        };\n\n        resizeEvent.rect = this.resizeRects.restricted;\n        resizeEvent.deltaRect = this.resizeRects.delta;\n      }\n\n      this.target.fire(resizeEvent);\n\n      this.resizing = true;\n\n      return resizeEvent;\n    },\n\n    resizeMove: function(event) {\n      var resizeEvent = new InteractEvent(\n        this,\n        event,\n        'resize',\n        'move',\n        this.element\n      );\n\n      var edges = this.prepared.edges,\n        invert = this.target.options.resize.invert,\n        invertible = invert === 'reposition' || invert === 'negate';\n\n      if (edges) {\n        var dx = resizeEvent.dx,\n          dy = resizeEvent.dy,\n          start = this.resizeRects.start,\n          current = this.resizeRects.current,\n          restricted = this.resizeRects.restricted,\n          delta = this.resizeRects.delta,\n          previous = extend(this.resizeRects.previous, restricted),\n          originalEdges = edges;\n\n        // `resize.preserveAspectRatio` takes precedence over `resize.square`\n        if (this.target.options.resize.preserveAspectRatio) {\n          var resizeStartAspectRatio = this.resizeStartAspectRatio;\n\n          edges = this.prepared._linkedEdges;\n\n          if (\n            (originalEdges.left && originalEdges.bottom) ||\n            (originalEdges.right && originalEdges.top)\n          ) {\n            dy = -dx / resizeStartAspectRatio;\n          } else if (originalEdges.left || originalEdges.right) {\n            dy = dx / resizeStartAspectRatio;\n          } else if (originalEdges.top || originalEdges.bottom) {\n            dx = dy * resizeStartAspectRatio;\n          }\n        } else if (this.target.options.resize.square) {\n          edges = this.prepared._linkedEdges;\n\n          if (\n            (originalEdges.left && originalEdges.bottom) ||\n            (originalEdges.right && originalEdges.top)\n          ) {\n            dy = -dx;\n          } else if (originalEdges.left || originalEdges.right) {\n            dy = dx;\n          } else if (originalEdges.top || originalEdges.bottom) {\n            dx = dy;\n          }\n        }\n\n        // update the 'current' rect without modifications\n        if (edges.top) {\n          current.top += dy;\n        }\n        if (edges.bottom) {\n          current.bottom += dy;\n        }\n        if (edges.left) {\n          current.left += dx;\n        }\n        if (edges.right) {\n          current.right += dx;\n        }\n\n        if (invertible) {\n          // if invertible, copy the current rect\n          extend(restricted, current);\n\n          if (invert === 'reposition') {\n            // swap edge values if necessary to keep width/height positive\n            var swap;\n\n            if (restricted.top > restricted.bottom) {\n              swap = restricted.top;\n\n              restricted.top = restricted.bottom;\n              restricted.bottom = swap;\n            }\n            if (restricted.left > restricted.right) {\n              swap = restricted.left;\n\n              restricted.left = restricted.right;\n              restricted.right = swap;\n            }\n          }\n        } else {\n          // if not invertible, restrict to minimum of 0x0 rect\n          restricted.top = Math.min(current.top, start.bottom);\n          restricted.bottom = Math.max(current.bottom, start.top);\n          restricted.left = Math.min(current.left, start.right);\n          restricted.right = Math.max(current.right, start.left);\n        }\n\n        restricted.width = restricted.right - restricted.left;\n        restricted.height = restricted.bottom - restricted.top;\n\n        for (var edge in restricted) {\n          delta[edge] = restricted[edge] - previous[edge];\n        }\n\n        resizeEvent.edges = this.prepared.edges;\n        resizeEvent.rect = restricted;\n        resizeEvent.deltaRect = delta;\n      }\n\n      this.target.fire(resizeEvent);\n\n      return resizeEvent;\n    },\n\n    gestureStart: function(event) {\n      var gestureEvent = new InteractEvent(\n        this,\n        event,\n        'gesture',\n        'start',\n        this.element\n      );\n\n      gestureEvent.ds = 0;\n\n      this.gesture.startDistance = this.gesture.prevDistance =\n        gestureEvent.distance;\n      this.gesture.startAngle = this.gesture.prevAngle = gestureEvent.angle;\n      this.gesture.scale = 1;\n\n      this.gesturing = true;\n\n      this.target.fire(gestureEvent);\n\n      return gestureEvent;\n    },\n\n    gestureMove: function(event) {\n      if (!this.pointerIds.length) {\n        return this.prevEvent;\n      }\n\n      var gestureEvent;\n\n      gestureEvent = new InteractEvent(\n        this,\n        event,\n        'gesture',\n        'move',\n        this.element\n      );\n      gestureEvent.ds = gestureEvent.scale - this.gesture.scale;\n\n      this.target.fire(gestureEvent);\n\n      this.gesture.prevAngle = gestureEvent.angle;\n      this.gesture.prevDistance = gestureEvent.distance;\n\n      if (\n        gestureEvent.scale !== Infinity &&\n        gestureEvent.scale !== null &&\n        gestureEvent.scale !== undefined &&\n        !isNaN(gestureEvent.scale)\n      ) {\n        this.gesture.scale = gestureEvent.scale;\n      }\n\n      return gestureEvent;\n    },\n\n    pointerHold: function(pointer, event, eventTarget) {\n      this.collectEventTargets(pointer, event, eventTarget, 'hold');\n    },\n\n    pointerUp: function(pointer, event, eventTarget, curEventTarget) {\n      var pointerIndex = this.mouse\n        ? 0\n        : indexOf(this.pointerIds, getPointerId(pointer));\n\n      clearTimeout(this.holdTimers[pointerIndex]);\n\n      this.collectEventTargets(pointer, event, eventTarget, 'up');\n      this.collectEventTargets(pointer, event, eventTarget, 'tap');\n\n      this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n      this.removePointer(pointer);\n    },\n\n    pointerCancel: function(pointer, event, eventTarget, curEventTarget) {\n      var pointerIndex = this.mouse\n        ? 0\n        : indexOf(this.pointerIds, getPointerId(pointer));\n\n      clearTimeout(this.holdTimers[pointerIndex]);\n\n      this.collectEventTargets(pointer, event, eventTarget, 'cancel');\n      this.pointerEnd(pointer, event, eventTarget, curEventTarget);\n\n      this.removePointer(pointer);\n    },\n\n    // http://www.quirksmode.org/dom/events/click.html\n    // >Events leading to dblclick\n    //\n    // IE8 doesn't fire down event before dblclick.\n    // This workaround tries to fire a tap and doubletap after dblclick\n    ie8Dblclick: function(pointer, event, eventTarget) {\n      if (\n        this.prevTap &&\n        event.clientX === this.prevTap.clientX &&\n        event.clientY === this.prevTap.clientY &&\n        eventTarget === this.prevTap.target\n      ) {\n        this.downTargets[0] = eventTarget;\n        this.downTimes[0] = new Date().getTime();\n        this.collectEventTargets(pointer, event, eventTarget, 'tap');\n      }\n    },\n\n    // End interact move events and stop auto-scroll unless inertia is enabled\n    pointerEnd: function(pointer, event, eventTarget, curEventTarget) {\n      var endEvent,\n        target = this.target,\n        options = target && target.options,\n        inertiaOptions =\n          options && this.prepared.name && options[this.prepared.name].inertia,\n        inertiaStatus = this.inertiaStatus;\n\n      if (this.interacting()) {\n        if (inertiaStatus.active && !inertiaStatus.ending) {\n          return;\n        }\n\n        var pointerSpeed,\n          now = new Date().getTime(),\n          inertiaPossible = false,\n          inertia = false,\n          smoothEnd = false,\n          endSnap =\n            checkSnap(target, this.prepared.name) &&\n            options[this.prepared.name].snap.endOnly,\n          endRestrict =\n            checkRestrict(target, this.prepared.name) &&\n            options[this.prepared.name].restrict.endOnly,\n          dx = 0,\n          dy = 0,\n          startEvent;\n\n        if (this.dragging) {\n          if (options.drag.axis === 'x') {\n            pointerSpeed = Math.abs(this.pointerDelta.client.vx);\n          } else if (options.drag.axis === 'y') {\n            pointerSpeed = Math.abs(this.pointerDelta.client.vy);\n          } /*options.drag.axis === 'xy'*/ else {\n            pointerSpeed = this.pointerDelta.client.speed;\n          }\n        } else {\n          pointerSpeed = this.pointerDelta.client.speed;\n        }\n\n        // check if inertia should be started\n        inertiaPossible =\n          inertiaOptions &&\n          inertiaOptions.enabled &&\n          this.prepared.name !== 'gesture' &&\n          event !== inertiaStatus.startEvent;\n\n        inertia =\n          inertiaPossible &&\n          now - this.curCoords.timeStamp < 50 &&\n          pointerSpeed > inertiaOptions.minSpeed &&\n          pointerSpeed > inertiaOptions.endSpeed;\n\n        if (inertiaPossible && !inertia && (endSnap || endRestrict)) {\n          var snapRestrict = {};\n\n          snapRestrict.snap = snapRestrict.restrict = snapRestrict;\n\n          if (endSnap) {\n            this.setSnapping(this.curCoords.page, snapRestrict);\n            if (snapRestrict.locked) {\n              dx += snapRestrict.dx;\n              dy += snapRestrict.dy;\n            }\n          }\n\n          if (endRestrict) {\n            this.setRestriction(this.curCoords.page, snapRestrict);\n            if (snapRestrict.restricted) {\n              dx += snapRestrict.dx;\n              dy += snapRestrict.dy;\n            }\n          }\n\n          if (dx || dy) {\n            smoothEnd = true;\n          }\n        }\n\n        if (inertia || smoothEnd) {\n          copyCoords(inertiaStatus.upCoords, this.curCoords);\n\n          this.pointers[0] = inertiaStatus.startEvent = startEvent = new InteractEvent(\n            this,\n            event,\n            this.prepared.name,\n            'inertiastart',\n            this.element\n          );\n\n          inertiaStatus.t0 = now;\n\n          target.fire(inertiaStatus.startEvent);\n\n          if (inertia) {\n            inertiaStatus.vx0 = this.pointerDelta.client.vx;\n            inertiaStatus.vy0 = this.pointerDelta.client.vy;\n            inertiaStatus.v0 = pointerSpeed;\n\n            this.calcInertia(inertiaStatus);\n\n            var page = extend({}, this.curCoords.page),\n              origin = getOriginXY(target, this.element),\n              statusObject;\n\n            page.x = page.x + inertiaStatus.xe - origin.x;\n            page.y = page.y + inertiaStatus.ye - origin.y;\n\n            statusObject = {\n              useStatusXY: true,\n              x: page.x,\n              y: page.y,\n              dx: 0,\n              dy: 0,\n              snap: null\n            };\n\n            statusObject.snap = statusObject;\n\n            dx = dy = 0;\n\n            if (endSnap) {\n              var snap = this.setSnapping(this.curCoords.page, statusObject);\n\n              if (snap.locked) {\n                dx += snap.dx;\n                dy += snap.dy;\n              }\n            }\n\n            if (endRestrict) {\n              var restrict = this.setRestriction(\n                this.curCoords.page,\n                statusObject\n              );\n\n              if (restrict.restricted) {\n                dx += restrict.dx;\n                dy += restrict.dy;\n              }\n            }\n\n            inertiaStatus.modifiedXe += dx;\n            inertiaStatus.modifiedYe += dy;\n\n            inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n          } else {\n            inertiaStatus.smoothEnd = true;\n            inertiaStatus.xe = dx;\n            inertiaStatus.ye = dy;\n\n            inertiaStatus.sx = inertiaStatus.sy = 0;\n\n            inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n          }\n\n          inertiaStatus.active = true;\n          return;\n        }\n\n        if (endSnap || endRestrict) {\n          // fire a move event at the snapped coordinates\n          this.pointerMove(pointer, event, eventTarget, curEventTarget, true);\n        }\n      }\n\n      if (this.dragging) {\n        endEvent = new InteractEvent(this, event, 'drag', 'end', this.element);\n\n        var draggableElement = this.element,\n          drop = this.getDrop(endEvent, event, draggableElement);\n\n        this.dropTarget = drop.dropzone;\n        this.dropElement = drop.element;\n\n        var dropEvents = this.getDropEvents(event, endEvent);\n\n        if (dropEvents.leave) {\n          this.prevDropTarget.fire(dropEvents.leave);\n        }\n        if (dropEvents.enter) {\n          this.dropTarget.fire(dropEvents.enter);\n        }\n        if (dropEvents.drop) {\n          this.dropTarget.fire(dropEvents.drop);\n        }\n        if (dropEvents.deactivate) {\n          this.fireActiveDrops(dropEvents.deactivate);\n        }\n\n        target.fire(endEvent);\n      } else if (this.resizing) {\n        endEvent = new InteractEvent(\n          this,\n          event,\n          'resize',\n          'end',\n          this.element\n        );\n        target.fire(endEvent);\n      } else if (this.gesturing) {\n        endEvent = new InteractEvent(\n          this,\n          event,\n          'gesture',\n          'end',\n          this.element\n        );\n        target.fire(endEvent);\n      }\n\n      this.stop(event);\n    },\n\n    collectDrops: function(element) {\n      var drops = [],\n        elements = [],\n        i;\n\n      element = element || this.element;\n\n      // collect all dropzones and their elements which qualify for a drop\n      for (i = 0; i < interactables.length; i++) {\n        if (!interactables[i].options.drop.enabled) {\n          continue;\n        }\n\n        var current = interactables[i],\n          accept = current.options.drop.accept;\n\n        // test the draggable element against the dropzone's accept setting\n        if (\n          (isElement(accept) && accept !== element) ||\n          (isString(accept) && !matchesSelector(element, accept))\n        ) {\n          continue;\n        }\n\n        // query for new elements if necessary\n        var dropElements = current.selector\n          ? current._context.querySelectorAll(current.selector)\n          : [current._element];\n\n        for (var j = 0, len = dropElements.length; j < len; j++) {\n          var currentElement = dropElements[j];\n\n          if (currentElement === element) {\n            continue;\n          }\n\n          drops.push(current);\n          elements.push(currentElement);\n        }\n      }\n\n      return {\n        dropzones: drops,\n        elements: elements\n      };\n    },\n\n    fireActiveDrops: function(event) {\n      var i, current, currentElement, prevElement;\n\n      // loop through all active dropzones and trigger event\n      for (i = 0; i < this.activeDrops.dropzones.length; i++) {\n        current = this.activeDrops.dropzones[i];\n        currentElement = this.activeDrops.elements[i];\n\n        // prevent trigger of duplicate events on same element\n        if (currentElement !== prevElement) {\n          // set current element as event target\n          event.target = currentElement;\n          current.fire(event);\n        }\n        prevElement = currentElement;\n      }\n    },\n\n    // Collect a new set of possible drops and save them in activeDrops.\n    // setActiveDrops should always be called when a drag has just started or a\n    // drag event happens while dynamicDrop is true\n    setActiveDrops: function(dragElement) {\n      // get dropzones and their elements that could receive the draggable\n      var possibleDrops = this.collectDrops(dragElement, true);\n\n      this.activeDrops.dropzones = possibleDrops.dropzones;\n      this.activeDrops.elements = possibleDrops.elements;\n      this.activeDrops.rects = [];\n\n      for (var i = 0; i < this.activeDrops.dropzones.length; i++) {\n        this.activeDrops.rects[i] = this.activeDrops.dropzones[i].getRect(\n          this.activeDrops.elements[i]\n        );\n      }\n    },\n\n    getDrop: function(dragEvent, event, dragElement) {\n      var validDrops = [];\n\n      if (dynamicDrop) {\n        this.setActiveDrops(dragElement);\n      }\n\n      // collect all dropzones and their elements which qualify for a drop\n      for (var j = 0; j < this.activeDrops.dropzones.length; j++) {\n        var current = this.activeDrops.dropzones[j],\n          currentElement = this.activeDrops.elements[j],\n          rect = this.activeDrops.rects[j];\n\n        validDrops.push(\n          current.dropCheck(\n            dragEvent,\n            event,\n            this.target,\n            dragElement,\n            currentElement,\n            rect\n          )\n            ? currentElement\n            : null\n        );\n      }\n\n      // get the most appropriate dropzone based on DOM depth and order\n      var dropIndex = indexOfDeepestElement(validDrops),\n        dropzone = this.activeDrops.dropzones[dropIndex] || null,\n        element = this.activeDrops.elements[dropIndex] || null;\n\n      return {\n        dropzone: dropzone,\n        element: element\n      };\n    },\n\n    getDropEvents: function(pointerEvent, dragEvent) {\n      var dropEvents = {\n        enter: null,\n        leave: null,\n        activate: null,\n        deactivate: null,\n        move: null,\n        drop: null\n      };\n\n      if (this.dropElement !== this.prevDropElement) {\n        // if there was a prevDropTarget, create a dragleave event\n        if (this.prevDropTarget) {\n          dropEvents.leave = {\n            target: this.prevDropElement,\n            dropzone: this.prevDropTarget,\n            relatedTarget: dragEvent.target,\n            draggable: dragEvent.interactable,\n            dragEvent: dragEvent,\n            interaction: this,\n            timeStamp: dragEvent.timeStamp,\n            type: 'dragleave'\n          };\n\n          dragEvent.dragLeave = this.prevDropElement;\n          dragEvent.prevDropzone = this.prevDropTarget;\n        }\n        // if the dropTarget is not null, create a dragenter event\n        if (this.dropTarget) {\n          dropEvents.enter = {\n            target: this.dropElement,\n            dropzone: this.dropTarget,\n            relatedTarget: dragEvent.target,\n            draggable: dragEvent.interactable,\n            dragEvent: dragEvent,\n            interaction: this,\n            timeStamp: dragEvent.timeStamp,\n            type: 'dragenter'\n          };\n\n          dragEvent.dragEnter = this.dropElement;\n          dragEvent.dropzone = this.dropTarget;\n        }\n      }\n\n      if (dragEvent.type === 'dragend' && this.dropTarget) {\n        dropEvents.drop = {\n          target: this.dropElement,\n          dropzone: this.dropTarget,\n          relatedTarget: dragEvent.target,\n          draggable: dragEvent.interactable,\n          dragEvent: dragEvent,\n          interaction: this,\n          timeStamp: dragEvent.timeStamp,\n          type: 'drop'\n        };\n\n        dragEvent.dropzone = this.dropTarget;\n      }\n      if (dragEvent.type === 'dragstart') {\n        dropEvents.activate = {\n          target: null,\n          dropzone: null,\n          relatedTarget: dragEvent.target,\n          draggable: dragEvent.interactable,\n          dragEvent: dragEvent,\n          interaction: this,\n          timeStamp: dragEvent.timeStamp,\n          type: 'dropactivate'\n        };\n      }\n      if (dragEvent.type === 'dragend') {\n        dropEvents.deactivate = {\n          target: null,\n          dropzone: null,\n          relatedTarget: dragEvent.target,\n          draggable: dragEvent.interactable,\n          dragEvent: dragEvent,\n          interaction: this,\n          timeStamp: dragEvent.timeStamp,\n          type: 'dropdeactivate'\n        };\n      }\n      if (dragEvent.type === 'dragmove' && this.dropTarget) {\n        dropEvents.move = {\n          target: this.dropElement,\n          dropzone: this.dropTarget,\n          relatedTarget: dragEvent.target,\n          draggable: dragEvent.interactable,\n          dragEvent: dragEvent,\n          interaction: this,\n          dragmove: dragEvent,\n          timeStamp: dragEvent.timeStamp,\n          type: 'dropmove'\n        };\n        dragEvent.dropzone = this.dropTarget;\n      }\n\n      return dropEvents;\n    },\n\n    currentAction: function() {\n      return (\n        (this.dragging && 'drag') ||\n        (this.resizing && 'resize') ||\n        (this.gesturing && 'gesture') ||\n        null\n      );\n    },\n\n    interacting: function() {\n      return this.dragging || this.resizing || this.gesturing;\n    },\n\n    clearTargets: function() {\n      this.target = this.element = null;\n\n      this.dropTarget = this.dropElement = this.prevDropTarget = this.prevDropElement = null;\n    },\n\n    stop: function(event) {\n      if (this.interacting()) {\n        autoScroll.stop();\n        this.matches = [];\n        this.matchElements = [];\n\n        var target = this.target;\n\n        if (target.options.styleCursor) {\n          target._doc.documentElement.style.cursor = '';\n        }\n\n        // prevent Default only if were previously interacting\n        if (event && isFunction(event.preventDefault)) {\n          this.checkAndPreventDefault(event, target, this.element);\n        }\n\n        if (this.dragging) {\n          this.activeDrops.dropzones = this.activeDrops.elements = this.activeDrops.rects = null;\n        }\n      }\n\n      this.clearTargets();\n\n      this.pointerIsDown = this.snapStatus.locked = this.dragging = this.resizing = this.gesturing = false;\n      this.prepared.name = this.prevEvent = null;\n      this.inertiaStatus.resumeDx = this.inertiaStatus.resumeDy = 0;\n\n      // remove pointers if their ID isn't in this.pointerIds\n      for (var i = 0; i < this.pointers.length; i++) {\n        if (indexOf(this.pointerIds, getPointerId(this.pointers[i])) === -1) {\n          this.pointers.splice(i, 1);\n        }\n      }\n    },\n\n    inertiaFrame: function() {\n      var inertiaStatus = this.inertiaStatus,\n        options = this.target.options[this.prepared.name].inertia,\n        lambda = options.resistance,\n        t = new Date().getTime() / 1000 - inertiaStatus.t0;\n\n      if (t < inertiaStatus.te) {\n        var progress =\n          1 -\n          (Math.exp(-lambda * t) - inertiaStatus.lambda_v0) /\n            inertiaStatus.one_ve_v0;\n\n        if (\n          inertiaStatus.modifiedXe === inertiaStatus.xe &&\n          inertiaStatus.modifiedYe === inertiaStatus.ye\n        ) {\n          inertiaStatus.sx = inertiaStatus.xe * progress;\n          inertiaStatus.sy = inertiaStatus.ye * progress;\n        } else {\n          var quadPoint = getQuadraticCurvePoint(\n            0,\n            0,\n            inertiaStatus.xe,\n            inertiaStatus.ye,\n            inertiaStatus.modifiedXe,\n            inertiaStatus.modifiedYe,\n            progress\n          );\n\n          inertiaStatus.sx = quadPoint.x;\n          inertiaStatus.sy = quadPoint.y;\n        }\n\n        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n        inertiaStatus.i = reqFrame(this.boundInertiaFrame);\n      } else {\n        inertiaStatus.ending = true;\n\n        inertiaStatus.sx = inertiaStatus.modifiedXe;\n        inertiaStatus.sy = inertiaStatus.modifiedYe;\n\n        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n        this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n        inertiaStatus.active = inertiaStatus.ending = false;\n      }\n    },\n\n    smoothEndFrame: function() {\n      var inertiaStatus = this.inertiaStatus,\n        t = new Date().getTime() - inertiaStatus.t0,\n        duration = this.target.options[this.prepared.name].inertia\n          .smoothEndDuration;\n\n      if (t < duration) {\n        inertiaStatus.sx = easeOutQuad(t, 0, inertiaStatus.xe, duration);\n        inertiaStatus.sy = easeOutQuad(t, 0, inertiaStatus.ye, duration);\n\n        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n        inertiaStatus.i = reqFrame(this.boundSmoothEndFrame);\n      } else {\n        inertiaStatus.ending = true;\n\n        inertiaStatus.sx = inertiaStatus.xe;\n        inertiaStatus.sy = inertiaStatus.ye;\n\n        this.pointerMove(inertiaStatus.startEvent, inertiaStatus.startEvent);\n        this.pointerEnd(inertiaStatus.startEvent, inertiaStatus.startEvent);\n\n        inertiaStatus.smoothEnd = inertiaStatus.active = inertiaStatus.ending = false;\n      }\n    },\n\n    addPointer: function(pointer) {\n      var id = getPointerId(pointer),\n        index = this.mouse ? 0 : indexOf(this.pointerIds, id);\n\n      if (index === -1) {\n        index = this.pointerIds.length;\n      }\n\n      this.pointerIds[index] = id;\n      this.pointers[index] = pointer;\n\n      return index;\n    },\n\n    removePointer: function(pointer) {\n      var id = getPointerId(pointer),\n        index = this.mouse ? 0 : indexOf(this.pointerIds, id);\n\n      if (index === -1) {\n        return;\n      }\n\n      this.pointers.splice(index, 1);\n      this.pointerIds.splice(index, 1);\n      this.downTargets.splice(index, 1);\n      this.downTimes.splice(index, 1);\n      this.holdTimers.splice(index, 1);\n    },\n\n    recordPointer: function(pointer) {\n      var index = this.mouse\n        ? 0\n        : indexOf(this.pointerIds, getPointerId(pointer));\n\n      if (index === -1) {\n        return;\n      }\n\n      this.pointers[index] = pointer;\n    },\n\n    collectEventTargets: function(pointer, event, eventTarget, eventType) {\n      var pointerIndex = this.mouse\n        ? 0\n        : indexOf(this.pointerIds, getPointerId(pointer));\n\n      // do not fire a tap event if the pointer was moved before being lifted\n      if (\n        eventType === 'tap' &&\n        (this.pointerWasMoved ||\n          // or if the pointerup target is different to the pointerdown target\n          !(\n            this.downTargets[pointerIndex] &&\n            this.downTargets[pointerIndex] === eventTarget\n          ))\n      ) {\n        return;\n      }\n\n      var targets = [],\n        elements = [],\n        element = eventTarget;\n\n      function collectSelectors(interactable, selector, context) {\n        var els = ie8MatchesSelector\n          ? context.querySelectorAll(selector)\n          : undefined;\n\n        if (\n          interactable._iEvents[eventType] &&\n          isElement(element) &&\n          inContext(interactable, element) &&\n          !testIgnore(interactable, element, eventTarget) &&\n          testAllow(interactable, element, eventTarget) &&\n          matchesSelector(element, selector, els)\n        ) {\n          targets.push(interactable);\n          elements.push(element);\n        }\n      }\n\n      while (element) {\n        if (interact.isSet(element) && interact(element)._iEvents[eventType]) {\n          targets.push(interact(element));\n          elements.push(element);\n        }\n\n        interactables.forEachSelector(collectSelectors);\n\n        element = parentElement(element);\n      }\n\n      // create the tap event even if there are no listeners so that\n      // doubletap can still be created and fired\n      if (targets.length || eventType === 'tap') {\n        this.firePointers(\n          pointer,\n          event,\n          eventTarget,\n          targets,\n          elements,\n          eventType\n        );\n      }\n    },\n\n    firePointers: function(\n      pointer,\n      event,\n      eventTarget,\n      targets,\n      elements,\n      eventType\n    ) {\n      var pointerIndex = this.mouse\n          ? 0\n          : indexOf(this.pointerIds, getPointerId(pointer)),\n        pointerEvent = {},\n        i,\n        // for tap events\n        interval,\n        createNewDoubleTap;\n\n      // if it's a doubletap then the event properties would have been\n      // copied from the tap event and provided as the pointer argument\n      if (eventType === 'doubletap') {\n        pointerEvent = pointer;\n      } else {\n        pointerExtend(pointerEvent, event);\n        if (event !== pointer) {\n          pointerExtend(pointerEvent, pointer);\n        }\n\n        pointerEvent.preventDefault = preventOriginalDefault;\n        pointerEvent.stopPropagation = InteractEvent.prototype.stopPropagation;\n        pointerEvent.stopImmediatePropagation =\n          InteractEvent.prototype.stopImmediatePropagation;\n        pointerEvent.interaction = this;\n\n        pointerEvent.timeStamp = new Date().getTime();\n        pointerEvent.originalEvent = event;\n        pointerEvent.originalPointer = pointer;\n        pointerEvent.type = eventType;\n        pointerEvent.pointerId = getPointerId(pointer);\n        pointerEvent.pointerType = this.mouse\n          ? 'mouse'\n          : !supportsPointerEvent\n          ? 'touch'\n          : isString(pointer.pointerType)\n          ? pointer.pointerType\n          : [, , 'touch', 'pen', 'mouse'][pointer.pointerType];\n      }\n\n      if (eventType === 'tap') {\n        pointerEvent.dt = pointerEvent.timeStamp - this.downTimes[pointerIndex];\n\n        interval = pointerEvent.timeStamp - this.tapTime;\n        createNewDoubleTap = !!(\n          this.prevTap &&\n          this.prevTap.type !== 'doubletap' &&\n          this.prevTap.target === pointerEvent.target &&\n          interval < 500\n        );\n\n        pointerEvent.double = createNewDoubleTap;\n\n        this.tapTime = pointerEvent.timeStamp;\n      }\n\n      for (i = 0; i < targets.length; i++) {\n        pointerEvent.currentTarget = elements[i];\n        pointerEvent.interactable = targets[i];\n        targets[i].fire(pointerEvent);\n\n        if (\n          pointerEvent.immediatePropagationStopped ||\n          (pointerEvent.propagationStopped &&\n            elements[i + 1] !== pointerEvent.currentTarget)\n        ) {\n          break;\n        }\n      }\n\n      if (createNewDoubleTap) {\n        var doubleTap = {};\n\n        extend(doubleTap, pointerEvent);\n\n        doubleTap.dt = interval;\n        doubleTap.type = 'doubletap';\n\n        this.collectEventTargets(doubleTap, event, eventTarget, 'doubletap');\n\n        this.prevTap = doubleTap;\n      } else if (eventType === 'tap') {\n        this.prevTap = pointerEvent;\n      }\n    },\n\n    validateSelector: function(pointer, event, matches, matchElements) {\n      for (var i = 0, len = matches.length; i < len; i++) {\n        var match = matches[i],\n          matchElement = matchElements[i],\n          action = validateAction(\n            match.getAction(pointer, event, this, matchElement),\n            match\n          );\n\n        if (action && withinInteractionLimit(match, matchElement, action)) {\n          this.target = match;\n          this.element = matchElement;\n\n          return action;\n        }\n      }\n    },\n\n    setSnapping: function(pageCoords, status) {\n      var snap = this.target.options[this.prepared.name].snap,\n        targets = [],\n        target,\n        page,\n        i;\n\n      status = status || this.snapStatus;\n\n      if (status.useStatusXY) {\n        page = {x: status.x, y: status.y};\n      } else {\n        var origin = getOriginXY(this.target, this.element);\n\n        page = extend({}, pageCoords);\n\n        page.x -= origin.x;\n        page.y -= origin.y;\n      }\n\n      status.realX = page.x;\n      status.realY = page.y;\n\n      page.x = page.x - this.inertiaStatus.resumeDx;\n      page.y = page.y - this.inertiaStatus.resumeDy;\n\n      var len = snap.targets ? snap.targets.length : 0;\n\n      for (var relIndex = 0; relIndex < this.snapOffsets.length; relIndex++) {\n        var relative = {\n          x: page.x - this.snapOffsets[relIndex].x,\n          y: page.y - this.snapOffsets[relIndex].y\n        };\n\n        for (i = 0; i < len; i++) {\n          if (isFunction(snap.targets[i])) {\n            target = snap.targets[i](relative.x, relative.y, this);\n          } else {\n            target = snap.targets[i];\n          }\n\n          if (!target) {\n            continue;\n          }\n\n          targets.push({\n            x: isNumber(target.x)\n              ? target.x + this.snapOffsets[relIndex].x\n              : relative.x,\n            y: isNumber(target.y)\n              ? target.y + this.snapOffsets[relIndex].y\n              : relative.y,\n\n            range: isNumber(target.range) ? target.range : snap.range\n          });\n        }\n      }\n\n      var closest = {\n        target: null,\n        inRange: false,\n        distance: 0,\n        range: 0,\n        dx: 0,\n        dy: 0\n      };\n\n      for (i = 0, len = targets.length; i < len; i++) {\n        target = targets[i];\n\n        var range = target.range,\n          dx = target.x - page.x,\n          dy = target.y - page.y,\n          distance = hypot(dx, dy),\n          inRange = distance <= range;\n\n        // Infinite targets count as being out of range\n        // compared to non infinite ones that are in range\n        if (\n          range === Infinity &&\n          closest.inRange &&\n          closest.range !== Infinity\n        ) {\n          inRange = false;\n        }\n\n        if (\n          !closest.target ||\n          (inRange\n            ? // is the closest target in range?\n              closest.inRange && range !== Infinity\n              ? // the pointer is relatively deeper in this target\n                distance / range < closest.distance / closest.range\n              : // this target has Infinite range and the closest doesn't\n                (range === Infinity && closest.range !== Infinity) ||\n                // OR this target is closer that the previous closest\n                distance < closest.distance\n            : // The other is not in range and the pointer is closer to this target\n              !closest.inRange && distance < closest.distance)\n        ) {\n          if (range === Infinity) {\n            inRange = true;\n          }\n\n          closest.target = target;\n          closest.distance = distance;\n          closest.range = range;\n          closest.inRange = inRange;\n          closest.dx = dx;\n          closest.dy = dy;\n\n          status.range = range;\n        }\n      }\n\n      var snapChanged;\n\n      if (closest.target) {\n        snapChanged =\n          status.snappedX !== closest.target.x ||\n          status.snappedY !== closest.target.y;\n\n        status.snappedX = closest.target.x;\n        status.snappedY = closest.target.y;\n      } else {\n        snapChanged = true;\n\n        status.snappedX = NaN;\n        status.snappedY = NaN;\n      }\n\n      status.dx = closest.dx;\n      status.dy = closest.dy;\n\n      status.changed = snapChanged || (closest.inRange && !status.locked);\n      status.locked = closest.inRange;\n\n      return status;\n    },\n\n    setRestriction: function(pageCoords, status) {\n      var target = this.target,\n        restrict = target && target.options[this.prepared.name].restrict,\n        restriction = restrict && restrict.restriction,\n        page;\n\n      if (!restriction) {\n        return status;\n      }\n\n      status = status || this.restrictStatus;\n\n      page = status.useStatusXY\n        ? (page = {x: status.x, y: status.y})\n        : (page = extend({}, pageCoords));\n\n      if (status.snap && status.snap.locked) {\n        page.x += status.snap.dx || 0;\n        page.y += status.snap.dy || 0;\n      }\n\n      page.x -= this.inertiaStatus.resumeDx;\n      page.y -= this.inertiaStatus.resumeDy;\n\n      status.dx = 0;\n      status.dy = 0;\n      status.restricted = false;\n\n      var rect, restrictedX, restrictedY;\n\n      if (isString(restriction)) {\n        if (restriction === 'parent') {\n          restriction = parentElement(this.element);\n        } else if (restriction === 'self') {\n          restriction = target.getRect(this.element);\n        } else {\n          restriction = closest(this.element, restriction);\n        }\n\n        if (!restriction) {\n          return status;\n        }\n      }\n\n      if (isFunction(restriction)) {\n        restriction = restriction(page.x, page.y, this.element);\n      }\n\n      if (isElement(restriction)) {\n        restriction = getElementRect(restriction);\n      }\n\n      rect = restriction;\n\n      if (!restriction) {\n        restrictedX = page.x;\n        restrictedY = page.y;\n      }\n      // object is assumed to have\n      // x, y, width, height or\n      // left, top, right, bottom\n      else if ('x' in restriction && 'y' in restriction) {\n        restrictedX = Math.max(\n          Math.min(rect.x + rect.width - this.restrictOffset.right, page.x),\n          rect.x + this.restrictOffset.left\n        );\n        restrictedY = Math.max(\n          Math.min(rect.y + rect.height - this.restrictOffset.bottom, page.y),\n          rect.y + this.restrictOffset.top\n        );\n      } else {\n        restrictedX = Math.max(\n          Math.min(rect.right - this.restrictOffset.right, page.x),\n          rect.left + this.restrictOffset.left\n        );\n        restrictedY = Math.max(\n          Math.min(rect.bottom - this.restrictOffset.bottom, page.y),\n          rect.top + this.restrictOffset.top\n        );\n      }\n\n      status.dx = restrictedX - page.x;\n      status.dy = restrictedY - page.y;\n\n      status.changed =\n        status.restrictedX !== restrictedX ||\n        status.restrictedY !== restrictedY;\n      status.restricted = !!(status.dx || status.dy);\n\n      status.restrictedX = restrictedX;\n      status.restrictedY = restrictedY;\n\n      return status;\n    },\n\n    checkAndPreventDefault: function(event, interactable, element) {\n      if (!(interactable = interactable || this.target)) {\n        return;\n      }\n\n      var options = interactable.options,\n        prevent = options.preventDefault;\n\n      if (\n        prevent === 'auto' &&\n        element &&\n        !/^(input|select|textarea)$/i.test(event.target.nodeName)\n      ) {\n        // do not preventDefault on pointerdown if the prepared action is a drag\n        // and dragging can only start from a certain direction - this allows\n        // a touch to pan the viewport if a drag isn't in the right direction\n        if (\n          /down|start/i.test(event.type) &&\n          this.prepared.name === 'drag' &&\n          options.drag.axis !== 'xy'\n        ) {\n          return;\n        }\n\n        // with manualStart, only preventDefault while interacting\n        if (\n          options[this.prepared.name] &&\n          options[this.prepared.name].manualStart &&\n          !this.interacting()\n        ) {\n          return;\n        }\n\n        event.preventDefault();\n        return;\n      }\n\n      if (prevent === 'always') {\n        event.preventDefault();\n        return;\n      }\n    },\n\n    calcInertia: function(status) {\n      var inertiaOptions = this.target.options[this.prepared.name].inertia,\n        lambda = inertiaOptions.resistance,\n        inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n      status.x0 = this.prevEvent.pageX;\n      status.y0 = this.prevEvent.pageY;\n      status.t0 = status.startEvent.timeStamp / 1000;\n      status.sx = status.sy = 0;\n\n      status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n      status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n      status.te = inertiaDur;\n\n      status.lambda_v0 = lambda / status.v0;\n      status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n    },\n\n    autoScrollMove: function(pointer) {\n      if (\n        !(\n          this.interacting() && checkAutoScroll(this.target, this.prepared.name)\n        )\n      ) {\n        return;\n      }\n\n      if (this.inertiaStatus.active) {\n        autoScroll.x = autoScroll.y = 0;\n        return;\n      }\n\n      var top,\n        right,\n        bottom,\n        left,\n        options = this.target.options[this.prepared.name].autoScroll,\n        container = options.container || getWindow(this.element);\n\n      if (isWindow(container)) {\n        left = pointer.clientX < autoScroll.margin;\n        top = pointer.clientY < autoScroll.margin;\n        right = pointer.clientX > container.innerWidth - autoScroll.margin;\n        bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n      } else {\n        var rect = getElementClientRect(container);\n\n        left = pointer.clientX < rect.left + autoScroll.margin;\n        top = pointer.clientY < rect.top + autoScroll.margin;\n        right = pointer.clientX > rect.right - autoScroll.margin;\n        bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n      }\n\n      autoScroll.x = right ? 1 : left ? -1 : 0;\n      autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n      if (!autoScroll.isScrolling) {\n        // set the autoScroll properties to those of the target\n        autoScroll.margin = options.margin;\n        autoScroll.speed = options.speed;\n\n        autoScroll.start(this);\n      }\n    },\n\n    _updateEventTargets: function(target, currentTarget) {\n      this._eventTarget = target;\n      this._curEventTarget = currentTarget;\n    }\n  };\n\n  function getInteractionFromPointer(pointer, eventType, eventTarget) {\n    var i = 0,\n      len = interactions.length,\n      mouseEvent =\n        /mouse/i.test(pointer.pointerType || eventType) ||\n        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n        pointer.pointerType === 4,\n      interaction;\n\n    var id = getPointerId(pointer);\n\n    // try to resume inertia with a new pointer\n    if (/down|start/i.test(eventType)) {\n      for (i = 0; i < len; i++) {\n        interaction = interactions[i];\n\n        var element = eventTarget;\n\n        if (\n          interaction.inertiaStatus.active &&\n          interaction.target.options[interaction.prepared.name].inertia\n            .allowResume &&\n          interaction.mouse === mouseEvent\n        ) {\n          while (element) {\n            // if the element is the interaction element\n            if (element === interaction.element) {\n              return interaction;\n            }\n            element = parentElement(element);\n          }\n        }\n      }\n    }\n\n    // if it's a mouse interaction\n    if (mouseEvent || !(supportsTouch || supportsPointerEvent)) {\n      // find a mouse interaction that's not in inertia phase\n      for (i = 0; i < len; i++) {\n        if (interactions[i].mouse && !interactions[i].inertiaStatus.active) {\n          return interactions[i];\n        }\n      }\n\n      // find any interaction specifically for mouse.\n      // if the eventType is a mousedown, and inertia is active\n      // ignore the interaction\n      for (i = 0; i < len; i++) {\n        if (\n          interactions[i].mouse &&\n          !(/down/.test(eventType) && interactions[i].inertiaStatus.active)\n        ) {\n          return interaction;\n        }\n      }\n\n      // create a new interaction for mouse\n      interaction = new Interaction();\n      interaction.mouse = true;\n\n      return interaction;\n    }\n\n    // get interaction that has this pointer\n    for (i = 0; i < len; i++) {\n      if (contains(interactions[i].pointerIds, id)) {\n        return interactions[i];\n      }\n    }\n\n    // at this stage, a pointerUp should not return an interaction\n    if (/up|end|out/i.test(eventType)) {\n      return null;\n    }\n\n    // get first idle interaction\n    for (i = 0; i < len; i++) {\n      interaction = interactions[i];\n\n      if (\n        (!interaction.prepared.name ||\n          interaction.target.options.gesture.enabled) &&\n        !interaction.interacting() &&\n        !(!mouseEvent && interaction.mouse)\n      ) {\n        return interaction;\n      }\n    }\n\n    return new Interaction();\n  }\n\n  function doOnInteractions(method) {\n    return function(event) {\n      var interaction,\n        eventTarget = getActualElement(\n          event.path ? event.path[0] : event.target\n        ),\n        curEventTarget = getActualElement(event.currentTarget),\n        i;\n\n      if (supportsTouch && /touch/.test(event.type)) {\n        prevTouchTime = new Date().getTime();\n\n        for (i = 0; i < event.changedTouches.length; i++) {\n          var pointer = event.changedTouches[i];\n\n          interaction = getInteractionFromPointer(\n            pointer,\n            event.type,\n            eventTarget\n          );\n\n          if (!interaction) {\n            continue;\n          }\n\n          interaction._updateEventTargets(eventTarget, curEventTarget);\n\n          interaction[method](pointer, event, eventTarget, curEventTarget);\n        }\n      } else {\n        if (!supportsPointerEvent && /mouse/.test(event.type)) {\n          // ignore mouse events while touch interactions are active\n          for (i = 0; i < interactions.length; i++) {\n            if (!interactions[i].mouse && interactions[i].pointerIsDown) {\n              return;\n            }\n          }\n\n          // try to ignore mouse events that are simulated by the browser\n          // after a touch event\n          if (new Date().getTime() - prevTouchTime < 500) {\n            return;\n          }\n        }\n\n        interaction = getInteractionFromPointer(event, event.type, eventTarget);\n\n        if (!interaction) {\n          return;\n        }\n\n        interaction._updateEventTargets(eventTarget, curEventTarget);\n\n        interaction[method](event, event, eventTarget, curEventTarget);\n      }\n    };\n  }\n\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    var client,\n      page,\n      target = interaction.target,\n      snapStatus = interaction.snapStatus,\n      restrictStatus = interaction.restrictStatus,\n      pointers = interaction.pointers,\n      deltaSource = ((target && target.options) || defaultOptions).deltaSource,\n      sourceX = deltaSource + 'X',\n      sourceY = deltaSource + 'Y',\n      options = target ? target.options : defaultOptions,\n      origin = getOriginXY(target, element),\n      starting = phase === 'start',\n      ending = phase === 'end',\n      coords = starting ? interaction.startCoords : interaction.curCoords;\n\n    element = element || interaction.element;\n\n    page = extend({}, coords.page);\n    client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    var relativePoints =\n      options[action].snap && options[action].snap.relativePoints;\n\n    if (\n      checkSnap(target, action) &&\n      !(starting && relativePoints && relativePoints.length)\n    ) {\n      this.snap = {\n        range: snapStatus.range,\n        locked: snapStatus.locked,\n        x: snapStatus.snappedX,\n        y: snapStatus.snappedY,\n        realX: snapStatus.realX,\n        realY: snapStatus.realY,\n        dx: snapStatus.dx,\n        dy: snapStatus.dy\n      };\n\n      if (snapStatus.locked) {\n        page.x += snapStatus.dx;\n        page.y += snapStatus.dy;\n        client.x += snapStatus.dx;\n        client.y += snapStatus.dy;\n      }\n    }\n\n    if (\n      checkRestrict(target, action) &&\n      !(starting && options[action].restrict.elementRect) &&\n      restrictStatus.restricted\n    ) {\n      page.x += restrictStatus.dx;\n      page.y += restrictStatus.dy;\n      client.x += restrictStatus.dx;\n      client.y += restrictStatus.dy;\n\n      this.restrict = {\n        dx: restrictStatus.dx,\n        dy: restrictStatus.dy\n      };\n    }\n\n    this.pageX = page.x;\n    this.pageY = page.y;\n    this.clientX = client.x;\n    this.clientY = client.y;\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.t0 = interaction.downTimes[0];\n    this.type = action + (phase || '');\n\n    this.interaction = interaction;\n    this.interactable = target;\n\n    var inertiaStatus = interaction.inertiaStatus;\n\n    if (inertiaStatus.active) {\n      this.detail = 'inertia';\n    }\n\n    if (related) {\n      this.relatedTarget = related;\n    }\n\n    // end event dx, dy is difference between start and end points\n    if (ending) {\n      if (deltaSource === 'client') {\n        this.dx = client.x - interaction.startCoords.client.x;\n        this.dy = client.y - interaction.startCoords.client.y;\n      } else {\n        this.dx = page.x - interaction.startCoords.page.x;\n        this.dy = page.y - interaction.startCoords.page.y;\n      }\n    } else if (starting) {\n      this.dx = 0;\n      this.dy = 0;\n    }\n    // copy properties from previousmove if starting inertia\n    else if (phase === 'inertiastart') {\n      this.dx = interaction.prevEvent.dx;\n      this.dy = interaction.prevEvent.dy;\n    } else {\n      if (deltaSource === 'client') {\n        this.dx = client.x - interaction.prevEvent.clientX;\n        this.dy = client.y - interaction.prevEvent.clientY;\n      } else {\n        this.dx = page.x - interaction.prevEvent.pageX;\n        this.dy = page.y - interaction.prevEvent.pageY;\n      }\n    }\n    if (\n      interaction.prevEvent &&\n      interaction.prevEvent.detail === 'inertia' &&\n      !inertiaStatus.active &&\n      options[action].inertia &&\n      options[action].inertia.zeroResumeDelta\n    ) {\n      inertiaStatus.resumeDx += this.dx;\n      inertiaStatus.resumeDy += this.dy;\n\n      this.dx = this.dy = 0;\n    }\n\n    if (action === 'resize' && interaction.resizeAxes) {\n      if (options.resize.square) {\n        if (interaction.resizeAxes === 'y') {\n          this.dx = this.dy;\n        } else {\n          this.dy = this.dx;\n        }\n        this.axes = 'xy';\n      } else {\n        this.axes = interaction.resizeAxes;\n\n        if (interaction.resizeAxes === 'x') {\n          this.dy = 0;\n        } else if (interaction.resizeAxes === 'y') {\n          this.dx = 0;\n        }\n      }\n    } else if (action === 'gesture') {\n      this.touches = [pointers[0], pointers[1]];\n\n      if (starting) {\n        this.distance = touchDistance(pointers, deltaSource);\n        this.box = touchBBox(pointers);\n        this.scale = 1;\n        this.ds = 0;\n        this.angle = touchAngle(pointers, undefined, deltaSource);\n        this.da = 0;\n      } else if (ending || event instanceof InteractEvent) {\n        this.distance = interaction.prevEvent.distance;\n        this.box = interaction.prevEvent.box;\n        this.scale = interaction.prevEvent.scale;\n        this.ds = this.scale - 1;\n        this.angle = interaction.prevEvent.angle;\n        this.da = this.angle - interaction.gesture.startAngle;\n      } else {\n        this.distance = touchDistance(pointers, deltaSource);\n        this.box = touchBBox(pointers);\n        this.scale = this.distance / interaction.gesture.startDistance;\n        this.angle = touchAngle(\n          pointers,\n          interaction.gesture.prevAngle,\n          deltaSource\n        );\n\n        this.ds = this.scale - interaction.gesture.prevScale;\n        this.da = this.angle - interaction.gesture.prevAngle;\n      }\n    }\n\n    if (starting) {\n      this.timeStamp = interaction.downTimes[0];\n      this.dt = 0;\n      this.duration = 0;\n      this.speed = 0;\n      this.velocityX = 0;\n      this.velocityY = 0;\n    } else if (phase === 'inertiastart') {\n      this.timeStamp = interaction.prevEvent.timeStamp;\n      this.dt = interaction.prevEvent.dt;\n      this.duration = interaction.prevEvent.duration;\n      this.speed = interaction.prevEvent.speed;\n      this.velocityX = interaction.prevEvent.velocityX;\n      this.velocityY = interaction.prevEvent.velocityY;\n    } else {\n      this.timeStamp = new Date().getTime();\n      this.dt = this.timeStamp - interaction.prevEvent.timeStamp;\n      this.duration = this.timeStamp - interaction.downTimes[0];\n\n      if (event instanceof InteractEvent) {\n        var dx = this[sourceX] - interaction.prevEvent[sourceX],\n          dy = this[sourceY] - interaction.prevEvent[sourceY],\n          dt = this.dt / 1000;\n\n        this.speed = hypot(dx, dy) / dt;\n        this.velocityX = dx / dt;\n        this.velocityY = dy / dt;\n      }\n      // if normal move or end event, use previous user event coords\n      else {\n        // speed and velocity in pixels per second\n        this.speed = interaction.pointerDelta[deltaSource].speed;\n        this.velocityX = interaction.pointerDelta[deltaSource].vx;\n        this.velocityY = interaction.pointerDelta[deltaSource].vy;\n      }\n    }\n\n    if (\n      (ending || phase === 'inertiastart') &&\n      interaction.prevEvent.speed > 600 &&\n      this.timeStamp - interaction.prevEvent.timeStamp < 150\n    ) {\n      var angle =\n          (180 *\n            Math.atan2(\n              interaction.prevEvent.velocityY,\n              interaction.prevEvent.velocityX\n            )) /\n          Math.PI,\n        overlap = 22.5;\n\n      if (angle < 0) {\n        angle += 360;\n      }\n\n      var left = 135 - overlap <= angle && angle < 225 + overlap,\n        up = 225 - overlap <= angle && angle < 315 + overlap,\n        right = !left && (315 - overlap <= angle || angle < 45 + overlap),\n        down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n      this.swipe = {\n        up: up,\n        down: down,\n        left: left,\n        right: right,\n        angle: angle,\n        speed: interaction.prevEvent.speed,\n        velocity: {\n          x: interaction.prevEvent.velocityX,\n          y: interaction.prevEvent.velocityY\n        }\n      };\n    }\n  }\n\n  InteractEvent.prototype = {\n    preventDefault: blank,\n    stopImmediatePropagation: function() {\n      this.immediatePropagationStopped = this.propagationStopped = true;\n    },\n    stopPropagation: function() {\n      this.propagationStopped = true;\n    }\n  };\n\n  function preventOriginalDefault() {\n    this.originalEvent.preventDefault();\n  }\n\n  function getActionCursor(action) {\n    var cursor = '';\n\n    if (action.name === 'drag') {\n      cursor = actionCursors.drag;\n    }\n    if (action.name === 'resize') {\n      if (action.axis) {\n        cursor = actionCursors[action.name + action.axis];\n      } else if (action.edges) {\n        var cursorKey = 'resize',\n          edgeNames = ['top', 'bottom', 'left', 'right'];\n\n        for (var i = 0; i < 4; i++) {\n          if (action.edges[edgeNames[i]]) {\n            cursorKey += edgeNames[i];\n          }\n        }\n\n        cursor = actionCursors[cursorKey];\n      }\n    }\n\n    return cursor;\n  }\n\n  function checkResizeEdge(\n    name,\n    value,\n    page,\n    element,\n    interactableElement,\n    rect,\n    margin\n  ) {\n    // false, '', undefined, null\n    if (!value) {\n      return false;\n    }\n\n    // true value, use pointer coords and element rect\n    if (value === true) {\n      // if dimensions are negative, \"switch\" edges\n      var width = isNumber(rect.width) ? rect.width : rect.right - rect.left,\n        height = isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n      if (width < 0) {\n        if (name === 'left') {\n          name = 'right';\n        } else if (name === 'right') {\n          name = 'left';\n        }\n      }\n      if (height < 0) {\n        if (name === 'top') {\n          name = 'bottom';\n        } else if (name === 'bottom') {\n          name = 'top';\n        }\n      }\n\n      if (name === 'left') {\n        return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n      }\n      if (name === 'top') {\n        return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n      }\n\n      if (name === 'right') {\n        return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n      }\n      if (name === 'bottom') {\n        return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n      }\n    }\n\n    // the remaining checks require an element\n    if (!isElement(element)) {\n      return false;\n    }\n\n    return isElement(value)\n      ? // the value is an element to use as a resize handle\n        value === element\n      : // otherwise check if element matches value as selector\n        matchesUpTo(element, value, interactableElement);\n  }\n\n  function defaultActionChecker(pointer, interaction, element) {\n    var rect = this.getRect(element),\n      shouldResize = false,\n      action = null,\n      resizeAxes = null,\n      resizeEdges,\n      page = extend({}, interaction.curCoords.page),\n      options = this.options;\n\n    if (!rect) {\n      return null;\n    }\n\n    if (actionIsEnabled.resize && options.resize.enabled) {\n      var resizeOptions = options.resize;\n\n      resizeEdges = {\n        left: false,\n        right: false,\n        top: false,\n        bottom: false\n      };\n\n      // if using resize.edges\n      if (isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(\n            edge,\n            resizeOptions.edges[edge],\n            page,\n            interaction._eventTarget,\n            element,\n            rect,\n            resizeOptions.margin || margin\n          );\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        shouldResize =\n          resizeEdges.left ||\n          resizeEdges.right ||\n          resizeEdges.top ||\n          resizeEdges.bottom;\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - margin,\n          bottom = options.resize.axis !== 'x' && page.y > rect.bottom - margin;\n\n        shouldResize = right || bottom;\n        resizeAxes = (right ? 'x' : '') + (bottom ? 'y' : '');\n      }\n    }\n\n    action = shouldResize\n      ? 'resize'\n      : actionIsEnabled.drag && options.drag.enabled\n      ? 'drag'\n      : null;\n\n    if (\n      actionIsEnabled.gesture &&\n      interaction.pointerIds.length >= 2 &&\n      !(interaction.dragging || interaction.resizing)\n    ) {\n      action = 'gesture';\n    }\n\n    if (action) {\n      return {\n        name: action,\n        axis: resizeAxes,\n        edges: resizeEdges\n      };\n    }\n\n    return null;\n  }\n\n  // Check if action is enabled globally and the current target supports it\n  // If so, return the validated action. Otherwise, return null\n  function validateAction(action, interactable) {\n    if (!isObject(action)) {\n      return null;\n    }\n\n    var actionName = action.name,\n      options = interactable.options;\n\n    if (\n      ((actionName === 'resize' && options.resize.enabled) ||\n        (actionName === 'drag' && options.drag.enabled) ||\n        (actionName === 'gesture' && options.gesture.enabled)) &&\n      actionIsEnabled[actionName]\n    ) {\n      if (actionName === 'resize' || actionName === 'resizeyx') {\n        actionName = 'resizexy';\n      }\n\n      return action;\n    }\n    return null;\n  }\n\n  var listeners = {},\n    interactionListeners = [\n      'dragStart',\n      'dragMove',\n      'resizeStart',\n      'resizeMove',\n      'gestureStart',\n      'gestureMove',\n      'pointerOver',\n      'pointerOut',\n      'pointerHover',\n      'selectorDown',\n      'pointerDown',\n      'pointerMove',\n      'pointerUp',\n      'pointerCancel',\n      'pointerEnd',\n      'addPointer',\n      'removePointer',\n      'recordPointer',\n      'autoScrollMove'\n    ];\n\n  for (var i = 0, len = interactionListeners.length; i < len; i++) {\n    var name = interactionListeners[i];\n\n    listeners[name] = doOnInteractions(name);\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener(event, useCapture) {\n    var fakeEvent = {},\n      delegated = delegatedEvents[event.type],\n      eventTarget = getActualElement(event.path ? event.path[0] : event.target),\n      element = eventTarget;\n\n    useCapture = useCapture ? true : false;\n\n    // duplicate the event so that currentTarget can be changed\n    for (var prop in event) {\n      fakeEvent[prop] = event[prop];\n    }\n\n    fakeEvent.originalEvent = event;\n    fakeEvent.preventDefault = preventOriginalDefault;\n\n    // climb up document tree looking for selector matches\n    while (isElement(element)) {\n      for (var i = 0; i < delegated.selectors.length; i++) {\n        var selector = delegated.selectors[i],\n          context = delegated.contexts[i];\n\n        if (\n          matchesSelector(element, selector) &&\n          nodeContains(context, eventTarget) &&\n          nodeContains(context, element)\n        ) {\n          var listeners = delegated.listeners[i];\n\n          fakeEvent.currentTarget = element;\n\n          for (var j = 0; j < listeners.length; j++) {\n            if (listeners[j][1] === useCapture) {\n              listeners[j][0](fakeEvent);\n            }\n          }\n        }\n      }\n\n      element = parentElement(element);\n    }\n  }\n\n  function delegateUseCapture(event) {\n    return delegateListener.call(this, event, true);\n  }\n\n  interactables.indexOfElement = function indexOfElement(element, context) {\n    context = context || document;\n\n    for (var i = 0; i < this.length; i++) {\n      var interactable = this[i];\n\n      if (\n        (interactable.selector === element &&\n          interactable._context === context) ||\n        (!interactable.selector && interactable._element === element)\n      ) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  interactables.get = function interactableGet(element, options) {\n    return this[this.indexOfElement(element, options && options.context)];\n  };\n\n  interactables.forEachSelector = function(callback) {\n    for (var i = 0; i < this.length; i++) {\n      var interactable = this[i];\n\n      if (!interactable.selector) {\n        continue;\n      }\n\n      var ret = callback(\n        interactable,\n        interactable.selector,\n        interactable._context,\n        i,\n        this\n      );\n\n      if (ret !== undefined) {\n        return ret;\n      }\n    }\n  };\n\n  /*\\\n     * interact\n     [ method ]\n     *\n     * The methods of this variable can be used to set elements as\n     * interactables and also to change various default settings.\n     *\n     * Calling it as a function and passing an element or a valid CSS selector\n     * string returns an Interactable object which has various methods to\n     * configure it.\n     *\n     - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n     = (object) An @Interactable\n     *\n     > Usage\n     | interact(document.getElementById('draggable')).draggable(true);\n     |\n     | var rectables = interact('rect');\n     | rectables\n     |     .gesturable(true)\n     |     .on('gesturemove', function (event) {\n     |         // something cool...\n     |     })\n     |     .autoScroll(true);\n    \\*/\n  function interact(element, options) {\n    return (\n      interactables.get(element, options) || new Interactable(element, options)\n    );\n  }\n\n  /*\\\n     * Interactable\n     [ property ]\n     **\n     * Object type returned by @interact\n    \\*/\n  function Interactable(element, options) {\n    this._element = element;\n    this._iEvents = this._iEvents || {};\n\n    var _window;\n\n    if (trySelector(element)) {\n      this.selector = element;\n\n      var context = options && options.context;\n\n      _window = context ? getWindow(context) : window;\n\n      if (\n        context &&\n        (_window.Node\n          ? context instanceof _window.Node\n          : isElement(context) || context === _window.document)\n      ) {\n        this._context = context;\n      }\n    } else {\n      _window = getWindow(element);\n\n      if (isElement(element, _window)) {\n        if (supportsPointerEvent) {\n          events.add(this._element, pEventTypes.down, listeners.pointerDown);\n          events.add(this._element, pEventTypes.move, listeners.pointerHover);\n        } else {\n          events.add(this._element, 'mousedown', listeners.pointerDown);\n          events.add(this._element, 'mousemove', listeners.pointerHover);\n          events.add(this._element, 'touchstart', listeners.pointerDown);\n          events.add(this._element, 'touchmove', listeners.pointerHover);\n        }\n      }\n    }\n\n    this._doc = _window.document;\n\n    if (!contains(documents, this._doc)) {\n      listenToDocument(this._doc);\n    }\n\n    interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype = {\n    setOnEvents: function(action, phases) {\n      if (action === 'drop') {\n        if (isFunction(phases.ondrop)) {\n          this.ondrop = phases.ondrop;\n        }\n        if (isFunction(phases.ondropactivate)) {\n          this.ondropactivate = phases.ondropactivate;\n        }\n        if (isFunction(phases.ondropdeactivate)) {\n          this.ondropdeactivate = phases.ondropdeactivate;\n        }\n        if (isFunction(phases.ondragenter)) {\n          this.ondragenter = phases.ondragenter;\n        }\n        if (isFunction(phases.ondragleave)) {\n          this.ondragleave = phases.ondragleave;\n        }\n        if (isFunction(phases.ondropmove)) {\n          this.ondropmove = phases.ondropmove;\n        }\n      } else {\n        action = 'on' + action;\n\n        if (isFunction(phases.onstart)) {\n          this[action + 'start'] = phases.onstart;\n        }\n        if (isFunction(phases.onmove)) {\n          this[action + 'move'] = phases.onmove;\n        }\n        if (isFunction(phases.onend)) {\n          this[action + 'end'] = phases.onend;\n        }\n        if (isFunction(phases.oninertiastart)) {\n          this[action + 'inertiastart'] = phases.oninertiastart;\n        }\n      }\n\n      return this;\n    },\n\n    /*\\\n         * Interactable.draggable\n         [ method ]\n         *\n         * Gets or sets whether drag actions can be performed on the\n         * Interactable\n         *\n         = (boolean) Indicates if this can be the target of drag events\n         | var isDraggable = interact('ul li').draggable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n         = (object) This Interactable\n         | interact(element).draggable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     // the axis in which the first movement must be\n         |     // for the drag sequence to start\n         |     // 'xy' by default - any direction\n         |     axis: 'x' || 'y' || 'xy',\n         |\n         |     // max number of drags that can happen concurrently\n         |     // with elements of this Interactable. Infinity by default\n         |     max: Infinity,\n         |\n         |     // max number of drags that can target the same element+Interactable\n         |     // 1 by default\n         |     maxPerElement: 2\n         | });\n        \\*/\n    draggable: function(options) {\n      if (isObject(options)) {\n        this.options.drag.enabled = options.enabled === false ? false : true;\n        this.setPerAction('drag', options);\n        this.setOnEvents('drag', options);\n\n        if (/^x$|^y$|^xy$/.test(options.axis)) {\n          this.options.drag.axis = options.axis;\n        } else if (options.axis === null) {\n          delete this.options.drag.axis;\n        }\n\n        return this;\n      }\n\n      if (isBool(options)) {\n        this.options.drag.enabled = options;\n\n        return this;\n      }\n\n      return this.options.drag;\n    },\n\n    setPerAction: function(action, options) {\n      // for all the default per-action options\n      for (var option in options) {\n        // if this option exists for this action\n        if (option in defaultOptions[action]) {\n          // if the option in the options arg is an object value\n          if (isObject(options[option])) {\n            // duplicate the object\n            this.options[action][option] = extend(\n              this.options[action][option] || {},\n              options[option]\n            );\n\n            if (\n              isObject(defaultOptions.perAction[option]) &&\n              'enabled' in defaultOptions.perAction[option]\n            ) {\n              this.options[action][option].enabled =\n                options[option].enabled === false ? false : true;\n            }\n          } else if (\n            isBool(options[option]) &&\n            isObject(defaultOptions.perAction[option])\n          ) {\n            this.options[action][option].enabled = options[option];\n          } else if (options[option] !== undefined) {\n            // or if it's not undefined, do a plain assignment\n            this.options[action][option] = options[option];\n          }\n        }\n      }\n    },\n\n    /*\\\n         * Interactable.dropzone\n         [ method ]\n         *\n         * Returns or sets whether elements can be dropped onto this\n         * Interactable to trigger drop events\n         *\n         * Dropzones can receive the following events:\n         *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n         *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n         *  - `dragmove` when a draggable that has entered the dropzone is moved\n         *  - `drop` when a draggable is dropped into this dropzone\n         *\n         *  Use the `accept` option to allow only elements that match the given CSS selector or element.\n         *\n         *  Use the `overlap` option to set how drops are checked for. The allowed values are:\n         *   - `'pointer'`, the pointer must be over the dropzone (default)\n         *   - `'center'`, the draggable element's center must be over the dropzone\n         *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n         *       e.g. `0.5` for drop to happen when half of the area of the\n         *       draggable is over the dropzone\n         *\n         - options (boolean | object | null) #optional The new value to be set.\n         | interact('.drop').dropzone({\n         |   accept: '.can-drop' || document.getElementById('single-drop'),\n         |   overlap: 'pointer' || 'center' || zeroToOne\n         | }\n         = (boolean | object) The current setting or this Interactable\n        \\*/\n    dropzone: function(options) {\n      if (isObject(options)) {\n        this.options.drop.enabled = options.enabled === false ? false : true;\n        this.setOnEvents('drop', options);\n\n        if (/^(pointer|center)$/.test(options.overlap)) {\n          this.options.drop.overlap = options.overlap;\n        } else if (isNumber(options.overlap)) {\n          this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n        }\n        if ('accept' in options) {\n          this.options.drop.accept = options.accept;\n        }\n        if ('checker' in options) {\n          this.options.drop.checker = options.checker;\n        }\n\n        return this;\n      }\n\n      if (isBool(options)) {\n        this.options.drop.enabled = options;\n\n        return this;\n      }\n\n      return this.options.drop;\n    },\n\n    dropCheck: function(\n      dragEvent,\n      event,\n      draggable,\n      draggableElement,\n      dropElement,\n      rect\n    ) {\n      var dropped = false;\n\n      // if the dropzone has no rect (eg. display: none)\n      // call the custom dropChecker or just return false\n      if (!(rect = rect || this.getRect(dropElement))) {\n        return this.options.drop.checker\n          ? this.options.drop.checker(\n              dragEvent,\n              event,\n              dropped,\n              this,\n              dropElement,\n              draggable,\n              draggableElement\n            )\n          : false;\n      }\n\n      var dropOverlap = this.options.drop.overlap;\n\n      if (dropOverlap === 'pointer') {\n        var page = getPageXY(dragEvent),\n          origin = getOriginXY(draggable, draggableElement),\n          horizontal,\n          vertical;\n\n        page.x += origin.x;\n        page.y += origin.y;\n\n        horizontal = page.x > rect.left && page.x < rect.right;\n        vertical = page.y > rect.top && page.y < rect.bottom;\n\n        dropped = horizontal && vertical;\n      }\n\n      var dragRect = draggable.getRect(draggableElement);\n\n      if (dropOverlap === 'center') {\n        var cx = dragRect.left + dragRect.width / 2,\n          cy = dragRect.top + dragRect.height / 2;\n\n        dropped =\n          cx >= rect.left &&\n          cx <= rect.right &&\n          cy >= rect.top &&\n          cy <= rect.bottom;\n      }\n\n      if (isNumber(dropOverlap)) {\n        var overlapArea =\n            Math.max(\n              0,\n              Math.min(rect.right, dragRect.right) -\n                Math.max(rect.left, dragRect.left)\n            ) *\n            Math.max(\n              0,\n              Math.min(rect.bottom, dragRect.bottom) -\n                Math.max(rect.top, dragRect.top)\n            ),\n          overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n        dropped = overlapRatio >= dropOverlap;\n      }\n\n      if (this.options.drop.checker) {\n        dropped = this.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          this,\n          dropElement,\n          draggable,\n          draggableElement\n        );\n      }\n\n      return dropped;\n    },\n\n    /*\\\n         * Interactable.dropChecker\n         [ method ]\n         *\n         * DEPRECATED. Use interactable.dropzone({ checker: function... }) instead.\n         *\n         * Gets or sets the function used to check if a dragged element is\n         * over this Interactable.\n         *\n         - checker (function) #optional The function that will be called when checking for a drop\n         = (Function | Interactable) The checker function or this Interactable\n         *\n         * The checker function takes the following arguments:\n         *\n         - dragEvent (InteractEvent) The related dragmove or dragend event\n         - event (TouchEvent | PointerEvent | MouseEvent) The user move/up/end Event related to the dragEvent\n         - dropped (boolean) The value from the default drop checker\n         - dropzone (Interactable) The dropzone interactable\n         - dropElement (Element) The dropzone element\n         - draggable (Interactable) The Interactable being dragged\n         - draggableElement (Element) The actual element that's being dragged\n         *\n         > Usage:\n         | interact(target)\n         | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n         |                       event,             // TouchEvent/PointerEvent/MouseEvent\n         |                       dropped,           // bool result of the default checker\n         |                       dropzone,          // dropzone Interactable\n         |                       dropElement,       // dropzone elemnt\n         |                       draggable,         // draggable Interactable\n         |                       draggableElement) {// draggable element\n         |\n         |   return dropped && event.target.hasAttribute('allow-drop');\n         | }\n        \\*/\n    dropChecker: function(checker) {\n      if (isFunction(checker)) {\n        this.options.drop.checker = checker;\n\n        return this;\n      }\n      if (checker === null) {\n        delete this.options.getRect;\n\n        return this;\n      }\n\n      return this.options.drop.checker;\n    },\n\n    /*\\\n         * Interactable.accept\n         [ method ]\n         *\n         * Deprecated. add an `accept` property to the options object passed to\n         * @Interactable.dropzone instead.\n         *\n         * Gets or sets the Element or CSS selector match that this\n         * Interactable accepts if it is a dropzone.\n         *\n         - newValue (Element | string | null) #optional\n         * If it is an Element, then only that element can be dropped into this dropzone.\n         * If it is a string, the element being dragged must match it as a selector.\n         * If it is null, the accept options is cleared - it accepts any element.\n         *\n         = (string | Element | null | Interactable) The current accept option if given `undefined` or this Interactable\n        \\*/\n    accept: function(newValue) {\n      if (isElement(newValue)) {\n        this.options.drop.accept = newValue;\n\n        return this;\n      }\n\n      // test if it is a valid CSS selector\n      if (trySelector(newValue)) {\n        this.options.drop.accept = newValue;\n\n        return this;\n      }\n\n      if (newValue === null) {\n        delete this.options.drop.accept;\n\n        return this;\n      }\n\n      return this.options.drop.accept;\n    },\n\n    /*\\\n         * Interactable.resizable\n         [ method ]\n         *\n         * Gets or sets whether resize actions can be performed on the\n         * Interactable\n         *\n         = (boolean) Indicates if this can be the target of resize elements\n         | var isResizeable = interact('input[type=text]').resizable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n         = (object) This Interactable\n         | interact(element).resizable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     edges: {\n         |       top   : true,       // Use pointer coords to check for resize.\n         |       left  : false,      // Disable resizing from left edge.\n         |       bottom: '.resize-s',// Resize if pointer target matches selector\n         |       right : handleEl    // Resize if pointer target is the given Element\n         |     },\n         |\n         |     // Width and height can be adjusted independently. When `true`, width and\n         |     // height are adjusted at a 1:1 ratio.\n         |     square: false,\n         |\n         |     // Width and height can be adjusted independently. When `true`, width and\n         |     // height maintain the aspect ratio they had when resizing started.\n         |     preserveAspectRatio: false,\n         |\n         |     // a value of 'none' will limit the resize rect to a minimum of 0x0\n         |     // 'negate' will allow the rect to have negative width/height\n         |     // 'reposition' will keep the width/height positive by swapping\n         |     // the top and bottom edges and/or swapping the left and right edges\n         |     invert: 'none' || 'negate' || 'reposition'\n         |\n         |     // limit multiple resizes.\n         |     // See the explanation in the @Interactable.draggable example\n         |     max: Infinity,\n         |     maxPerElement: 1,\n         | });\n        \\*/\n    resizable: function(options) {\n      if (isObject(options)) {\n        this.options.resize.enabled = options.enabled === false ? false : true;\n        this.setPerAction('resize', options);\n        this.setOnEvents('resize', options);\n\n        if (/^x$|^y$|^xy$/.test(options.axis)) {\n          this.options.resize.axis = options.axis;\n        } else if (options.axis === null) {\n          this.options.resize.axis = defaultOptions.resize.axis;\n        }\n\n        if (isBool(options.preserveAspectRatio)) {\n          this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n        } else if (isBool(options.square)) {\n          this.options.resize.square = options.square;\n        }\n\n        return this;\n      }\n      if (isBool(options)) {\n        this.options.resize.enabled = options;\n\n        return this;\n      }\n      return this.options.resize;\n    },\n\n    /*\\\n         * Interactable.squareResize\n         [ method ]\n         *\n         * Deprecated. Add a `square: true || false` property to @Interactable.resizable instead\n         *\n         * Gets or sets whether resizing is forced 1:1 aspect\n         *\n         = (boolean) Current setting\n         *\n         * or\n         *\n         - newValue (boolean) #optional\n         = (object) this Interactable\n        \\*/\n    squareResize: function(newValue) {\n      if (isBool(newValue)) {\n        this.options.resize.square = newValue;\n\n        return this;\n      }\n\n      if (newValue === null) {\n        delete this.options.resize.square;\n\n        return this;\n      }\n\n      return this.options.resize.square;\n    },\n\n    /*\\\n         * Interactable.gesturable\n         [ method ]\n         *\n         * Gets or sets whether multitouch gestures can be performed on the\n         * Interactable's element\n         *\n         = (boolean) Indicates if this can be the target of gesture events\n         | var isGestureable = interact(element).gesturable();\n         * or\n         - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n         = (object) this Interactable\n         | interact(element).gesturable({\n         |     onstart: function (event) {},\n         |     onmove : function (event) {},\n         |     onend  : function (event) {},\n         |\n         |     // limit multiple gestures.\n         |     // See the explanation in @Interactable.draggable example\n         |     max: Infinity,\n         |     maxPerElement: 1,\n         | });\n        \\*/\n    gesturable: function(options) {\n      if (isObject(options)) {\n        this.options.gesture.enabled = options.enabled === false ? false : true;\n        this.setPerAction('gesture', options);\n        this.setOnEvents('gesture', options);\n\n        return this;\n      }\n\n      if (isBool(options)) {\n        this.options.gesture.enabled = options;\n\n        return this;\n      }\n\n      return this.options.gesture;\n    },\n\n    /*\\\n         * Interactable.autoScroll\n         [ method ]\n         **\n         * Deprecated. Add an `autoscroll` property to the options object\n         * passed to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets whether dragging and resizing near the edges of the\n         * window/container trigger autoScroll for this Interactable\n         *\n         = (object) Object with autoScroll properties\n         *\n         * or\n         *\n         - options (object | boolean) #optional\n         * options can be:\n         * - an object with margin, distance and interval properties,\n         * - true or false to enable or disable autoScroll or\n         = (Interactable) this Interactable\n        \\*/\n    autoScroll: function(options) {\n      if (isObject(options)) {\n        options = extend({actions: ['drag', 'resize']}, options);\n      } else if (isBool(options)) {\n        options = {actions: ['drag', 'resize'], enabled: options};\n      }\n\n      return this.setOptions('autoScroll', options);\n    },\n\n    /*\\\n         * Interactable.snap\n         [ method ]\n         **\n         * Deprecated. Add a `snap` property to the options object passed\n         * to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets if and how action coordinates are snapped. By\n         * default, snapping is relative to the pointer coordinates. You can\n         * change this by setting the\n         * [`elementOrigin`](https://github.com/taye/interact.js/pull/72).\n         **\n         = (boolean | object) `false` if snap is disabled; object with snap properties if snap is enabled\n         **\n         * or\n         **\n         - options (object | boolean | null) #optional\n         = (Interactable) this Interactable\n         > Usage\n         | interact(document.querySelector('#thing')).snap({\n         |     targets: [\n         |         // snap to this specific point\n         |         {\n         |             x: 100,\n         |             y: 100,\n         |             range: 25\n         |         },\n         |         // give this function the x and y page coords and snap to the object returned\n         |         function (x, y) {\n         |             return {\n         |                 x: x,\n         |                 y: (75 + 50 * Math.sin(x * 0.04)),\n         |                 range: 40\n         |             };\n         |         },\n         |         // create a function that snaps to a grid\n         |         interact.createSnapGrid({\n         |             x: 50,\n         |             y: 50,\n         |             range: 10,              // optional\n         |             offset: { x: 5, y: 10 } // optional\n         |         })\n         |     ],\n         |     // do not snap during normal movement.\n         |     // Instead, trigger only one snapped move event\n         |     // immediately before the end event.\n         |     endOnly: true,\n         |\n         |     relativePoints: [\n         |         { x: 0, y: 0 },  // snap relative to the top left of the element\n         |         { x: 1, y: 1 },  // and also to the bottom right\n         |     ],\n         |\n         |     // offset the snap target coordinates\n         |     // can be an object with x/y or 'startCoords'\n         |     offset: { x: 50, y: 50 }\n         |   }\n         | });\n        \\*/\n    snap: function(options) {\n      var ret = this.setOptions('snap', options);\n\n      if (ret === this) {\n        return this;\n      }\n\n      return ret.drag;\n    },\n\n    setOptions: function(option, options) {\n      var actions =\n        options && isArray(options.actions) ? options.actions : ['drag'];\n\n      var i;\n\n      if (isObject(options) || isBool(options)) {\n        for (i = 0; i < actions.length; i++) {\n          var action = /resize/.test(actions[i]) ? 'resize' : actions[i];\n\n          if (!isObject(this.options[action])) {\n            continue;\n          }\n\n          var thisOption = this.options[action][option];\n\n          if (isObject(options)) {\n            extend(thisOption, options);\n            thisOption.enabled = options.enabled === false ? false : true;\n\n            if (option === 'snap') {\n              if (thisOption.mode === 'grid') {\n                thisOption.targets = [\n                  interact.createSnapGrid(\n                    extend(\n                      {\n                        offset: thisOption.gridOffset || {x: 0, y: 0}\n                      },\n                      thisOption.grid || {}\n                    )\n                  )\n                ];\n              } else if (thisOption.mode === 'anchor') {\n                thisOption.targets = thisOption.anchors;\n              } else if (thisOption.mode === 'path') {\n                thisOption.targets = thisOption.paths;\n              }\n\n              if ('elementOrigin' in options) {\n                thisOption.relativePoints = [options.elementOrigin];\n              }\n            }\n          } else if (isBool(options)) {\n            thisOption.enabled = options;\n          }\n        }\n\n        return this;\n      }\n\n      var ret = {},\n        allActions = ['drag', 'resize', 'gesture'];\n\n      for (i = 0; i < allActions.length; i++) {\n        if (option in defaultOptions[allActions[i]]) {\n          ret[allActions[i]] = this.options[allActions[i]][option];\n        }\n      }\n\n      return ret;\n    },\n\n    /*\\\n         * Interactable.inertia\n         [ method ]\n         **\n         * Deprecated. Add an `inertia` property to the options object passed\n         * to @Interactable.draggable or @Interactable.resizable instead.\n         *\n         * Returns or sets if and how events continue to run after the pointer is released\n         **\n         = (boolean | object) `false` if inertia is disabled; `object` with inertia properties if inertia is enabled\n         **\n         * or\n         **\n         - options (object | boolean | null) #optional\n         = (Interactable) this Interactable\n         > Usage\n         | // enable and use default settings\n         | interact(element).inertia(true);\n         |\n         | // enable and use custom settings\n         | interact(element).inertia({\n         |     // value greater than 0\n         |     // high values slow the object down more quickly\n         |     resistance     : 16,\n         |\n         |     // the minimum launch speed (pixels per second) that results in inertia start\n         |     minSpeed       : 200,\n         |\n         |     // inertia will stop when the object slows down to this speed\n         |     endSpeed       : 20,\n         |\n         |     // boolean; should actions be resumed when the pointer goes down during inertia\n         |     allowResume    : true,\n         |\n         |     // boolean; should the jump when resuming from inertia be ignored in event.dx/dy\n         |     zeroResumeDelta: false,\n         |\n         |     // if snap/restrict are set to be endOnly and inertia is enabled, releasing\n         |     // the pointer without triggering inertia will animate from the release\n         |     // point to the snaped/restricted point in the given amount of time (ms)\n         |     smoothEndDuration: 300,\n         |\n         |     // an array of action types that can have inertia (no gesture)\n         |     actions        : ['drag', 'resize']\n         | });\n         |\n         | // reset custom settings and use all defaults\n         | interact(element).inertia(null);\n        \\*/\n    inertia: function(options) {\n      var ret = this.setOptions('inertia', options);\n\n      if (ret === this) {\n        return this;\n      }\n\n      return ret.drag;\n    },\n\n    getAction: function(pointer, event, interaction, element) {\n      var action = this.defaultActionChecker(pointer, interaction, element);\n\n      if (this.options.actionChecker) {\n        return this.options.actionChecker(\n          pointer,\n          event,\n          action,\n          this,\n          element,\n          interaction\n        );\n      }\n\n      return action;\n    },\n\n    defaultActionChecker: defaultActionChecker,\n\n    /*\\\n         * Interactable.actionChecker\n         [ method ]\n         *\n         * Gets or sets the function used to check action to be performed on\n         * pointerDown\n         *\n         - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n         = (Function | Interactable) The checker function or this Interactable\n         *\n         | interact('.resize-drag')\n         |   .resizable(true)\n         |   .draggable(true)\n         |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n         |\n         |   if (interact.matchesSelector(event.target, '.drag-handle') {\n         |     // force drag with handle target\n         |     action.name = drag;\n         |   }\n         |   else {\n         |     // resize from the top and right edges\n         |     action.name  = 'resize';\n         |     action.edges = { top: true, right: true };\n         |   }\n         |\n         |   return action;\n         | });\n        \\*/\n    actionChecker: function(checker) {\n      if (isFunction(checker)) {\n        this.options.actionChecker = checker;\n\n        return this;\n      }\n\n      if (checker === null) {\n        delete this.options.actionChecker;\n\n        return this;\n      }\n\n      return this.options.actionChecker;\n    },\n\n    /*\\\n         * Interactable.getRect\n         [ method ]\n         *\n         * The default function to get an Interactables bounding rect. Can be\n         * overridden using @Interactable.rectChecker.\n         *\n         - element (Element) #optional The element to measure.\n         = (object) The object's bounding rectangle.\n         o {\n         o     top   : 0,\n         o     left  : 0,\n         o     bottom: 0,\n         o     right : 0,\n         o     width : 0,\n         o     height: 0\n         o }\n        \\*/\n    getRect: function rectCheck(element) {\n      element = element || this._element;\n\n      if (this.selector && !isElement(element)) {\n        element = this._context.querySelector(this.selector);\n      }\n\n      return getElementRect(element);\n    },\n\n    /*\\\n         * Interactable.rectChecker\n         [ method ]\n         *\n         * Returns or sets the function used to calculate the interactable's\n         * element's rectangle\n         *\n         - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n         = (function | object) The checker function or this Interactable\n        \\*/\n    rectChecker: function(checker) {\n      if (isFunction(checker)) {\n        this.getRect = checker;\n\n        return this;\n      }\n\n      if (checker === null) {\n        delete this.options.getRect;\n\n        return this;\n      }\n\n      return this.getRect;\n    },\n\n    /*\\\n         * Interactable.styleCursor\n         [ method ]\n         *\n         * Returns or sets whether the action that would be performed when the\n         * mouse on the element are checked on `mousemove` so that the cursor\n         * may be styled appropriately\n         *\n         - newValue (boolean) #optional\n         = (boolean | Interactable) The current setting or this Interactable\n        \\*/\n    styleCursor: function(newValue) {\n      if (isBool(newValue)) {\n        this.options.styleCursor = newValue;\n\n        return this;\n      }\n\n      if (newValue === null) {\n        delete this.options.styleCursor;\n\n        return this;\n      }\n\n      return this.options.styleCursor;\n    },\n\n    /*\\\n         * Interactable.preventDefault\n         [ method ]\n         *\n         * Returns or sets whether to prevent the browser's default behaviour\n         * in response to pointer events. Can be set to:\n         *  - `'always'` to always prevent\n         *  - `'never'` to never prevent\n         *  - `'auto'` to let interact.js try to determine what would be best\n         *\n         - newValue (string) #optional `true`, `false` or `'auto'`\n         = (string | Interactable) The current setting or this Interactable\n        \\*/\n    preventDefault: function(newValue) {\n      if (/^(always|never|auto)$/.test(newValue)) {\n        this.options.preventDefault = newValue;\n        return this;\n      }\n\n      if (isBool(newValue)) {\n        this.options.preventDefault = newValue ? 'always' : 'never';\n        return this;\n      }\n\n      return this.options.preventDefault;\n    },\n\n    /*\\\n         * Interactable.origin\n         [ method ]\n         *\n         * Gets or sets the origin of the Interactable's element.  The x and y\n         * of the origin will be subtracted from action event coordinates.\n         *\n         - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n         * OR\n         - origin (Element) #optional An HTML or SVG Element whose rect will be used\n         **\n         = (object) The current origin or this Interactable\n        \\*/\n    origin: function(newValue) {\n      if (trySelector(newValue)) {\n        this.options.origin = newValue;\n        return this;\n      } else if (isObject(newValue)) {\n        this.options.origin = newValue;\n        return this;\n      }\n\n      return this.options.origin;\n    },\n\n    /*\\\n         * Interactable.deltaSource\n         [ method ]\n         *\n         * Returns or sets the mouse coordinate types used to calculate the\n         * movement of the pointer.\n         *\n         - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n         = (string | object) The current deltaSource or this Interactable\n        \\*/\n    deltaSource: function(newValue) {\n      if (newValue === 'page' || newValue === 'client') {\n        this.options.deltaSource = newValue;\n\n        return this;\n      }\n\n      return this.options.deltaSource;\n    },\n\n    /*\\\n         * Interactable.restrict\n         [ method ]\n         **\n         * Deprecated. Add a `restrict` property to the options object passed to\n         * @Interactable.draggable, @Interactable.resizable or @Interactable.gesturable instead.\n         *\n         * Returns or sets the rectangles within which actions on this\n         * interactable (after snap calculations) are restricted. By default,\n         * restricting is relative to the pointer coordinates. You can change\n         * this by setting the\n         * [`elementRect`](https://github.com/taye/interact.js/pull/72).\n         **\n         - options (object) #optional an object with keys drag, resize, and/or gesture whose values are rects, Elements, CSS selectors, or 'parent' or 'self'\n         = (object) The current restrictions object or this Interactable\n         **\n         | interact(element).restrict({\n         |     // the rect will be `interact.getElementRect(element.parentNode)`\n         |     drag: element.parentNode,\n         |\n         |     // x and y are relative to the the interactable's origin\n         |     resize: { x: 100, y: 100, width: 200, height: 200 }\n         | })\n         |\n         | interact('.draggable').restrict({\n         |     // the rect will be the selected element's parent\n         |     drag: 'parent',\n         |\n         |     // do not restrict during normal movement.\n         |     // Instead, trigger only one restricted move event\n         |     // immediately before the end event.\n         |     endOnly: true,\n         |\n         |     // https://github.com/taye/interact.js/pull/72#issue-41813493\n         |     elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\n         | });\n        \\*/\n    restrict: function(options) {\n      if (!isObject(options)) {\n        return this.setOptions('restrict', options);\n      }\n\n      var actions = ['drag', 'resize', 'gesture'],\n        ret;\n\n      for (var i = 0; i < actions.length; i++) {\n        var action = actions[i];\n\n        if (action in options) {\n          var perAction = extend(\n            {\n              actions: [action],\n              restriction: options[action]\n            },\n            options\n          );\n\n          ret = this.setOptions('restrict', perAction);\n        }\n      }\n\n      return ret;\n    },\n\n    /*\\\n         * Interactable.context\n         [ method ]\n         *\n         * Gets the selector context Node of the Interactable. The default is `window.document`.\n         *\n         = (Node) The context Node of this Interactable\n         **\n        \\*/\n    context: function() {\n      return this._context;\n    },\n\n    _context: document,\n\n    /*\\\n         * Interactable.ignoreFrom\n         [ method ]\n         *\n         * If the target of the `mousedown`, `pointerdown` or `touchstart`\n         * event or any of it's parents match the given CSS selector or\n         * Element, no drag/resize/gesture is started.\n         *\n         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n         = (string | Element | object) The current ignoreFrom value or this Interactable\n         **\n         | interact(element, { ignoreFrom: document.getElementById('no-action') });\n         | // or\n         | interact(element).ignoreFrom('input, textarea, a');\n        \\*/\n    ignoreFrom: function(newValue) {\n      if (trySelector(newValue)) {\n        // CSS selector to match event.target\n        this.options.ignoreFrom = newValue;\n        return this;\n      }\n\n      if (isElement(newValue)) {\n        // specific element\n        this.options.ignoreFrom = newValue;\n        return this;\n      }\n\n      return this.options.ignoreFrom;\n    },\n\n    /*\\\n         * Interactable.allowFrom\n         [ method ]\n         *\n         * A drag/resize/gesture is started only If the target of the\n         * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n         * parents match the given CSS selector or Element.\n         *\n         - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n         = (string | Element | object) The current allowFrom value or this Interactable\n         **\n         | interact(element, { allowFrom: document.getElementById('drag-handle') });\n         | // or\n         | interact(element).allowFrom('.handle');\n        \\*/\n    allowFrom: function(newValue) {\n      if (trySelector(newValue)) {\n        // CSS selector to match event.target\n        this.options.allowFrom = newValue;\n        return this;\n      }\n\n      if (isElement(newValue)) {\n        // specific element\n        this.options.allowFrom = newValue;\n        return this;\n      }\n\n      return this.options.allowFrom;\n    },\n\n    /*\\\n         * Interactable.element\n         [ method ]\n         *\n         * If this is not a selector Interactable, it returns the element this\n         * interactable represents\n         *\n         = (Element) HTML / SVG Element\n        \\*/\n    element: function() {\n      return this._element;\n    },\n\n    /*\\\n         * Interactable.fire\n         [ method ]\n         *\n         * Calls listeners for the given InteractEvent type bound globally\n         * and directly to this Interactable\n         *\n         - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n         = (Interactable) this Interactable\n        \\*/\n    fire: function(iEvent) {\n      if (!(iEvent && iEvent.type) || !contains(eventTypes, iEvent.type)) {\n        return this;\n      }\n\n      var listeners,\n        i,\n        len,\n        onEvent = 'on' + iEvent.type,\n        funcName = '';\n\n      // Interactable#on() listeners\n      if (iEvent.type in this._iEvents) {\n        listeners = this._iEvents[iEvent.type];\n\n        for (\n          i = 0, len = listeners.length;\n          i < len && !iEvent.immediatePropagationStopped;\n          i++\n        ) {\n          funcName = listeners[i].name;\n          listeners[i](iEvent);\n        }\n      }\n\n      // interactable.onevent listener\n      if (isFunction(this[onEvent])) {\n        funcName = this[onEvent].name;\n        this[onEvent](iEvent);\n      }\n\n      // interact.on() listeners\n      if (\n        iEvent.type in globalEvents &&\n        (listeners = globalEvents[iEvent.type])\n      ) {\n        for (\n          i = 0, len = listeners.length;\n          i < len && !iEvent.immediatePropagationStopped;\n          i++\n        ) {\n          funcName = listeners[i].name;\n          listeners[i](iEvent);\n        }\n      }\n\n      return this;\n    },\n\n    /*\\\n         * Interactable.on\n         [ method ]\n         *\n         * Binds a listener for an InteractEvent or DOM event.\n         *\n         - eventType  (string | array | object) The types of events to listen for\n         - listener   (function) The function to be called on the given event(s)\n         - useCapture (boolean) #optional useCapture flag for addEventListener\n         = (object) This Interactable\n        \\*/\n    on: function(eventType, listener, useCapture) {\n      var i;\n\n      if (isString(eventType) && eventType.search(' ') !== -1) {\n        eventType = eventType.trim().split(/ +/);\n      }\n\n      if (isArray(eventType)) {\n        for (i = 0; i < eventType.length; i++) {\n          this.on(eventType[i], listener, useCapture);\n        }\n\n        return this;\n      }\n\n      if (isObject(eventType)) {\n        for (var prop in eventType) {\n          this.on(prop, eventType[prop], listener);\n        }\n\n        return this;\n      }\n\n      if (eventType === 'wheel') {\n        eventType = wheelEvent;\n      }\n\n      // convert to boolean\n      useCapture = useCapture ? true : false;\n\n      if (contains(eventTypes, eventType)) {\n        // if this type of event was never bound to this Interactable\n        if (!(eventType in this._iEvents)) {\n          this._iEvents[eventType] = [listener];\n        } else {\n          this._iEvents[eventType].push(listener);\n        }\n      }\n      // delegated event for selector\n      else if (this.selector) {\n        if (!delegatedEvents[eventType]) {\n          delegatedEvents[eventType] = {\n            selectors: [],\n            contexts: [],\n            listeners: []\n          };\n\n          // add delegate listener functions\n          for (i = 0; i < documents.length; i++) {\n            events.add(documents[i], eventType, delegateListener);\n            events.add(documents[i], eventType, delegateUseCapture, true);\n          }\n        }\n\n        var delegated = delegatedEvents[eventType],\n          index;\n\n        for (index = delegated.selectors.length - 1; index >= 0; index--) {\n          if (\n            delegated.selectors[index] === this.selector &&\n            delegated.contexts[index] === this._context\n          ) {\n            break;\n          }\n        }\n\n        if (index === -1) {\n          index = delegated.selectors.length;\n\n          delegated.selectors.push(this.selector);\n          delegated.contexts.push(this._context);\n          delegated.listeners.push([]);\n        }\n\n        // keep listener and useCapture flag\n        delegated.listeners[index].push([listener, useCapture]);\n      } else {\n        events.add(this._element, eventType, listener, useCapture);\n      }\n\n      return this;\n    },\n\n    /*\\\n         * Interactable.off\n         [ method ]\n         *\n         * Removes an InteractEvent or DOM event listener\n         *\n         - eventType  (string | array | object) The types of events that were listened for\n         - listener   (function) The listener function to be removed\n         - useCapture (boolean) #optional useCapture flag for removeEventListener\n         = (object) This Interactable\n        \\*/\n    off: function(eventType, listener, useCapture) {\n      var i;\n\n      if (isString(eventType) && eventType.search(' ') !== -1) {\n        eventType = eventType.trim().split(/ +/);\n      }\n\n      if (isArray(eventType)) {\n        for (i = 0; i < eventType.length; i++) {\n          this.off(eventType[i], listener, useCapture);\n        }\n\n        return this;\n      }\n\n      if (isObject(eventType)) {\n        for (var prop in eventType) {\n          this.off(prop, eventType[prop], listener);\n        }\n\n        return this;\n      }\n\n      var eventList,\n        index = -1;\n\n      // convert to boolean\n      useCapture = useCapture ? true : false;\n\n      if (eventType === 'wheel') {\n        eventType = wheelEvent;\n      }\n\n      // if it is an action event type\n      if (contains(eventTypes, eventType)) {\n        eventList = this._iEvents[eventType];\n\n        if (eventList && (index = indexOf(eventList, listener)) !== -1) {\n          this._iEvents[eventType].splice(index, 1);\n        }\n      }\n      // delegated event\n      else if (this.selector) {\n        var delegated = delegatedEvents[eventType],\n          matchFound = false;\n\n        if (!delegated) {\n          return this;\n        }\n\n        // count from last index of delegated to 0\n        for (index = delegated.selectors.length - 1; index >= 0; index--) {\n          // look for matching selector and context Node\n          if (\n            delegated.selectors[index] === this.selector &&\n            delegated.contexts[index] === this._context\n          ) {\n            var listeners = delegated.listeners[index];\n\n            // each item of the listeners array is an array: [function, useCaptureFlag]\n            for (i = listeners.length - 1; i >= 0; i--) {\n              var fn = listeners[i][0],\n                useCap = listeners[i][1];\n\n              // check if the listener functions and useCapture flags match\n              if (fn === listener && useCap === useCapture) {\n                // remove the listener from the array of listeners\n                listeners.splice(i, 1);\n\n                // if all listeners for this interactable have been removed\n                // remove the interactable from the delegated arrays\n                if (!listeners.length) {\n                  delegated.selectors.splice(index, 1);\n                  delegated.contexts.splice(index, 1);\n                  delegated.listeners.splice(index, 1);\n\n                  // remove delegate function from context\n                  events.remove(this._context, eventType, delegateListener);\n                  events.remove(\n                    this._context,\n                    eventType,\n                    delegateUseCapture,\n                    true\n                  );\n\n                  // remove the arrays if they are empty\n                  if (!delegated.selectors.length) {\n                    delegatedEvents[eventType] = null;\n                  }\n                }\n\n                // only remove one listener\n                matchFound = true;\n                break;\n              }\n            }\n\n            if (matchFound) {\n              break;\n            }\n          }\n        }\n      }\n      // remove listener from this Interatable's element\n      else {\n        events.remove(this._element, eventType, listener, useCapture);\n      }\n\n      return this;\n    },\n\n    /*\\\n         * Interactable.set\n         [ method ]\n         *\n         * Reset the options of this Interactable\n         - options (object) The new settings to apply\n         = (object) This Interactable\n        \\*/\n    set: function(options) {\n      if (!isObject(options)) {\n        options = {};\n      }\n\n      this.options = extend({}, defaultOptions.base);\n\n      var i,\n        actions = ['drag', 'drop', 'resize', 'gesture'],\n        methods = ['draggable', 'dropzone', 'resizable', 'gesturable'],\n        perActions = extend(\n          extend({}, defaultOptions.perAction),\n          options[action] || {}\n        );\n\n      for (i = 0; i < actions.length; i++) {\n        var action = actions[i];\n\n        this.options[action] = extend({}, defaultOptions[action]);\n\n        this.setPerAction(action, perActions);\n\n        this[methods[i]](options[action]);\n      }\n\n      var settings = [\n        'accept',\n        'actionChecker',\n        'allowFrom',\n        'deltaSource',\n        'dropChecker',\n        'ignoreFrom',\n        'origin',\n        'preventDefault',\n        'rectChecker',\n        'styleCursor'\n      ];\n\n      for (i = 0, len = settings.length; i < len; i++) {\n        var setting = settings[i];\n\n        this.options[setting] = defaultOptions.base[setting];\n\n        if (setting in options) {\n          this[setting](options[setting]);\n        }\n      }\n\n      return this;\n    },\n\n    /*\\\n         * Interactable.unset\n         [ method ]\n         *\n         * Remove this interactable from the list of interactables and remove\n         * it's drag, drop, resize and gesture capabilities\n         *\n         = (object) @interact\n        \\*/\n    unset: function() {\n      events.remove(this._element, 'all');\n\n      if (!isString(this.selector)) {\n        events.remove(this, 'all');\n        if (this.options.styleCursor) {\n          this._element.style.cursor = '';\n        }\n      } else {\n        // remove delegated events\n        for (var type in delegatedEvents) {\n          var delegated = delegatedEvents[type];\n\n          for (var i = 0; i < delegated.selectors.length; i++) {\n            if (\n              delegated.selectors[i] === this.selector &&\n              delegated.contexts[i] === this._context\n            ) {\n              delegated.selectors.splice(i, 1);\n              delegated.contexts.splice(i, 1);\n              delegated.listeners.splice(i, 1);\n\n              // remove the arrays if they are empty\n              if (!delegated.selectors.length) {\n                delegatedEvents[type] = null;\n              }\n            }\n\n            events.remove(this._context, type, delegateListener);\n            events.remove(this._context, type, delegateUseCapture, true);\n\n            break;\n          }\n        }\n      }\n\n      this.dropzone(false);\n\n      interactables.splice(indexOf(interactables, this), 1);\n\n      return interact;\n    }\n  };\n\n  function warnOnce(method, message) {\n    var warned = false;\n\n    return function() {\n      if (!warned) {\n        window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  }\n\n  Interactable.prototype.snap = warnOnce(\n    Interactable.prototype.snap,\n    'Interactable#snap is deprecated. See the new documentation for snapping at http://interactjs.io/docs/snapping'\n  );\n  Interactable.prototype.restrict = warnOnce(\n    Interactable.prototype.restrict,\n    'Interactable#restrict is deprecated. See the new documentation for resticting at http://interactjs.io/docs/restriction'\n  );\n  Interactable.prototype.inertia = warnOnce(\n    Interactable.prototype.inertia,\n    'Interactable#inertia is deprecated. See the new documentation for inertia at http://interactjs.io/docs/inertia'\n  );\n  Interactable.prototype.autoScroll = warnOnce(\n    Interactable.prototype.autoScroll,\n    'Interactable#autoScroll is deprecated. See the new documentation for autoScroll at http://interactjs.io/docs/#autoscroll'\n  );\n  Interactable.prototype.squareResize = warnOnce(\n    Interactable.prototype.squareResize,\n    'Interactable#squareResize is deprecated. See http://interactjs.io/docs/#resize-square'\n  );\n\n  Interactable.prototype.accept = warnOnce(\n    Interactable.prototype.accept,\n    'Interactable#accept is deprecated. use Interactable#dropzone({ accept: target }) instead'\n  );\n  Interactable.prototype.dropChecker = warnOnce(\n    Interactable.prototype.dropChecker,\n    'Interactable#dropChecker is deprecated. use Interactable#dropzone({ dropChecker: checkerFunction }) instead'\n  );\n  Interactable.prototype.context = warnOnce(\n    Interactable.prototype.context,\n    'Interactable#context as a method is deprecated. It will soon be a DOM Node instead'\n  );\n\n  /*\\\n     * interact.isSet\n     [ method ]\n     *\n     * Check if an element has been set\n     - element (Element) The Element being searched for\n     = (boolean) Indicates if the element or CSS selector was previously passed to interact\n    \\*/\n  interact.isSet = function(element, options) {\n    return (\n      interactables.indexOfElement(element, options && options.context) !== -1\n    );\n  };\n\n  /*\\\n     * interact.on\n     [ method ]\n     *\n     * Adds a global listener for an InteractEvent or adds a DOM event to\n     * `document`\n     *\n     - type       (string | array | object) The types of events to listen for\n     - listener   (function) The function to be called on the given event(s)\n     - useCapture (boolean) #optional useCapture flag for addEventListener\n     = (object) interact\n    \\*/\n  interact.on = function(type, listener, useCapture) {\n    if (isString(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/);\n    }\n\n    if (isArray(type)) {\n      for (var i = 0; i < type.length; i++) {\n        interact.on(type[i], listener, useCapture);\n      }\n\n      return interact;\n    }\n\n    if (isObject(type)) {\n      for (var prop in type) {\n        interact.on(prop, type[prop], listener);\n      }\n\n      return interact;\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (contains(eventTypes, type)) {\n      // if this type of event was never bound\n      if (!globalEvents[type]) {\n        globalEvents[type] = [listener];\n      } else {\n        globalEvents[type].push(listener);\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      events.add(document, type, listener, useCapture);\n    }\n\n    return interact;\n  };\n\n  /*\\\n     * interact.off\n     [ method ]\n     *\n     * Removes a global InteractEvent listener or DOM event from `document`\n     *\n     - type       (string | array | object) The types of events that were listened for\n     - listener   (function) The listener function to be removed\n     - useCapture (boolean) #optional useCapture flag for removeEventListener\n     = (object) interact\n     \\*/\n  interact.off = function(type, listener, useCapture) {\n    if (isString(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/);\n    }\n\n    if (isArray(type)) {\n      for (var i = 0; i < type.length; i++) {\n        interact.off(type[i], listener, useCapture);\n      }\n\n      return interact;\n    }\n\n    if (isObject(type)) {\n      for (var prop in type) {\n        interact.off(prop, type[prop], listener);\n      }\n\n      return interact;\n    }\n\n    if (!contains(eventTypes, type)) {\n      events.remove(document, type, listener, useCapture);\n    } else {\n      var index;\n\n      if (\n        type in globalEvents &&\n        (index = indexOf(globalEvents[type], listener)) !== -1\n      ) {\n        globalEvents[type].splice(index, 1);\n      }\n    }\n\n    return interact;\n  };\n\n  /*\\\n     * interact.enableDragging\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether dragging is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n  interact.enableDragging = warnOnce(function(newValue) {\n    if (newValue !== null && newValue !== undefined) {\n      actionIsEnabled.drag = newValue;\n\n      return interact;\n    }\n    return actionIsEnabled.drag;\n  }, 'interact.enableDragging is deprecated and will soon be removed.');\n\n  /*\\\n     * interact.enableResizing\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether resizing is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n  interact.enableResizing = warnOnce(function(newValue) {\n    if (newValue !== null && newValue !== undefined) {\n      actionIsEnabled.resize = newValue;\n\n      return interact;\n    }\n    return actionIsEnabled.resize;\n  }, 'interact.enableResizing is deprecated and will soon be removed.');\n\n  /*\\\n     * interact.enableGesturing\n     [ method ]\n     *\n     * Deprecated.\n     *\n     * Returns or sets whether gesturing is enabled for any Interactables\n     *\n     - newValue (boolean) #optional `true` to allow the action; `false` to disable action for all Interactables\n     = (boolean | object) The current setting or interact\n    \\*/\n  interact.enableGesturing = warnOnce(function(newValue) {\n    if (newValue !== null && newValue !== undefined) {\n      actionIsEnabled.gesture = newValue;\n\n      return interact;\n    }\n    return actionIsEnabled.gesture;\n  }, 'interact.enableGesturing is deprecated and will soon be removed.');\n\n  interact.eventTypes = eventTypes;\n\n  /*\\\n     * interact.debug\n     [ method ]\n     *\n     * Returns debugging data\n     = (object) An object with properties that outline the current state and expose internal functions and variables\n    \\*/\n  interact.debug = function() {\n    var interaction = interactions[0] || new Interaction();\n\n    return {\n      interactions: interactions,\n      target: interaction.target,\n      dragging: interaction.dragging,\n      resizing: interaction.resizing,\n      gesturing: interaction.gesturing,\n      prepared: interaction.prepared,\n      matches: interaction.matches,\n      matchElements: interaction.matchElements,\n\n      prevCoords: interaction.prevCoords,\n      startCoords: interaction.startCoords,\n\n      pointerIds: interaction.pointerIds,\n      pointers: interaction.pointers,\n      addPointer: listeners.addPointer,\n      removePointer: listeners.removePointer,\n      recordPointer: listeners.recordPointer,\n\n      snap: interaction.snapStatus,\n      restrict: interaction.restrictStatus,\n      inertia: interaction.inertiaStatus,\n\n      downTime: interaction.downTimes[0],\n      downEvent: interaction.downEvent,\n      downPointer: interaction.downPointer,\n      prevEvent: interaction.prevEvent,\n\n      Interactable: Interactable,\n      interactables: interactables,\n      pointerIsDown: interaction.pointerIsDown,\n      defaultOptions: defaultOptions,\n      defaultActionChecker: defaultActionChecker,\n\n      actionCursors: actionCursors,\n      dragMove: listeners.dragMove,\n      resizeMove: listeners.resizeMove,\n      gestureMove: listeners.gestureMove,\n      pointerUp: listeners.pointerUp,\n      pointerDown: listeners.pointerDown,\n      pointerMove: listeners.pointerMove,\n      pointerHover: listeners.pointerHover,\n\n      eventTypes: eventTypes,\n\n      events: events,\n      globalEvents: globalEvents,\n      delegatedEvents: delegatedEvents,\n\n      prefixedPropREs: prefixedPropREs\n    };\n  };\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerAverage;\n  interact.getTouchBBox = touchBBox;\n  interact.getTouchDistance = touchDistance;\n  interact.getTouchAngle = touchAngle;\n\n  interact.getElementRect = getElementRect;\n  interact.getElementClientRect = getElementClientRect;\n  interact.matchesSelector = matchesSelector;\n  interact.closest = closest;\n\n  /*\\\n     * interact.margin\n     [ method ]\n     *\n     * Deprecated. Use `interact(target).resizable({ margin: number });` instead.\n     * Returns or sets the margin for autocheck resizing used in\n     * @Interactable.getAction. That is the distance from the bottom and right\n     * edges of an element clicking in which will start resizing\n     *\n     - newValue (number) #optional\n     = (number | interact) The current margin value or interact\n    \\*/\n  interact.margin = warnOnce(function(newvalue) {\n    if (isNumber(newvalue)) {\n      margin = newvalue;\n\n      return interact;\n    }\n    return margin;\n  }, 'interact.margin is deprecated. Use interact(target).resizable({ margin: number }); instead.');\n\n  /*\\\n     * interact.supportsTouch\n     [ method ]\n     *\n     = (boolean) Whether or not the browser supports touch input\n    \\*/\n  interact.supportsTouch = function() {\n    return supportsTouch;\n  };\n\n  /*\\\n     * interact.supportsPointerEvent\n     [ method ]\n     *\n     = (boolean) Whether or not the browser supports PointerEvents\n    \\*/\n  interact.supportsPointerEvent = function() {\n    return supportsPointerEvent;\n  };\n\n  /*\\\n     * interact.stop\n     [ method ]\n     *\n     * Cancels all interactions (end events are not fired)\n     *\n     - event (Event) An event on which to call preventDefault()\n     = (object) interact\n    \\*/\n  interact.stop = function(event) {\n    for (var i = interactions.length - 1; i >= 0; i--) {\n      interactions[i].stop(event);\n    }\n\n    return interact;\n  };\n\n  /*\\\n     * interact.dynamicDrop\n     [ method ]\n     *\n     * Returns or sets whether the dimensions of dropzone elements are\n     * calculated on every dragmove or only on dragstart for the default\n     * dropChecker\n     *\n     - newValue (boolean) #optional True to check on each move. False to check only before start\n     = (boolean | interact) The current setting or interact\n    \\*/\n  interact.dynamicDrop = function(newValue) {\n    if (isBool(newValue)) {\n      //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n      //}\n\n      dynamicDrop = newValue;\n\n      return interact;\n    }\n    return dynamicDrop;\n  };\n\n  /*\\\n     * interact.pointerMoveTolerance\n     [ method ]\n     * Returns or sets the distance the pointer must be moved before an action\n     * sequence occurs. This also affects tolerance for tap events.\n     *\n     - newValue (number) #optional The movement from the start position must be greater than this value\n     = (number | Interactable) The current setting or interact\n    \\*/\n  interact.pointerMoveTolerance = function(newValue) {\n    if (isNumber(newValue)) {\n      pointerMoveTolerance = newValue;\n\n      return this;\n    }\n\n    return pointerMoveTolerance;\n  };\n\n  /*\\\n     * interact.maxInteractions\n     [ method ]\n     **\n     * Returns or sets the maximum number of concurrent interactions allowed.\n     * By default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables\n     * and elements, you need to enable it in the draggable, resizable and\n     * gesturable `'max'` and `'maxPerElement'` options.\n     **\n     - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n    \\*/\n  interact.maxInteractions = function(newValue) {\n    if (isNumber(newValue)) {\n      maxInteractions = newValue;\n\n      return this;\n    }\n\n    return maxInteractions;\n  };\n\n  interact.createSnapGrid = function(grid) {\n    return function(x, y) {\n      var offsetX = 0,\n        offsetY = 0;\n\n      if (isObject(grid.offset)) {\n        offsetX = grid.offset.x;\n        offsetY = grid.offset.y;\n      }\n\n      var gridx = Math.round((x - offsetX) / grid.x),\n        gridy = Math.round((y - offsetY) / grid.y),\n        newX = gridx * grid.x + offsetX,\n        newY = gridy * grid.y + offsetY;\n\n      return {\n        x: newX,\n        y: newY,\n        range: grid.range\n      };\n    };\n  };\n\n  function endAllInteractions(event) {\n    for (var i = 0; i < interactions.length; i++) {\n      interactions[i].pointerEnd(event, event);\n    }\n  }\n\n  function listenToDocument(doc) {\n    if (contains(documents, doc)) {\n      return;\n    }\n\n    var win = doc.defaultView || doc.parentWindow;\n\n    // add delegate event listener\n    for (var eventType in delegatedEvents) {\n      events.add(doc, eventType, delegateListener);\n      events.add(doc, eventType, delegateUseCapture, true);\n    }\n\n    if (supportsPointerEvent) {\n      if (PointerEvent === win.MSPointerEvent) {\n        pEventTypes = {\n          up: 'MSPointerUp',\n          down: 'MSPointerDown',\n          over: 'mouseover',\n          out: 'mouseout',\n          move: 'MSPointerMove',\n          cancel: 'MSPointerCancel'\n        };\n      } else {\n        pEventTypes = {\n          up: 'pointerup',\n          down: 'pointerdown',\n          over: 'pointerover',\n          out: 'pointerout',\n          move: 'pointermove',\n          cancel: 'pointercancel'\n        };\n      }\n\n      events.add(doc, pEventTypes.down, listeners.selectorDown);\n      events.add(doc, pEventTypes.move, listeners.pointerMove);\n      events.add(doc, pEventTypes.over, listeners.pointerOver);\n      events.add(doc, pEventTypes.out, listeners.pointerOut);\n      events.add(doc, pEventTypes.up, listeners.pointerUp);\n      events.add(doc, pEventTypes.cancel, listeners.pointerCancel);\n\n      // autoscroll\n      events.add(doc, pEventTypes.move, listeners.autoScrollMove);\n    } else {\n      events.add(doc, 'mousedown', listeners.selectorDown);\n      events.add(doc, 'mousemove', listeners.pointerMove);\n      events.add(doc, 'mouseup', listeners.pointerUp);\n      events.add(doc, 'mouseover', listeners.pointerOver);\n      events.add(doc, 'mouseout', listeners.pointerOut);\n\n      events.add(doc, 'touchstart', listeners.selectorDown);\n      events.add(doc, 'touchmove', listeners.pointerMove);\n      events.add(doc, 'touchend', listeners.pointerUp);\n      events.add(doc, 'touchcancel', listeners.pointerCancel);\n\n      // autoscroll\n      events.add(doc, 'mousemove', listeners.autoScrollMove);\n      events.add(doc, 'touchmove', listeners.autoScrollMove);\n    }\n\n    events.add(win, 'blur', endAllInteractions);\n\n    try {\n      if (win.frameElement) {\n        var parentDoc = win.frameElement.ownerDocument,\n          parentWindow = parentDoc.defaultView;\n\n        events.add(parentDoc, 'mouseup', listeners.pointerEnd);\n        events.add(parentDoc, 'touchend', listeners.pointerEnd);\n        events.add(parentDoc, 'touchcancel', listeners.pointerEnd);\n        events.add(parentDoc, 'pointerup', listeners.pointerEnd);\n        events.add(parentDoc, 'MSPointerUp', listeners.pointerEnd);\n        events.add(parentWindow, 'blur', endAllInteractions);\n      }\n    } catch (error) {\n      interact.windowParentError = error;\n    }\n\n    // prevent native HTML5 drag on interact.js target elements\n    events.add(doc, 'dragstart', function(event) {\n      for (var i = 0; i < interactions.length; i++) {\n        var interaction = interactions[i];\n\n        if (\n          interaction.element &&\n          (interaction.element === event.target ||\n            nodeContains(interaction.element, event.target))\n        ) {\n          interaction.checkAndPreventDefault(\n            event,\n            interaction.target,\n            interaction.element\n          );\n          return;\n        }\n      }\n    });\n\n    if (events.useAttachEvent) {\n      // For IE's lack of Event#preventDefault\n      events.add(doc, 'selectstart', function(event) {\n        var interaction = interactions[0];\n\n        if (interaction.currentAction()) {\n          interaction.checkAndPreventDefault(event);\n        }\n      });\n\n      // For IE's bad dblclick event sequence\n      events.add(doc, 'dblclick', doOnInteractions('ie8Dblclick'));\n    }\n\n    documents.push(doc);\n  }\n\n  listenToDocument(document);\n\n  function indexOf(array, target) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === target) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  function contains(array, target) {\n    return indexOf(array, target) !== -1;\n  }\n\n  function matchesSelector(element, selector, nodeList) {\n    if (ie8MatchesSelector) {\n      return ie8MatchesSelector(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (window !== realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[prefixedMatchesSelector](selector);\n  }\n\n  function matchesUpTo(element, selector, limit) {\n    while (isElement(element)) {\n      if (matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = parentElement(element);\n\n      if (element === limit) {\n        return matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  }\n\n  // For IE8's lack of an Element#matchesSelector\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  if (\n    !(prefixedMatchesSelector in Element.prototype) ||\n    !isFunction(Element.prototype[prefixedMatchesSelector])\n  ) {\n    ie8MatchesSelector = function(element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (var i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  // requestAnimationFrame polyfill\n  (function() {\n    var lastTime = 0,\n      vendors = ['ms', 'moz', 'webkit', 'o'];\n\n    for (\n      var x = 0;\n      x < vendors.length && !realWindow.requestAnimationFrame;\n      ++x\n    ) {\n      reqFrame = realWindow[vendors[x] + 'RequestAnimationFrame'];\n      cancelFrame =\n        realWindow[vendors[x] + 'CancelAnimationFrame'] ||\n        realWindow[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!reqFrame) {\n      reqFrame = function(callback) {\n        var currTime = new Date().getTime(),\n          timeToCall = Math.max(0, 16 - (currTime - lastTime)),\n          id = setTimeout(function() {\n            callback(currTime + timeToCall);\n          }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    if (!cancelFrame) {\n      cancelFrame = function(id) {\n        clearTimeout(id);\n      };\n    }\n  })();\n\n  /* global exports: true, module, define */\n\n  // http://documentcloud.github.io/underscore/docs/underscore.html#section-11\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = interact;\n    }\n    exports.interact = interact;\n  }\n  // AMD\n  else if (typeof define === 'function' && define.amd) {\n    define('interact', function() {\n      return interact;\n    });\n  } else {\n    realWindow.interact = interact;\n  }\n})(typeof window === 'undefined' ? undefined : window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/interact.js","/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nimport $ from 'jquery';\nimport interact from './interact.js';\n\nimport Slick from './slick.core';\n\n// Slick.Grid globals pretense\nSlick.FrozenGrid = SlickGrid;\n\nexport default SlickGrid;\n\n// shared across all grids on the page\nlet scrollbarDimensions;\nlet maxSupportedCssHeight; // browser's breaking point\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options) {\n  // settings\n  const defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: 'flashing',\n    selectedCellCssClass: 'selected',\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    frozenBottom: false,\n    frozenColumn: -1,\n    frozenRow: -1,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: 'new-row'\n  };\n\n  const columnDefaults = {\n    name: '',\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  let th; // virtual height\n  let h; // real scrollable height\n  let ph; // page height\n  let n; // number of pages\n  let cj; // \"jumpiness\" coefficient\n\n  let page = 0; // current page\n  let offset = 0; // current page offset\n  let vScrollDir = 1;\n\n  // private\n  let initialized = false;\n  let $container;\n  let uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n  let self = this;\n  let $focusSink, $focusSink2;\n  let $groupHeaders = $();\n  let $headerScroller;\n  let $headers;\n  let $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\n  let $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\n  let $topPanelScroller;\n  let $topPanel;\n  let $viewport;\n  let $canvas;\n  let $style;\n  let $boundAncestors;\n  let treeColumns;\n  let stylesheet, columnCssRulesL, columnCssRulesR;\n  let viewportH, viewportW;\n  let canvasWidth, canvasWidthL, canvasWidthR;\n  let headersWidth, headersWidthL, headersWidthR;\n  let viewportHasHScroll, viewportHasVScroll;\n  let headerColumnWidthDiff = 0,\n    headerColumnHeightDiff = 0, // border+padding\n    cellWidthDiff = 0,\n    cellHeightDiff = 0;\n  let absoluteColumnMinWidth;\n  let hasFrozenRows = false;\n  let frozenRowsHeight = 0;\n  let actualFrozenRow = -1;\n  let paneTopH = 0;\n  let paneBottomH = 0;\n  let viewportTopH = 0;\n  let viewportBottomH = 0;\n  let topPanelH = 0;\n  let headerRowH = 0;\n  let footerRowH = 0;\n\n  let tabbingDirection = 1;\n  let $activeCanvasNode;\n  let $activeViewportNode;\n  let activePosX;\n  let activeRow, activeCell;\n  let activeCellNode = null;\n  let currentEditor = null;\n  let serializedEditorValue;\n  let editController;\n\n  let rowsCache = {};\n  let renderedRows = 0;\n  let numVisibleRows = 0;\n  let prevScrollTop = 0;\n  let scrollTop = 0;\n  let lastRenderedScrollTop = 0;\n  let lastRenderedScrollLeft = 0;\n  let prevScrollLeft = 0;\n  let scrollLeft = 0;\n\n  let selectionModel;\n  let selectedRows = [];\n\n  let plugins = [];\n  let cellCssClasses = {};\n\n  let columnsById = {};\n  let sortColumns = [];\n  let columnPosLeft = [];\n  let columnPosRight = [];\n\n  // async call handles\n  let h_editorLoader = null;\n  let h_render = null;\n  let h_postrender = null;\n  let postProcessedRows = {};\n  let postProcessToRow = null;\n  let postProcessFromRow = null;\n\n  // perf counters\n  let counter_rows_rendered = 0;\n  let counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  let rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  let zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  let $paneHeaderL;\n  let $paneHeaderR;\n  let $paneTopL;\n  let $paneTopR;\n  let $paneBottomL;\n  let $paneBottomR;\n\n  let $headerScrollerL;\n  let $headerScrollerR;\n\n  let $headerL;\n  let $headerR;\n\n  let $groupHeadersL;\n  let $groupHeadersR;\n\n  let $headerRowScrollerL;\n  let $headerRowScrollerR;\n\n  let $footerRowScrollerL;\n  let $footerRowScrollerR;\n\n  let $headerRowL;\n  let $headerRowR;\n\n  let $footerRowL;\n  let $footerRowR;\n\n  let $topPanelScrollerL;\n  let $topPanelScrollerR;\n\n  let $topPanelL;\n  let $topPanelR;\n\n  let $viewportTopL;\n  let $viewportTopR;\n  let $viewportBottomL;\n  let $viewportBottomR;\n\n  let $canvasTopL;\n  let $canvasTopR;\n  let $canvasBottomL;\n  let $canvasBottomR;\n\n  let $viewportScrollContainerX;\n  let $viewportScrollContainerY;\n  let $headerScrollContainer;\n  let $headerRowScrollContainer;\n  let $footerRowScrollContainer;\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    $container = $(container);\n    if ($container.length < 1) {\n      throw new Error(\n        'SlickGrid requires a valid container, ' +\n          container +\n          ' does not exist in the DOM.'\n      );\n    }\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    treeColumns = new Slick.TreeColumns(columns);\n    columns = treeColumns.extractColumns();\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = (columns[i] = $.extend({}, columnDefaults, columns[i]));\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      commitCurrentEdit: commitCurrentEdit,\n      cancelCurrentEdit: cancelCurrentEdit\n    };\n\n    $container\n      .empty()\n      .css('overflow', 'hidden')\n      .css('outline', 0)\n      .addClass(uid)\n      .addClass('ui-widget');\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css('position'))) {\n      $container.css('position', 'relative');\n    }\n\n    $focusSink = $(\n      \"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\"\n    ).appendTo($container);\n\n    // Containers used for scrolling frozen columns and rows\n    $paneHeaderL = $(\n      \"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\"\n    ).appendTo($container);\n    $paneHeaderR = $(\n      \"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\"\n    ).appendTo($container);\n    $paneTopL = $(\n      \"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\"\n    ).appendTo($container);\n    $paneTopR = $(\n      \"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\"\n    ).appendTo($container);\n    $paneBottomL = $(\n      \"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\"\n    ).appendTo($container);\n    $paneBottomR = $(\n      \"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\"\n    ).appendTo($container);\n\n    // Append the header scroller containers\n    $headerScrollerL = $(\n      \"<div class='ui-state-default slick-header slick-header-left' />\"\n    ).appendTo($paneHeaderL);\n    $headerScrollerR = $(\n      \"<div class='ui-state-default slick-header slick-header-right' />\"\n    ).appendTo($paneHeaderR);\n\n    // Cache the header scroller containers\n    $headerScroller = $()\n      .add($headerScrollerL)\n      .add($headerScrollerR);\n\n    if (treeColumns.hasDepth()) {\n      ($groupHeadersL = []), ($groupHeadersR = []);\n      for (var index = 0; index < treeColumns.getDepth() - 1; index++) {\n        $groupHeadersL[index] = $(\n          \"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\"\n        ).appendTo($headerScrollerL);\n        $groupHeadersR[index] = $(\n          \"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\"\n        ).appendTo($headerScrollerR);\n      }\n\n      $groupHeaders = $()\n        .add($groupHeadersL)\n        .add($groupHeadersR);\n    }\n\n    // Append the columnn containers to the headers\n    $headerL = $(\n      \"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\"\n    ).appendTo($headerScrollerL);\n    $headerR = $(\n      \"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\"\n    ).appendTo($headerScrollerR);\n\n    // Cache the header columns\n    $headers = $()\n      .add($headerL)\n      .add($headerR);\n\n    $headerRowScrollerL = $(\n      \"<div class='ui-state-default slick-headerrow' />\"\n    ).appendTo($paneTopL);\n    $headerRowScrollerR = $(\n      \"<div class='ui-state-default slick-headerrow' />\"\n    ).appendTo($paneTopR);\n\n    $headerRowScroller = $()\n      .add($headerRowScrollerL)\n      .add($headerRowScrollerR);\n\n    $headerRowSpacerL = $(\n      \"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n    )\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($headerRowScrollerL);\n    $headerRowSpacerR = $(\n      \"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n    )\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($headerRowScrollerR);\n\n    $headerRowL = $(\n      \"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\"\n    ).appendTo($headerRowScrollerL);\n    $headerRowR = $(\n      \"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\"\n    ).appendTo($headerRowScrollerR);\n\n    $headerRow = $()\n      .add($headerRowL)\n      .add($headerRowR);\n\n    // Append the top panel scroller\n    $topPanelScrollerL = $(\n      \"<div class='ui-state-default slick-top-panel-scroller' />\"\n    ).appendTo($paneTopL);\n    $topPanelScrollerR = $(\n      \"<div class='ui-state-default slick-top-panel-scroller' />\"\n    ).appendTo($paneTopR);\n\n    $topPanelScroller = $()\n      .add($topPanelScrollerL)\n      .add($topPanelScrollerR);\n\n    // Append the top panel\n    $topPanelL = $(\n      \"<div class='slick-top-panel' style='width:10000px' />\"\n    ).appendTo($topPanelScrollerL);\n    $topPanelR = $(\n      \"<div class='slick-top-panel' style='width:10000px' />\"\n    ).appendTo($topPanelScrollerR);\n\n    $topPanel = $()\n      .add($topPanelL)\n      .add($topPanelR);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    // Append the viewport containers\n    $viewportTopL = $(\n      \"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\"\n    ).appendTo($paneTopL);\n    $viewportTopR = $(\n      \"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\"\n    ).appendTo($paneTopR);\n    $viewportBottomL = $(\n      \"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\"\n    ).appendTo($paneBottomL);\n    $viewportBottomR = $(\n      \"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\"\n    ).appendTo($paneBottomR);\n\n    // Cache the viewports\n    $viewport = $()\n      .add($viewportTopL)\n      .add($viewportTopR)\n      .add($viewportBottomL)\n      .add($viewportBottomR);\n\n    // Default the active viewport to the top left\n    $activeViewportNode = $viewportTopL;\n\n    // Append the canvas containers\n    $canvasTopL = $(\n      \"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\"\n    ).appendTo($viewportTopL);\n    $canvasTopR = $(\n      \"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\"\n    ).appendTo($viewportTopR);\n    $canvasBottomL = $(\n      \"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\"\n    ).appendTo($viewportBottomL);\n    $canvasBottomR = $(\n      \"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\"\n    ).appendTo($viewportBottomR);\n\n    // Cache the canvases\n    $canvas = $()\n      .add($canvasTopL)\n      .add($canvasTopR)\n      .add($canvasBottomL)\n      .add($canvasBottomR);\n\n    // Default the active canvas to the top left\n    $activeCanvasNode = $canvasTopL;\n\n    // footer Row\n    $footerRowScrollerR = $(\n      \"<div class='ui-state-default slick-footerrow' />\"\n    ).appendTo($paneTopR);\n    $footerRowScrollerL = $(\n      \"<div class='ui-state-default slick-footerrow' />\"\n    ).appendTo($paneTopL);\n\n    $footerRowScroller = $()\n      .add($footerRowScrollerL)\n      .add($footerRowScrollerR);\n\n    $footerRowSpacerL = $(\n      \"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n    )\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($footerRowScrollerL);\n    $footerRowSpacerR = $(\n      \"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\"\n    )\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($footerRowScrollerR);\n\n    $footerRowL = $(\n      \"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\"\n    ).appendTo($footerRowScrollerL);\n    $footerRowR = $(\n      \"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\"\n    ).appendTo($footerRowScrollerR);\n\n    $footerRow = $()\n      .add($footerRowL)\n      .add($footerRowR);\n\n    if (!options.showFooterRow) {\n      $footerRowScroller.hide();\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n\n      getViewportWidth();\n      getViewportHeight();\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind('selectstart.ui', function(event) {\n          return $(event.target).is('input,textarea');\n        });\n      }\n\n      setFrozenOptions();\n      setPaneVisibility();\n      setScroller();\n      setOverflow();\n\n      updateColumnCaches();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind('resize.slickgrid', resizeCanvas);\n      $viewport.on('scroll', handleScroll);\n\n      if ($.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)) {\n        $viewport.on('mousewheel', handleMouseWheel);\n      }\n\n      $headerScroller\n        .bind('contextmenu', handleHeaderContextMenu)\n        .bind('click', handleHeaderClick)\n        .delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter)\n        .delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n      $headerRowScroller.bind('scroll', handleHeaderRowScroll);\n\n      $footerRowScroller.bind('scroll', handleFooterRowScroll);\n\n      $focusSink.add($focusSink2).bind('keydown', handleKeyDown);\n      $canvas\n        .bind('keydown', handleKeyDown)\n        .bind('click', handleClick)\n        .bind('dblclick', handleDblClick)\n        .bind('contextmenu', handleContextMenu)\n        .delegate('.slick-cell', 'mouseenter', handleMouseEnter)\n        .delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\n      // legacy support for drag events\n      interact($canvas[0])\n        .allowFrom('div.slick-cell')\n        .draggable({\n          onmove: handleDrag,\n          onstart: handleDragStart,\n          onend: handleDragEnd\n        })\n        .styleCursor(false);\n\n      // Work around http://crbug.com/312427.\n      if (\n        navigator.userAgent.toLowerCase().match(/webkit/) &&\n        navigator.userAgent.toLowerCase().match(/macintosh/)\n      ) {\n        $canvas.on('mousewheel', handleMouseWheel);\n      }\n    }\n  }\n\n  function hasFrozenColumns() {\n    return options.frozenColumn > -1;\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(\n        handleSelectedRangesChanged\n      );\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(\n        handleSelectedRangesChanged\n      );\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function getActiveCanvasNode(element) {\n    setActiveCanvasNode(element);\n\n    return $activeCanvasNode[0];\n  }\n\n  function getCanvases() {\n    return $canvas;\n  }\n\n  function setActiveCanvasNode(element) {\n    if (element) {\n      $activeCanvasNode = $(element.target).closest('.grid-canvas');\n    }\n  }\n\n  function getViewportNode() {\n    return $viewport[0];\n  }\n\n  function getActiveViewportNode(element) {\n    setActiveViewportNode(element);\n\n    return $activeViewportNode[0];\n  }\n\n  function setActiveViewportNode(element) {\n    if (element) {\n      $activeViewportNode = $(element.target).closest('.slick-viewport');\n    }\n  }\n\n  function measureScrollbar() {\n    var $c = $(\n      \"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\"\n    ).appendTo(document.body);\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth() {\n    headersWidth = headersWidthL = headersWidthR = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n\n      if (options.frozenColumn > -1 && i > options.frozenColumn) {\n        headersWidthR += width;\n      } else {\n        headersWidthL += width;\n      }\n    }\n\n    if (hasFrozenColumns()) {\n      headersWidthL = headersWidthL + 1000;\n\n      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n      headersWidthR += scrollbarDimensions.width;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    headersWidth = headersWidthL + headersWidthR;\n  }\n\n  function getHeadersWidthL() {\n    headersWidthL = 0;\n\n    columns.forEach(function(column, i) {\n      if (!(options.frozenColumn > -1 && i > options.frozenColumn))\n        headersWidthL += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthL += 1000;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    return headersWidthL;\n  }\n\n  function getHeadersWidthR() {\n    headersWidthR = 0;\n\n    columns.forEach(function(column, i) {\n      if (options.frozenColumn > -1 && i > options.frozenColumn)\n        headersWidthR += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n      headersWidthR += scrollbarDimensions.width;\n    }\n\n    return headersWidthR;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll\n      ? viewportW - scrollbarDimensions.width\n      : viewportW;\n\n    var i = columns.length;\n\n    canvasWidthL = canvasWidthR = 0;\n\n    while (i--) {\n      if (hasFrozenColumns() && i > options.frozenColumn) {\n        canvasWidthR += columns[i].width;\n      } else {\n        canvasWidthL += columns[i].width;\n      }\n    }\n\n    var totalRowWidth = canvasWidthL + canvasWidthR;\n\n    return options.fullWidthRows\n      ? Math.max(totalRowWidth, availableWidth)\n      : totalRowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    var oldCanvasWidthL = canvasWidthL;\n    var oldCanvasWidthR = canvasWidthR;\n    var widthChanged;\n    canvasWidth = getCanvasWidth();\n\n    widthChanged =\n      canvasWidth !== oldCanvasWidth ||\n      canvasWidthL !== oldCanvasWidthL ||\n      canvasWidthR !== oldCanvasWidthR;\n\n    if (widthChanged || hasFrozenColumns() || hasFrozenRows) {\n      $canvasTopL.width(canvasWidthL);\n\n      getHeadersWidth();\n\n      $headerL.width(headersWidthL);\n      $headerR.width(headersWidthR);\n\n      if (hasFrozenColumns()) {\n        $canvasTopR.width(canvasWidthR);\n\n        $paneHeaderL.width(canvasWidthL);\n        $paneHeaderR.css('left', canvasWidthL);\n        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\n        $paneTopL.width(canvasWidthL);\n        $paneTopR.css('left', canvasWidthL);\n        $paneTopR.css('width', viewportW - canvasWidthL);\n\n        $headerRowScrollerL.width(canvasWidthL);\n        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $headerRowL.width(canvasWidthL);\n        $headerRowR.width(canvasWidthR);\n\n        $footerRowScrollerL.width(canvasWidthL);\n        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $footerRowL.width(canvasWidthL);\n        $footerRowR.width(canvasWidthR);\n\n        $viewportTopL.width(canvasWidthL);\n        $viewportTopR.width(viewportW - canvasWidthL);\n\n        if (hasFrozenRows) {\n          $paneBottomL.width(canvasWidthL);\n          $paneBottomR.css('left', canvasWidthL);\n\n          $viewportBottomL.width(canvasWidthL);\n          $viewportBottomR.width(viewportW - canvasWidthL);\n\n          $canvasBottomL.width(canvasWidthL);\n          $canvasBottomR.width(canvasWidthR);\n        }\n      } else {\n        $paneHeaderL.width('100%');\n\n        $paneTopL.width('100%');\n\n        $headerRowScrollerL.width('100%');\n\n        $headerRowL.width(canvasWidth);\n\n        $footerRowScrollerL.width('100%');\n\n        $footerRowL.width(canvasWidth);\n\n        $viewportTopL.width('100%');\n\n        if (hasFrozenRows) {\n          $viewportBottomL.width('100%');\n          $canvasBottomL.width(canvasWidthL);\n        }\n      }\n\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    $headerRowSpacerL.width(\n      canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0)\n    );\n    $headerRowSpacerR.width(\n      canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0)\n    );\n\n    $footerRowSpacerL.width(\n      canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0)\n    );\n    $footerRowSpacerR.width(\n      canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0)\n    );\n\n    if (widthChanged || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target\n        .attr('unselectable', 'on')\n        .css('MozUserSelect', 'none')\n        .bind('selectstart.ui', function() {\n          return false;\n        }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/)\n      ? 6000000\n      : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css('height', test);\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents() {\n    var elem =\n      hasFrozenRows && !options.frozenBottom\n        ? $canvasBottomL[0]\n        : $canvasTopL[0];\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (\n        elem == $viewportTopL[0] ||\n        elem.scrollWidth != elem.clientWidth ||\n        elem.scrollHeight != elem.clientHeight\n      ) {\n        var $elem = $(elem);\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n    $boundAncestors.unbind('scroll.' + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        node: $header[0],\n        column: columnDef\n      });\n\n      $header\n        .attr('title', toolTip || '')\n        .children()\n        .eq(0)\n        .html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        node: $header[0],\n        column: columnDef\n      });\n    }\n  }\n\n  function getHeaderRow() {\n    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $headerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $headerRowTarget = $headerRowL;\n      } else {\n        $headerRowTarget = $headerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $headerRowTarget = $headerRowL;\n    }\n\n    var $header = $headerRowTarget.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRow() {\n    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n  }\n\n  function getFooterRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $footerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $footerRowTarget = $footerRowL;\n      } else {\n        $footerRowTarget = $footerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $footerRowTarget = $footerRowL;\n    }\n\n    var $footer = $footerRowTarget.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnFooter() {\n    $footerRow.find('.slick-footerrow-column').each(function() {\n      var columnDef = $(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeFooterRowCellDestroy, {\n          node: this,\n          column: columnDef\n        });\n      }\n    });\n\n    $footerRowL.empty();\n    $footerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var footerRowCell = $(\n        \"<div class='ui-state-default slick-footerrow-column l\" +\n          i +\n          ' r' +\n          i +\n          \"'></div>\"\n      )\n        .data('column', m)\n        .addClass(\n          hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : ''\n        )\n        .appendTo(\n          hasFrozenColumns() && i > options.frozenColumn\n            ? $footerRowR\n            : $footerRowL\n        );\n\n      trigger(self.onFooterRowCellRendered, {\n        node: footerRowCell[0],\n        column: m\n      });\n    }\n  }\n\n  function createColumnGroupHeaders() {\n    var columnsLength = 0;\n    var frozenColumnsValid = false;\n\n    if (!treeColumns.hasDepth()) return;\n\n    for (var index = 0; index < $groupHeadersL.length; index++) {\n      $groupHeadersL[index].empty();\n      $groupHeadersR[index].empty();\n\n      var groupColumns = treeColumns.getColumnsInDepth(index);\n\n      for (var indexGroup in groupColumns) {\n        var m = groupColumns[indexGroup];\n\n        columnsLength += m.extractColumns().length;\n\n        if (\n          hasFrozenColumns() &&\n          index == 0 &&\n          columnsLength - 1 === options.frozenColumn\n        )\n          frozenColumnsValid = true;\n\n        $(\"<div class='ui-state-default slick-group-header-column' />\")\n          .html(\"<span class='slick-column-name'>\" + m.name + '</span>')\n          .attr('id', '' + uid + m.id)\n          .attr('title', m.toolTip || '')\n          .data('column', m)\n          .addClass(m.headerCssClass || '')\n          .addClass(\n            hasFrozenColumns() && columnsLength - 1 <= options.frozenColumn\n              ? 'frozen'\n              : ''\n          )\n          .appendTo(\n            hasFrozenColumns() && columnsLength - 1 > options.frozenColumn\n              ? $groupHeadersR[index]\n              : $groupHeadersL[index]\n          );\n      }\n\n      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid) {\n        $groupHeadersL[index].empty();\n        $groupHeadersR[index].empty();\n        alert('All columns of group should to be grouped!');\n        break;\n      }\n    }\n\n    applyColumnGroupHeaderWidths();\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      $(this).addClass('ui-state-hover');\n    }\n\n    function onMouseLeave() {\n      $(this).removeClass('ui-state-hover');\n    }\n\n    $headers.find('.slick-header-column').each(function() {\n      var columnDef = $(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          node: this,\n          column: columnDef\n        });\n      }\n    });\n\n    $headerL.empty();\n    $headerR.empty();\n\n    getHeadersWidth();\n\n    $headerL.width(headersWidthL);\n    $headerR.width(headersWidthR);\n\n    $headerRow.find('.slick-headerrow-column').each(function() {\n      var columnDef = $(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          node: this,\n          column: columnDef\n        });\n      }\n    });\n\n    $headerRowL.empty();\n    $headerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var $headerTarget = hasFrozenColumns()\n        ? i <= options.frozenColumn\n          ? $headerL\n          : $headerR\n        : $headerL;\n      var $headerRowTarget = hasFrozenColumns()\n        ? i <= options.frozenColumn\n          ? $headerRowL\n          : $headerRowR\n        : $headerRowL;\n\n      var header = $(\"<div class='ui-state-default slick-header-column' />\")\n        .html(\"<span class='slick-column-name'>\" + m.name + '</span>')\n        .width(m.width - headerColumnWidthDiff)\n        .attr('id', '' + uid + m.id)\n        .attr('title', m.toolTip || '')\n        .data('column', m)\n        .addClass(m.headerCssClass || '')\n        .addClass(\n          hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : ''\n        )\n        .appendTo($headerTarget);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass('slick-header-sortable');\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        node: header[0],\n        column: m\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = $(\n          \"<div class='ui-state-default slick-headerrow-column l\" +\n            i +\n            ' r' +\n            i +\n            \"'></div>\"\n        )\n          .data('column', m)\n          .appendTo($headerRowTarget);\n\n        trigger(self.onHeaderRowCellRendered, {\n          node: headerRowCell[0],\n          column: m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder) {\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function(e) {\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass('slick-resizable-handle')) {\n        return;\n      }\n\n      var $col = $(e.target).closest('.slick-header-column');\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data('column');\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort) {\n          if (sortOpts) {\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (!sortOpts) {\n            sortOpts = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0) {\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(\n            self.onSort,\n            {\n              multiColumnSort: false,\n              sortCol: column,\n              sortAsc: sortOpts.sortAsc\n            },\n            e\n          );\n        } else {\n          trigger(\n            self.onSort,\n            {\n              multiColumnSort: true,\n              sortCols: $.map(sortColumns, function(col) {\n                return {\n                  sortCol: columns[getColumnIndex(col.columnId)],\n                  sortAsc: col.sortAsc\n                };\n              })\n            },\n            e\n          );\n        }\n      }\n    });\n  }\n\n  function currentPositionInHeader(id) {\n    var currentPosition = 0;\n    $headers.find('.slick-header-column').each(function(i) {\n      if (this.id == id) {\n        currentPosition = i;\n        return false;\n      }\n    });\n\n    return currentPosition;\n  }\n\n  function limitPositionInGroup(idColumn) {\n    var groupColumnOfPreviousPosition,\n      startLimit = 0,\n      endLimit = 0;\n\n    treeColumns\n      .getColumnsInDepth($groupHeadersL.length - 1)\n      .some(function(groupColumn) {\n        startLimit = endLimit;\n        endLimit += groupColumn.columns.length;\n\n        groupColumn.columns.some(function(column) {\n          if (column.id === idColumn)\n            groupColumnOfPreviousPosition = groupColumn;\n\n          return groupColumnOfPreviousPosition;\n        });\n\n        return groupColumnOfPreviousPosition;\n      });\n\n    endLimit--;\n\n    return {\n      start: startLimit,\n      end: endLimit,\n      group: groupColumnOfPreviousPosition\n    };\n  }\n\n  function remove(arr, elem) {\n    var index = arr.lastIndexOf(elem);\n    if (index > -1) {\n      arr.splice(index, 1);\n      remove(arr, elem);\n    }\n  }\n\n  function columnPositionValidInGroup($item) {\n    var currentPosition = currentPositionInHeader($item[0].id);\n    var limit = limitPositionInGroup($item.data('column').id);\n    var positionValid =\n      limit.start <= currentPosition && currentPosition <= limit.end;\n\n    return {\n      limit: limit,\n      valid: positionValid,\n      message: positionValid\n        ? ''\n        : 'Column \"'.concat(\n            $item.text(),\n            '\" can be reordered only within the \"',\n            limit.group.name,\n            '\" group!'\n          )\n    };\n  }\n\n  function setupColumnReorder() {\n    let x = 0;\n    let delta = 0;\n    let placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    const selector =\n      options.frozenColumn !== -1\n        ? '.slick-header-right .slick-header-column'\n        : '.slick-header-column';\n    interact(selector, {context: $container[0]})\n      .ignoreFrom('.slick-resizable-handle')\n      .draggable({\n        inertia: true,\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: 'parent',\n          endOnly: true,\n          elementRect: {top: 0, left: 0, bottom: 0, right: 0}\n        },\n        // enable autoScroll\n        autoScroll: true,\n        axis: 'x',\n        onstart: event => {\n          x = 0;\n          delta = event.target.offsetWidth;\n\n          // get old order\n          $headers.find('.slick-header-column').each(function(index) {\n            $(this).data('index', index);\n          });\n\n          placeholder.style.height = event.target.offsetHeight + 'px';\n          placeholder.style.width = delta + 'px';\n\n          $(event.target)\n            .after(placeholder)\n            .css({\n              position: 'absolute',\n              zIndex: 1000,\n              marginLeft: $(event.target).position().left - 1000\n            });\n        },\n\n        onmove: event => {\n          x += event.dx;\n          event.target.style.transform = `translate3d(${x}px, -3px, 100px)`;\n          event.target.style.zIndex = 1000;\n        },\n\n        onend: event => {\n          x = 0;\n          delta = 0;\n\n          if (treeColumns.hasDepth()) {\n            var validPositionInGroup = columnPositionValidInGroup(\n              $(event.target)\n            );\n            var limit = validPositionInGroup.limit;\n\n            var cancel = !validPositionInGroup.valid;\n\n            if (cancel) alert(validPositionInGroup.message);\n          }\n\n          placeholder.parentNode.removeChild(placeholder);\n\n          if (cancel) {\n            event.target.style.transform = 'none';\n            setColumns(getColumns());\n            return;\n          }\n\n          $(event.target).css({\n            position: 'relative',\n            zIndex: '',\n            marginLeft: 0,\n            transform: 'none'\n          });\n\n          const newColumns = [];\n          $headers.find('.slick-header-column').each(function(index) {\n            newColumns.push(columns[$(this).data('index')]);\n            $(this).removeData('index');\n          });\n\n          setColumns(newColumns);\n\n          trigger(self.onColumnsReordered, {\n            impactedColumns: getImpactedColumns(limit),\n            grid: self\n          });\n          setupColumnResize();\n        }\n      })\n      .dropzone({\n        accept: selector,\n\n        ondragenter: event => {\n          event.target.classList.add('interact-drop-active');\n          event.relatedTarget.classList.add('interact-can-drop');\n        },\n\n        ondragleave: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n        },\n\n        ondrop: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n          $(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n        }\n      })\n      .styleCursor(false);\n  }\n\n  function getImpactedColumns(limit) {\n    var impactedColumns = [];\n\n    if (limit != undefined) {\n      for (var i = limit.start; i <= limit.end; i++) {\n        impactedColumns.push(columns[i]);\n      }\n    } else {\n      impactedColumns = columns;\n    }\n\n    return impactedColumns;\n  }\n\n  function setupColumnResize() {\n    var $col,\n      j,\n      c,\n      pageX,\n      columnElements,\n      minPageX,\n      maxPageX,\n      firstResizable,\n      lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function(i, e) {\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined) {\n      return;\n    }\n    columnElements.each(function(i, element) {\n      if (\n        i < firstResizable ||\n        (options.forceFitColumns && i >= lastResizable)\n      ) {\n        return;\n      }\n      $col = $(element);\n\n      const $handle = $(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable')) return;\n\n      const activeColumn = columns[i];\n      if (activeColumn.resizable) {\n        $col.data('resizable', true);\n        interact(element)\n          .resizable({\n            preserveAspectRatio: false,\n            edges: {left: true, right: true, bottom: false, top: false}\n          })\n          .on('resizestart', function(event) {\n            if (!getEditorLock().commitCurrentEdit()) {\n              return false;\n            }\n            activeColumn.previousWidth = event.rect.width;\n            event.target.classList.add('slick-header-column-active');\n          })\n          .on('resizemove', function(event) {\n            let x = event.dx;\n            let width = (activeColumn.width += x);\n\n            if (activeColumn.minWidth > 0 && activeColumn.minWidth > width)\n              width = activeColumn.minWidth;\n            else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width)\n              width = activeColumn.maxWidth;\n\n            activeColumn.width = width;\n\n            if (options.forceFitColumns) {\n              autosizeColumns();\n            }\n            applyColumnHeaderWidths();\n            if (options.syncColumnCellResize) {\n              applyColumnWidths();\n            }\n          })\n          .on('resizeend', function(event) {\n            event.target.classList.remove('slick-header-column-active');\n            if (treeColumns.hasDepth()) createColumnGroupHeaders();\n\n            invalidateAllRows();\n            updateCanvasWidth(true);\n            render();\n            trigger(self.onColumnsResized, {grid: self});\n          });\n      }\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = [\n      'borderTopWidth',\n      'borderBottomWidth',\n      'paddingTop',\n      'paddingBottom'\n    ];\n    var delta = 0;\n    $.each(p, function(n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function setFrozenOptions() {\n    options.frozenColumn =\n      options.frozenColumn >= 0 && options.frozenColumn < columns.length\n        ? parseInt(options.frozenColumn)\n        : -1;\n\n    options.frozenRow =\n      options.frozenRow >= 0 && options.frozenRow < numVisibleRows\n        ? parseInt(options.frozenRow)\n        : -1;\n\n    if (options.frozenRow > -1) {\n      hasFrozenRows = true;\n      frozenRowsHeight = options.frozenRow * options.rowHeight;\n\n      var dataLength = getDataLength() || this.data.length;\n\n      actualFrozenRow = options.frozenBottom\n        ? dataLength - options.frozenRow\n        : options.frozenRow;\n    } else {\n      hasFrozenRows = false;\n    }\n  }\n\n  function setPaneVisibility() {\n    if (hasFrozenColumns()) {\n      $paneHeaderR.show();\n      $paneTopR.show();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n        $paneBottomR.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    } else {\n      $paneHeaderR.hide();\n      $paneTopR.hide();\n      $paneBottomR.hide();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    }\n  }\n\n  function setOverflow() {\n    $viewportTopL.css({\n      'overflow-x': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'hidden'\n          : 'scroll'\n        : hasFrozenRows\n        ? 'hidden'\n        : 'auto',\n      'overflow-y': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'hidden'\n          : 'hidden'\n        : hasFrozenRows\n        ? 'scroll'\n        : 'auto'\n    });\n\n    $viewportTopR.css({\n      'overflow-x': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'hidden'\n          : 'scroll'\n        : hasFrozenRows\n        ? 'hidden'\n        : 'auto',\n      'overflow-y': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'scroll'\n          : 'auto'\n        : hasFrozenRows\n        ? 'scroll'\n        : 'auto'\n    });\n\n    $viewportBottomL.css({\n      'overflow-x': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'scroll'\n          : 'auto'\n        : hasFrozenRows\n        ? 'auto'\n        : 'auto',\n      'overflow-y': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'hidden'\n          : 'hidden'\n        : hasFrozenRows\n        ? 'scroll'\n        : 'auto'\n    });\n\n    $viewportBottomR.css({\n      'overflow-x': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'scroll'\n          : 'auto'\n        : hasFrozenRows\n        ? 'auto'\n        : 'auto',\n      'overflow-y': hasFrozenColumns()\n        ? hasFrozenRows\n          ? 'auto'\n          : 'auto'\n        : hasFrozenRows\n        ? 'auto'\n        : 'auto'\n    });\n  }\n\n  function setScroller() {\n    if (hasFrozenColumns()) {\n      $headerScrollContainer = $headerScrollerR;\n      $headerRowScrollContainer = $headerRowScrollerR;\n      $footerRowScrollContainer = $footerRowScrollerR;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomR;\n          $viewportScrollContainerY = $viewportTopR;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n      }\n    } else {\n      $headerScrollContainer = $headerScrollerL;\n      $headerRowScrollContainer = $headerRowScrollerL;\n      $footerRowScrollContainer = $footerRowScrollerL;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomL;\n          $viewportScrollContainerY = $viewportTopL;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n      }\n    }\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = [\n      'borderLeftWidth',\n      'borderRightWidth',\n      'paddingLeft',\n      'paddingRight'\n    ];\n    var v = [\n      'borderTopWidth',\n      'borderBottomWidth',\n      'paddingTop',\n      'paddingBottom'\n    ];\n\n    el = $(\n      \"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\"\n    ).appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (\n      el.css('box-sizing') != 'border-box' &&\n      el.css('-moz-box-sizing') != 'border-box' &&\n      el.css('-webkit-box-sizing') != 'border-box'\n    ) {\n      $.each(h, function(n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\n      \"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\"\n    ).appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (\n      el.css('box-sizing') != 'border-box' &&\n      el.css('-moz-box-sizing') != 'border-box' &&\n      el.css('-webkit-box-sizing') != 'border-box'\n    ) {\n      $.each(h, function(n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo(\n      $('head')\n    );\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = [\n      '.' + uid + ' .slick-group-header-column { left: 1000px; }',\n      '.' + uid + ' .slick-header-column { left: 1000px; }',\n      '.' +\n        uid +\n        ' .slick-top-panel { height:' +\n        options.topPanelHeight +\n        'px; }',\n      '.' +\n        uid +\n        ' .slick-headerrow-columns { height:' +\n        options.headerRowHeight +\n        'px; }',\n      '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n      '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }',\n      '.' +\n        uid +\n        ' .slick-footerrow-columns { height:' +\n        options.footerRowHeight +\n        'px; }'\n    ];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error('Cannot find stylesheet.');\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n        if ((matches = /\\.l\\d+/.exec(selector))) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if ((matches = /\\.r\\d+/.exec(selector))) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      left: columnCssRulesL[idx],\n      right: columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {});\n\n    var i = plugins.length;\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind('.slickgrid');\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e) {\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n      c,\n      widths = [],\n      shrinkLeeway = 0,\n      total = 0,\n      prevTotal,\n      availWidth = viewportHasVScroll\n        ? viewportW - scrollbarDimensions.width\n        : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n        if (\n          !c.resizable ||\n          width <= c.minWidth ||\n          width <= absoluteColumnMinWidth\n        ) {\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize =\n          Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize =\n            Math.min(\n              Math.floor(growProportion * currentWidth) - currentWidth,\n              c.maxWidth - currentWidth || 1000000\n            ) || 1;\n        }\n        total += growSize;\n        widths[i] += growSize;\n      }\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    applyColumnGroupHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnGroupHeaderWidths() {\n    if (!treeColumns.hasDepth()) return;\n\n    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--) {\n      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\n      $()\n        .add($groupHeadersL[depth])\n        .add($groupHeadersR[depth])\n        .each(function(i) {\n          var $groupHeader = $(this),\n            currentColumnIndex = 0;\n\n          $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\n          $groupHeader.children().each(function() {\n            var $groupHeaderColumn = $(this);\n\n            var m = $(this).data('column');\n\n            m.width = 0;\n\n            m.columns.forEach(function() {\n              var $headerColumn = $groupHeader\n                .next()\n                .children(':eq(' + currentColumnIndex++ + ')');\n              m.width += $headerColumn.outerWidth();\n            });\n\n            $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n          });\n        });\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n    var h;\n    for (\n      var i = 0, headers = $headers.children(), ii = headers.length;\n      i < ii;\n      i++\n    ) {\n      h = $(headers[i]);\n      if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n        h.width(columns[i].width - headerColumnWidthDiff);\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n      w,\n      rule;\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + 'px';\n      rule.right.style.right =\n        (options.frozenColumn != -1 && i > options.frozenColumn\n          ? canvasWidthR\n          : canvasWidthL) -\n        x -\n        w +\n        'px';\n\n      // If this column is frozen, reset the css left value since the\n      // column starts in a new viewport.\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([\n      {\n        columnId: columnId,\n        sortAsc: ascending\n      }\n    ]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls\n      .removeClass('slick-header-column-sorted')\n      .find('.slick-sort-indicator')\n      .removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\n    $.each(sortColumns, function(i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null) {\n        headerColumnEls\n          .eq(columnIndex)\n          .addClass('slick-header-column-sorted')\n          .find('.slick-sort-indicator')\n          .addClass(\n            col.sortAsc\n              ? 'slick-sort-indicator-asc'\n              : 'slick-sort-indicator-desc'\n          );\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(\n      self.onSelectedRowsChanged,\n      {\n        rows: getSelectedRows()\n      },\n      e\n    );\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    var _treeColumns = new Slick.TreeColumns(columnDefinitions);\n    if (_treeColumns.hasDepth()) {\n      treeColumns = _treeColumns;\n      columns = treeColumns.extractColumns();\n    } else {\n      columns = columnDefinitions;\n    }\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = (columns[i] = $.extend({}, columnDefaults, columns[i]));\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      setPaneVisibility();\n      setOverflow();\n\n      invalidateAllRows();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      updateCanvasWidth();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n\n    setFrozenOptions();\n    setScroller();\n    zombieRowNodeFromLastMouseWheelEvent = null;\n\n    // https://github.com/ddomingues/X-SlickGrid/pull/26/commits/e08d6351bd350b3c203b91dd360acc5b505caaf0\n    if (treeColumns.hasDepth()) setColumns(treeColumns.extractColumns());\n    render();\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n      if (visible) {\n        $topPanelScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n      if (visible) {\n        $headerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n      if (visible) {\n        $footerRowScroller.fadeIn('fast', resizeCanvas);\n      } else {\n        $footerRowScroller.slideDown('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(\n      y,\n      th -\n        $viewportScrollContainerY.height() +\n        (viewportHasHScroll || hasFrozenColumns()\n          ? scrollbarDimensions.height\n          : 0)\n    );\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n\n      lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\n      if (hasFrozenColumns()) {\n        $viewportTopL[0].scrollTop = newScrollTop;\n      }\n\n      if (hasFrozenRows) {\n        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n      }\n\n      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n    if (value == null) {\n      return '';\n    } else {\n      return (value + '')\n        .replace(/&/g, '&')\n        .replace(/</g, '<')\n        .replace(/>/g, '>');\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides =\n      rowMetadata &&\n      rowMetadata.columns &&\n      (rowMetadata.columns[column.id] ||\n        rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return (\n      (columnOverrides && columnOverrides.formatter) ||\n      (rowMetadata && rowMetadata.formatter) ||\n      column.formatter ||\n      (options.formatterFactory &&\n        options.formatterFactory.getFormatter(column)) ||\n      options.defaultFormatter\n    );\n  }\n\n  function callFormatter(row, cell, value, m, item) {\n    var result;\n\n    // pass metadata to formatter\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    metadata = metadata && metadata.columns;\n\n    if (metadata) {\n      var columnData = metadata[m.id] || metadata[cell];\n      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n    } else {\n      result = getFormatter(row, m)(row, cell, value, m, item);\n    }\n\n    return result;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (\n      columnMetadata &&\n      columnMetadata[column.id] &&\n      columnMetadata[column.id].editor !== undefined\n    ) {\n      return columnMetadata[column.id].editor;\n    }\n    if (\n      columnMetadata &&\n      columnMetadata[cell] &&\n      columnMetadata[cell].editor !== undefined\n    ) {\n      return columnMetadata[cell].editor;\n    }\n\n    return (\n      column.editor ||\n      (options.editorFactory && options.editorFactory.getEditor(column))\n    );\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss =\n      'slick-row' +\n      (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') +\n      (dataLoading ? ' loading' : '') +\n      (row === activeRow ? ' active' : '') +\n      (row % 2 == 1 ? ' odd' : ' even');\n\n    if (!d) {\n      rowCss += ' ' + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += ' ' + metadata.cssClasses;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var rowHtml =\n      \"<div class='ui-widget-content \" +\n      rowCss +\n      \"' style='top:\" +\n      (getRowTop(row) - frozenRowOffset) +\n      \"px'>\";\n\n    stringArrayL.push(rowHtml);\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push(rowHtml);\n    }\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = (columnData && columnData.colspan) || 1;\n        if (colspan === '*') {\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        if (hasFrozenColumns() && i > options.frozenColumn) {\n          appendCellHtml(stringArrayR, row, i, colspan, d);\n        } else {\n          appendCellHtml(stringArrayL, row, i, colspan, d);\n        }\n      } else if (hasFrozenColumns() && i <= options.frozenColumn) {\n        appendCellHtml(stringArrayL, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArrayL.push('</div>');\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push('</div>');\n    }\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    var m = columns[cell];\n    var cellCss =\n      'slick-cell l' +\n      cell +\n      ' r' +\n      Math.min(columns.length - 1, cell + colspan - 1) +\n      (m.cssClass ? ' ' + m.cssClass : '');\n\n    if (hasFrozenColumns() && cell <= options.frozenColumn)\n      cellCss += ' frozen';\n\n    if (row === activeRow && cell === activeCell) cellCss += ' active';\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += ' ' + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item) {\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(callFormatter(row, cell, value, m, item));\n    }\n\n    stringArray.push('</div>');\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      var removeFrozenRow = true;\n\n      if (\n        hasFrozenRows &&\n        ((options.frozenBottom && i >= actualFrozenRow) || // Frozen bottom rows\n          (!options.frozenBottom && i <= actualFrozenRow)) // Frozen top rows\n      ) {\n        removeFrozenRow = false;\n      }\n\n      if (\n        (i = parseInt(i, 10)) !== activeRow &&\n        (i < rangeToKeep.top || i > rangeToKeep.bottom) &&\n        removeFrozenRow\n      ) {\n        removeRowFromCache(i);\n      }\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (\n      rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] ||\n      (hasFrozenColumns() &&\n        rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1])\n    ) {\n      cacheEntry.rowNode.hide();\n\n      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n    } else {\n      cacheEntry.rowNode.each(function() {\n        this.parentElement.removeChild(this);\n      });\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n    if (!rows || !rows.length) {\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n  }\n\n  function invalidateRow(row) {\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n      d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d\n        ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d)\n        : '';\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n        node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        node.innerHTML = callFormatter(\n          row,\n          columnIdx,\n          getDataItemValueForColumn(d, m),\n          m,\n          d\n        );\n      } else {\n        node.innerHTML = '';\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    if (options.autoHeight) {\n      viewportH =\n        options.rowHeight * getDataLengthIncludingAddNew() +\n        (options.frozenColumn == -1 ? $headers.outerHeight() : 0);\n    } else {\n      topPanelH = options.showTopPanel\n        ? options.topPanelHeight + getVBoxDelta($topPanelScroller)\n        : 0;\n\n      headerRowH = options.showHeaderRow\n        ? options.headerRowHeight + getVBoxDelta($headerRowScroller)\n        : 0;\n\n      footerRowH = options.showFooterRow\n        ? options.footerRowHeight + getVBoxDelta($footerRowScroller)\n        : 0;\n\n      viewportH =\n        parseFloat($.css($container[0], 'height', true)) -\n        parseFloat($.css($container[0], 'paddingTop', true)) -\n        parseFloat($.css($container[0], 'paddingBottom', true)) -\n        parseFloat($.css($headerScroller[0], 'height')) -\n        getVBoxDelta($headerScroller) -\n        topPanelH -\n        headerRowH -\n        footerRowH;\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n  }\n\n  function getViewportWidth() {\n    viewportW = parseFloat($.css($container[0], 'width', true));\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n\n    paneTopH = 0;\n    paneBottomH = 0;\n    viewportTopH = 0;\n    viewportBottomH = 0;\n\n    getViewportWidth();\n    getViewportHeight();\n\n    // Account for Frozen Rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\n        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n      } else {\n        paneTopH = frozenRowsHeight;\n        paneBottomH = viewportH - frozenRowsHeight;\n      }\n    } else {\n      paneTopH = viewportH;\n    }\n\n    // The top pane includes the top panel and the header row\n    paneTopH += topPanelH + headerRowH + footerRowH;\n\n    if (hasFrozenColumns() && options.autoHeight) {\n      paneTopH += scrollbarDimensions.height;\n    }\n\n    // The top viewport does not contain the top panel or header row\n    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\n    // dimi: when no frozen columns and too many columns, scrollbar goes off-screen as opposed to on the left pane\n    if (!hasFrozenColumns() && !options.autoHeight) {\n      viewportTopH -= scrollbarDimensions.height;\n    }\n\n    if (options.autoHeight) {\n      if (hasFrozenColumns()) {\n        $container.height(\n          paneTopH + parseFloat($.css($headerScrollerL[0], 'height'))\n        );\n      }\n\n      $paneTopL.css('position', 'relative');\n    }\n\n    $paneTopL.css({\n      top: $paneHeaderL.height(),\n      height: paneTopH\n    });\n\n    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\n    $viewportTopL.height(viewportTopH);\n\n    if (hasFrozenColumns()) {\n      $paneTopR.css({\n        top: $paneHeaderL.height(),\n        height: paneTopH\n      });\n\n      $viewportTopR.height(viewportTopH);\n\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          top: paneBottomTop,\n          height: paneBottomH\n        });\n\n        $paneBottomR.css({\n          top: paneBottomTop,\n          height: paneBottomH\n        });\n\n        $viewportBottomR.height(paneBottomH);\n      }\n    } else {\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          width: '100%',\n          height: paneBottomH\n        });\n\n        $paneBottomL.css('top', paneBottomTop);\n      }\n    }\n\n    if (hasFrozenRows) {\n      $viewportBottomL.height(paneBottomH);\n\n      if (options.frozenBottom) {\n        $canvasBottomL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.height(frozenRowsHeight);\n        }\n      } else {\n        $canvasTopL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasTopR.height(frozenRowsHeight);\n        }\n      }\n    } else {\n      $viewportTopR.height(viewportTopH);\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = 0;\n    var oldH =\n      hasFrozenRows && !options.frozenBottom\n        ? $canvasBottomL.height()\n        : $canvasTopL.height();\n\n    if (hasFrozenRows) {\n      var numberOfRows = getDataLength() - options.frozenRow;\n    } else {\n      var numberOfRows =\n        dataLengthIncludingAddNew +\n        (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    }\n\n    var tempViewportH = $viewportScrollContainerY.height();\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll =\n      !options.autoHeight && numberOfRows * options.rowHeight > tempViewportH;\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache) {\n      if (i >= l) {\n        removeRowFromCache(i);\n      }\n    }\n\n    th = Math.max(\n      options.rowHeight * numberOfRows,\n      tempViewportH - scrollbarDimensions.height\n    );\n\n    if (activeCellNode && activeRow > l) {\n      resetActiveCell();\n    }\n\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      if (hasFrozenRows && !options.frozenBottom) {\n        $canvasBottomL.css('height', h);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.css('height', h);\n        }\n      } else {\n        $canvasTopL.css('height', h);\n        $canvasTopR.css('height', h);\n      }\n\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - tempViewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - tempViewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (\n      options.forceFitColumns &&\n      oldViewportHasVScroll != viewportHasVScroll\n    ) {\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var $lastNode = cacheEntry.rowNode.children().last();\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n          $lastNode = $lastNode.prev();\n\n          // Hack to retrieve the frozen columns because\n          if ($lastNode.length == 0) {\n            $lastNode = $(cacheEntry.rowNode[0])\n              .children()\n              .last();\n          }\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    // Ignore frozen rows\n    if (\n      hasFrozenRows &&\n      ((options.frozenBottom && row > actualFrozenRow) || // Frozen bottom rows\n        row <= actualFrozenRow) // Frozen top rows\n    ) {\n      return;\n    }\n\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      // Ignore frozen columns\n      if (i <= options.frozenColumn) {\n        continue;\n      }\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (\n        columnPosLeft[i] > range.rightPx ||\n        columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] <\n          range.leftPx\n      ) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove;\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      cacheEntry.cellNodesByColumnIdx[\n        cellToRemove\n      ][0].parentElement.removeChild(\n        cacheEntry.cellNodesByColumnIdx[cellToRemove][0]\n      );\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === '*') {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    var processedRow;\n    var $node;\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        $node = $(x)\n          .children()\n          .last();\n\n        if (hasFrozenColumns() && columnIdx > options.frozenColumn) {\n          $(cacheEntry.rowNode[1]).append($node);\n        } else {\n          $(cacheEntry.rowNode[0]).append($node);\n        }\n\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var stringArrayL = [],\n      stringArrayR = [],\n      rows = [],\n      needToReselectCell = false,\n      dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (\n        rowsCache[i] ||\n        (hasFrozenRows && options.frozenBottom && i == getDataLength())\n      ) {\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        rowNode: null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        cellColSpans: [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        cellNodesByColumnIdx: [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        cellRenderQueue: []\n      };\n\n      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement('div'),\n      xRight = document.createElement('div');\n\n    x.innerHTML = stringArrayL.join('');\n    xRight.innerHTML = stringArrayR.join('');\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      if (hasFrozenRows && rows[i] >= actualFrozenRow) {\n        if (hasFrozenColumns()) {\n          rowsCache[rows[i]].rowNode = $()\n            .add($(x.firstChild).appendTo($canvasBottomL))\n            .add($(xRight.firstChild).appendTo($canvasBottomR));\n        } else {\n          rowsCache[rows[i]].rowNode = $().add(\n            $(x.firstChild).appendTo($canvasBottomL)\n          );\n        }\n      } else if (hasFrozenColumns()) {\n        rowsCache[rows[i]].rowNode = $()\n          .add($(x.firstChild).appendTo($canvasTopL))\n          .add($(xRight.firstChild).appendTo($canvasTopR));\n      } else {\n        rowsCache[rows[i]].rowNode = $().add(\n          $(x.firstChild).appendTo($canvasTopL)\n        );\n      }\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(\n      asyncPostProcessRows,\n      options.asyncPostRenderDelay\n    );\n  }\n\n  function invalidatePostProcessingResults(row) {\n    delete postProcessedRows[row];\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.css('top', getRowTop(row) + 'px');\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft) {\n      if (hasFrozenRows) {\n        var renderedFrozenRows = $.extend(true, {}, rendered);\n\n        if (options.frozenBottom) {\n          renderedFrozenRows.top = actualFrozenRow;\n          renderedFrozenRows.bottom = getDataLength();\n        } else {\n          renderedFrozenRows.top = 0;\n          renderedFrozenRows.bottom = options.frozenRow;\n        }\n\n        cleanUpAndRenderCells(renderedFrozenRows);\n      }\n\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    // Render frozen rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        renderRows({\n          top: actualFrozenRow,\n          bottom: getDataLength() - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      } else {\n        renderRows({\n          top: 0,\n          bottom: options.frozenRow - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      }\n    }\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(\n      getDataLengthIncludingAddNew() - 1,\n      visible.bottom\n    );\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll() {\n    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll() {\n    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleMouseWheel(e, delta, deltaX, deltaY) {\n    var $rowNode = $(e.target).closest('.slick-row');\n    var rowNode = $rowNode[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n      var $gridCanvas = $rowNode.parents('.grid-canvas');\n      var left = $gridCanvas.hasClass('grid-canvas-left');\n\n      if (\n        zombieRowNodeFromLastMouseWheelEvent &&\n        zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode\n      ) {\n        var zombieRow =\n          zombieRowNodeFromLastMouseWheelEvent[\n            left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1\n          ];\n        zombieRow.parentElement.removeChild(zombieRow);\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n\n    scrollTop = Math.max(\n      0,\n      $viewportScrollContainerY[0].scrollTop - deltaY * options.rowHeight\n    );\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft + deltaX * 10;\n    var handled = _handleScroll(true);\n    if (handled) e.preventDefault();\n  }\n\n  function handleScroll() {\n    scrollTop = $viewportScrollContainerY[0].scrollTop;\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n    return _handleScroll(false);\n  }\n\n  function _handleScroll(isMouseWheel) {\n    var maxScrollDistanceY =\n      $viewportScrollContainerY[0].scrollHeight -\n      $viewportScrollContainerY[0].clientHeight;\n    var maxScrollDistanceX =\n      $viewportScrollContainerY[0].scrollWidth -\n      $viewportScrollContainerY[0].clientWidth;\n    var hasFrozenCols = hasFrozenColumns();\n\n    // Ceiling the max scroll values\n    if (scrollTop > maxScrollDistanceY) {\n      scrollTop = maxScrollDistanceY;\n    }\n    if (scrollLeft > maxScrollDistanceX) {\n      scrollLeft = maxScrollDistanceX;\n    }\n\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n      $headerScrollContainer[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows) {\n          $viewportTopR[0].scrollLeft = scrollLeft;\n        }\n      } else {\n        if (hasFrozenRows) {\n          $viewportTopL[0].scrollLeft = scrollLeft;\n        }\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      if (isMouseWheel) {\n        $viewportScrollContainerY[0].scrollTop = scrollTop;\n      }\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows && !options.frozenBottom) {\n          $viewportBottomL[0].scrollTop = scrollTop;\n        } else {\n          $viewportTopL[0].scrollTop = scrollTop;\n        }\n      }\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(\n            n - 1,\n            Math.floor(\n              scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)\n            )\n          );\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      if (h_render) {\n        cancelAnimationFrame(h_render);\n      }\n\n      if (\n        Math.abs(lastRenderedScrollTop - scrollTop) > 20 ||\n        Math.abs(lastRenderedScrollLeft - scrollLeft) > 20\n      ) {\n        if (\n          options.forceSyncScrolling ||\n          (Math.abs(lastRenderedScrollTop - scrollTop) < viewportH &&\n            Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW)\n        ) {\n          render();\n        } else {\n          h_render = requestAnimationFrame(render);\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (hScrollDist || vScrollDist) return true;\n    return false;\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]) {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m);\n          }\n          postProcessedRows[row][columnIdx] = true;\n        }\n      }\n\n      h_postrender = setTimeout(\n        asyncPostProcessRows,\n        options.asyncPostRenderDelay\n      );\n      return;\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (\n            !addedRowHash ||\n            removedRowHash[columnId] != addedRowHash[columnId]\n          ) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (\n            !removedRowHash ||\n            removedRowHash[columnId] != addedRowHash[columnId]\n          ) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw \"addCellCssStyles: cell CSS hash with key '\" +\n        key +\n        \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {\n      key: key,\n      hash: hash\n    });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {\n      key: key,\n      hash: null\n    });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {\n      key: key,\n      hash: hash\n    });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n    if (rowsCache[row]) {\n      var $cell = $(getCellNode(row, cell));\n\n      function toggleCellClass(times) {\n        if (!times) {\n          return;\n        }\n        setTimeout(function() {\n          $cell.queue(function() {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      }\n\n      toggleCellClass(4);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleDragInit(e, dd) {\n    var cell = getCellFromEvent(e);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n    if (e.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n    return false;\n  }\n\n  function handleDragStart(interactEvent) {\n    var event = $.Event(\n      interactEvent.originalEvent.type,\n      interactEvent.originalEvent\n    );\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent) {\n    var event = $.Event(\n      interactEvent.originalEvent.type,\n      interactEvent.originalEvent\n    );\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent) {\n    trigger(self.onDragEnd, interactEvent, $.Event('mousedown'));\n  }\n\n  function handleKeyDown(e) {\n    trigger(\n      self.onKeyDown,\n      {\n        row: activeRow,\n        cell: activeCell\n      },\n      e\n    );\n    var handled = e.isImmediatePropagationStopped();\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        if (e.which == 27) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == 34) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == 33) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == 37) {\n          handled = navigateLeft();\n        } else if (e.which == 39) {\n          handled = navigateRight();\n        } else if (e.which == 38) {\n          handled = navigateUp();\n        } else if (e.which == 40) {\n          handled = navigateDown();\n        } else if (e.which == 9) {\n          handled = navigateNext();\n        } else if (e.which == 13) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      } catch (error) {\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      }\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (\n        e.target != document.activeElement ||\n        $(e.target).hasClass('slick-cell')\n      ) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (\n      !cell ||\n      (currentEditor !== null &&\n        activeRow == cell.row &&\n        activeCell == cell.cell)\n    ) {\n      return;\n    }\n\n    trigger(\n      self.onClick,\n      {\n        row: cell.row,\n        cell: cell.cell\n      },\n      e\n    );\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (\n      (activeCell != cell.cell || activeRow != cell.row) &&\n      canCellBeActive(cell.row, cell.cell)\n    ) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if ($cell.length === 0) {\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n    if (\n      !cell ||\n      (currentEditor !== null &&\n        activeRow == cell.row &&\n        activeCell == cell.cell)\n    ) {\n      return;\n    }\n\n    trigger(\n      self.onDblClick,\n      {\n        row: cell.row,\n        cell: cell.cell\n      },\n      e\n    );\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(\n      self.onHeaderMouseEnter,\n      {\n        column: $(this).data('column')\n      },\n      e\n    );\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(\n      self.onHeaderMouseLeave,\n      {\n        column: $(this).data('column')\n      },\n      e\n    );\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = $(e.target).closest(\n      '.slick-header-column',\n      '.slick-header-columns'\n    );\n    var column = $header && $header.data('column');\n    trigger(\n      self.onHeaderContextMenu,\n      {\n        column: column\n      },\n      e\n    );\n  }\n\n  function handleHeaderClick(e) {\n    var $header = $(e.target).closest(\n      '.slick-header-column',\n      '.slick-header-columns'\n    );\n    var column = $header && $header.data('column');\n    if (column) {\n      trigger(\n        self.onHeaderClick,\n        {\n          column: column\n        },\n        e\n      );\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(\n      row < 0 ||\n      row >= getDataLength() ||\n      cell < 0 ||\n      cell >= columns.length\n    );\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls) {\n      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache)\n      for (var i in rowsCache[row].rowNode)\n        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n\n    return null;\n  }\n\n  function getFrozenRowOffset(row) {\n    var offset = hasFrozenRows\n      ? options.frozenBottom\n        ? row >= actualFrozenRow\n          ? h < viewportTopH\n            ? actualFrozenRow * options.rowHeight\n            : h\n          : 0\n        : row >= actualFrozenRow\n        ? frozenRowsHeight\n        : 0\n      : 0;\n\n    return offset;\n  }\n\n  function getCellFromEvent(e) {\n    var row, cell;\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if (!$cell.length) {\n      return null;\n    }\n\n    row = getRowFromNode($cell[0].parentNode);\n\n    if (hasFrozenRows) {\n      var c = $cell.parents('.grid-canvas').offset();\n\n      var rowOffset = 0;\n      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\n      if (isBottom) {\n        rowOffset = options.frozenBottom\n          ? $canvasTopL.height()\n          : frozenRowsHeight;\n      }\n\n      row = getCellFromPoint(\n        e.clientX - c.left,\n        e.clientY - c.top + rowOffset + $(document).scrollTop()\n      ).row;\n    }\n\n    cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        row: row,\n        cell: cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var y1 = getRowTop(row) - frozenRowOffset;\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x1 = 0;\n      }\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    // Don't scroll to frozen cells\n    if (cell < options.frozenColumn) {\n      return;\n    }\n\n    if (options.frozenRow > 0 && row < actualFrozenRow) {\n      scrollRowIntoView(row, doPaging);\n    } else {\n      // always scroll like normal slickgrid.\n      scrollRowIntoView(row, doPaging);\n    }\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n      right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n      scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\n    if (left < scrollLeft) {\n      $viewportScrollContainerX.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewportScrollContainerX.scrollLeft(\n        Math.min(left, right - $viewportScrollContainerX[0].clientWidth)\n      );\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass('active');\n      if (rowsCache[activeRow]) {\n        $(rowsCache[activeRow].rowNode).removeClass('active');\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      var $activeCellNode = $(activeCellNode);\n      var $activeCellOffset = $activeCellNode.offset();\n\n      var rowOffset = Math.floor(\n        $activeCellNode.parents('.grid-canvas').offset().top\n      );\n      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\n      if (hasFrozenRows && isBottom) {\n        rowOffset -= options.frozenBottom\n          ? $canvasTopL.height()\n          : frozenRowsHeight;\n      }\n\n      var cell = getCellFromPoint(\n        $activeCellOffset.left,\n        Math.ceil($activeCellOffset.top) - rowOffset\n      );\n\n      activeRow = cell.row;\n      activeCell = activePosX = activeCell = activePosX = getCellFromNode(\n        activeCellNode[0]\n      );\n\n      $activeCellNode.addClass('active');\n      if (rowsCache[activeRow]) {\n        $(rowsCache[activeRow].rowNode).addClass('active');\n      }\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      if (\n        options.editable &&\n        opt_editMode &&\n        isCellPotentiallyEditable(activeRow, activeCell)\n      ) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function() {\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged) {\n      setTimeout(scrollActiveCellIntoView, 50);\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass('editable invalid');\n      if (d) {\n        var column = columns[activeCell];\n        activeCellNode[0].innerHTML = callFormatter(\n          activeRow,\n          activeCell,\n          getDataItemValueForColumn(d, column),\n          column,\n          d\n        );\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor) {\n    if (!activeCellNode) {\n      return;\n    }\n    if (!options.editable) {\n      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (\n      trigger(self.onBeforeEditCell, {\n        row: activeRow,\n        cell: activeCell,\n        item: item,\n        column: columnDef\n      }) === false\n    ) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass('editable');\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor) {\n      activeCellNode[0].innerHTML = '';\n    }\n\n    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode[0]),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body) {\n      if (\n        box.visible &&\n        elem.scrollHeight != elem.offsetHeight &&\n        $(elem).css('overflowY') != 'visible'\n      ) {\n        box.visible =\n          box.bottom > elem.scrollTop &&\n          box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (\n        box.visible &&\n        elem.scrollWidth != elem.offsetWidth &&\n        $(elem).css('overflowX') != 'visible'\n      ) {\n        box.visible =\n          box.right > elem.scrollLeft &&\n          box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode[0]);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollActiveCellIntoView() {\n    if (activeRow != null && activeCell != null) {\n      scrollCellIntoView(activeRow, activeCell);\n    }\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n    if (\n      !hasFrozenRows ||\n      (!options.frozenBottom && row > actualFrozenRow - 1) ||\n      (options.frozenBottom && row < actualFrozenRow - 1)\n    ) {\n      var viewportScrollH = $viewportScrollContainerY.height();\n\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom =\n        (row + 1) * options.rowHeight -\n        viewportScrollH +\n        (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if (\n        (row + 1) * options.rowHeight >\n        scrollTop + viewportScrollH + offset\n      ) {\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n    }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n        prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData =\n      columns[cell] &&\n      (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n    var colspan = columnData && columnData.colspan;\n    if (colspan === '*') {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        row: row,\n        cell: cell,\n        posX: cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      row: row,\n      cell: firstFocusableCell,\n      posX: firstFocusableCell\n    };\n    var pos;\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos) {\n        return null;\n      }\n      if (pos.cell >= cell) {\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          row: row,\n          cell: prevCell,\n          posX: posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          row: row,\n          cell: prevCell,\n          posX: posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)) {\n        return {\n          row: row,\n          cell: cell,\n          posX: cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null) {\n        return {\n          row: row,\n          cell: firstFocusableCell,\n          posX: firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)) {\n        return {\n          row: row,\n          cell: cell,\n          posX: cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n      if (pos) {\n        break;\n      }\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null) {\n        pos = {\n          row: row,\n          cell: lastSelectableCell,\n          posX: lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight() {\n    return navigate('right');\n  }\n\n  function navigateLeft() {\n    return navigate('left');\n  }\n\n  function navigateDown() {\n    return navigate('down');\n  }\n\n  function navigateUp() {\n    return navigate('up');\n  }\n\n  function navigateNext() {\n    return navigate('next');\n  }\n\n  function navigatePrev() {\n    return navigate('prev');\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != 'prev' && dir != 'next') {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      up: -1,\n      down: 1,\n      left: -1,\n      right: 1,\n      prev: -1,\n      next: 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      up: gotoUp,\n      down: gotoDown,\n      left: gotoLeft,\n      right: gotoRight,\n      prev: gotoPrev,\n      next: gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos) {\n      if (\n        hasFrozenRows &&\n        options.frozenBottom & (pos.row == getDataLength())\n      ) {\n        return;\n      }\n\n      var isAddNewRow = pos.row == getDataLength();\n\n      if (\n        (!options.frozenBottom && pos.row >= actualFrozenRow) ||\n        (options.frozenBottom && pos.row < actualFrozenRow)\n      ) {\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      }\n\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell) {\n    if (!initialized) {\n      return;\n    }\n    if (\n      row > getDataLength() ||\n      row < 0 ||\n      cell >= columns.length ||\n      cell < 0\n    ) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (\n      !options.enableCellNavigation ||\n      row >= getDataLengthIncludingAddNew() ||\n      row < 0 ||\n      cell >= columns.length ||\n      cell < 0\n    ) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (\n      columnMetadata &&\n      columns[cell] &&\n      columnMetadata[columns[cell].id] &&\n      typeof columnMetadata[columns[cell].id].focusable === 'boolean'\n    ) {\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (\n      columnMetadata &&\n      columnMetadata[cell] &&\n      typeof columnMetadata[cell].focusable === 'boolean'\n    ) {\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell] && columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (\n      row >= getDataLength() ||\n      row < 0 ||\n      cell >= columns.length ||\n      cell < 0\n    ) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata =\n      rowMetadata &&\n      rowMetadata.columns &&\n      (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit) {\n    if (!initialized) {\n      return;\n    }\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(\n      newCell,\n      forceEdit || row === getDataLength() || options.autoEdit\n    );\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor) {\n      setFocus();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function() {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              },\n              undo: function() {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass('invalid');\n          $(activeCellNode).width(); // force layout\n          $(activeCellNode).addClass('invalid');\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function() {\n    var s = '';\n\n    s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n    s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n    s += '\\n' + 'renderedRows:  ' + renderedRows;\n    s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n    s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n    s += '\\n' + 'n(umber of pages):  ' + n;\n    s += '\\n' + '(current) page:  ' + page;\n    s += '\\n' + 'page height (ph):  ' + ph;\n    s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function(expr) {\n    return eval(expr);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  $.extend(this, {\n    slickGridVersion: '2.1',\n\n    // Events\n    onScroll: new Slick.Event(),\n    onSort: new Slick.Event(),\n    onHeaderMouseEnter: new Slick.Event(),\n    onHeaderMouseLeave: new Slick.Event(),\n    onHeaderContextMenu: new Slick.Event(),\n    onHeaderClick: new Slick.Event(),\n    onHeaderCellRendered: new Slick.Event(),\n    onBeforeHeaderCellDestroy: new Slick.Event(),\n    onHeaderRowCellRendered: new Slick.Event(),\n    onFooterRowCellRendered: new Slick.Event(),\n    onBeforeHeaderRowCellDestroy: new Slick.Event(),\n    onBeforeFooterRowCellDestroy: new Slick.Event(),\n    onMouseEnter: new Slick.Event(),\n    onMouseLeave: new Slick.Event(),\n    onClick: new Slick.Event(),\n    onDblClick: new Slick.Event(),\n    onContextMenu: new Slick.Event(),\n    onKeyDown: new Slick.Event(),\n    onAddNewRow: new Slick.Event(),\n    onValidationError: new Slick.Event(),\n    onViewportChanged: new Slick.Event(),\n    onColumnsReordered: new Slick.Event(),\n    onColumnsResized: new Slick.Event(),\n    onCellChange: new Slick.Event(),\n    onBeforeEditCell: new Slick.Event(),\n    onBeforeCellEditorDestroy: new Slick.Event(),\n    onBeforeDestroy: new Slick.Event(),\n    onActiveCellChanged: new Slick.Event(),\n    onActiveCellPositionChanged: new Slick.Event(),\n    onDragInit: new Slick.Event(),\n    onDragStart: new Slick.Event(),\n    onDrag: new Slick.Event(),\n    onDragEnd: new Slick.Event(),\n    onSelectedRowsChanged: new Slick.Event(),\n    onCellCssStylesChanged: new Slick.Event(),\n\n    // Methods\n    registerPlugin: registerPlugin,\n    unregisterPlugin: unregisterPlugin,\n    getColumns: getColumns,\n    setColumns: setColumns,\n    getColumnIndex: getColumnIndex,\n    updateColumnHeader: updateColumnHeader,\n    setSortColumn: setSortColumn,\n    setSortColumns: setSortColumns,\n    getSortColumns: getSortColumns,\n    autosizeColumns: autosizeColumns,\n    getOptions: getOptions,\n    setOptions: setOptions,\n    getData: getData,\n    getDataLength: getDataLength,\n    getDataItem: getDataItem,\n    setData: setData,\n    getSelectionModel: getSelectionModel,\n    setSelectionModel: setSelectionModel,\n    getSelectedRows: getSelectedRows,\n    setSelectedRows: setSelectedRows,\n    getContainerNode: getContainerNode,\n\n    render: render,\n    invalidate: invalidate,\n    invalidateRow: invalidateRow,\n    invalidateRows: invalidateRows,\n    invalidateAllRows: invalidateAllRows,\n    updateCell: updateCell,\n    updateRow: updateRow,\n    getViewport: getVisibleRange,\n    getRenderedRange: getRenderedRange,\n    resizeCanvas: resizeCanvas,\n    updateRowCount: updateRowCount,\n    scrollRowIntoView: scrollRowIntoView,\n    scrollRowToTop: scrollRowToTop,\n    scrollCellIntoView: scrollCellIntoView,\n    getCanvasNode: getCanvasNode,\n    getCanvases: getCanvases,\n    getActiveCanvasNode: getActiveCanvasNode,\n    setActiveCanvasNode: setActiveCanvasNode,\n    getViewportNode: getViewportNode,\n    getActiveViewportNode: getActiveViewportNode,\n    setActiveViewportNode: setActiveViewportNode,\n    focus: setFocus,\n\n    getCellFromPoint: getCellFromPoint,\n    getCellFromEvent: getCellFromEvent,\n    getActiveCell: getActiveCell,\n    setActiveCell: setActiveCell,\n    getActiveCellNode: getActiveCellNode,\n    getActiveCellPosition: getActiveCellPosition,\n    resetActiveCell: resetActiveCell,\n    editActiveCell: makeActiveCellEditable,\n    getCellEditor: getCellEditor,\n    getCellNode: getCellNode,\n    getCellNodeBox: getCellNodeBox,\n    canCellBeSelected: canCellBeSelected,\n    canCellBeActive: canCellBeActive,\n    navigatePrev: navigatePrev,\n    navigateNext: navigateNext,\n    navigateUp: navigateUp,\n    navigateDown: navigateDown,\n    navigateLeft: navigateLeft,\n    navigateRight: navigateRight,\n    navigatePageUp: navigatePageUp,\n    navigatePageDown: navigatePageDown,\n    gotoCell: gotoCell,\n    getTopPanel: getTopPanel,\n    setTopPanelVisibility: setTopPanelVisibility,\n    setHeaderRowVisibility: setHeaderRowVisibility,\n    getHeaderRow: getHeaderRow,\n    getHeaderRowColumn: getHeaderRowColumn,\n    setFooterRowVisibility: setFooterRowVisibility,\n    getFooterRow: getFooterRow,\n    getFooterRowColumn: getFooterRowColumn,\n    getGridPosition: getGridPosition,\n    flashCell: flashCell,\n    addCellCssStyles: addCellCssStyles,\n    setCellCssStyles: setCellCssStyles,\n    removeCellCssStyles: removeCellCssStyles,\n    getCellCssStyles: getCellCssStyles,\n    getFrozenRowOffset: getFrozenRowOffset,\n\n    init: finishInitialization,\n    destroy: destroy,\n\n    // IEditor implementation\n    getEditorLock: getEditorLock,\n    getEditController: getEditController\n  });\n\n  init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/slick-frozen.grid.js"],"sourceRoot":""}